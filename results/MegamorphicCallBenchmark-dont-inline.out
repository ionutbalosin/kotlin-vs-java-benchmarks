# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallJavaBenchmark.BimorphicJava
# Parameters: (param = 3)

# Run progress: 0.00% complete, ETA 00:04:00
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 6.611 ns/op
# Warmup Iteration   2: 6.170 ns/op
# Warmup Iteration   3: 6.125 ns/op
# Warmup Iteration   4: 6.051 ns/op
# Warmup Iteration   5: 6.254 ns/op
Iteration   1: 6.160 ns/op
Iteration   2: 6.213 ns/op
Iteration   3: 6.107 ns/op
Iteration   4: 6.199 ns/op
Iteration   5: 6.129 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 4.17% complete, ETA 00:04:36
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 8.115 ns/op
# Warmup Iteration   2: 7.266 ns/op
# Warmup Iteration   3: 6.984 ns/op
# Warmup Iteration   4: 6.932 ns/op
# Warmup Iteration   5: 6.931 ns/op
Iteration   1: 7.020 ns/op
Iteration   2: 6.992 ns/op
Iteration   3: 7.100 ns/op
Iteration   4: 7.483 ns/op
Iteration   5: 7.130 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 8.33% complete, ETA 00:04:20
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 7.293 ns/op
# Warmup Iteration   2: 6.900 ns/op
# Warmup Iteration   3: 6.920 ns/op
# Warmup Iteration   4: 7.223 ns/op
# Warmup Iteration   5: 7.221 ns/op
Iteration   1: 7.268 ns/op
Iteration   2: 6.874 ns/op
Iteration   3: 7.369 ns/op
Iteration   4: 7.137 ns/op
Iteration   5: 7.299 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallJavaBenchmark.BimorphicJava":
  6.832 ±(99.9%) 0.549 ns/op [Average]
  (min, avg, max) = (6.107, 6.832, 7.483), stdev = 0.513
  CI (99.9%): [6.283, 7.381] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallJavaBenchmark.BimorphicJava:·asm":
PrintAssembly processed: 49158 total address lines.
Perf output processed (skipped 6.396 seconds):
 Column 1: cycles (5090 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 (61 bytes) 

             nul chk table  [0x00007f280ccdcca8,0x00007f280ccdccb8] = 16
            ----------------------------------------------------------------------
            org/ib/benchmark/MegamorphicCallJavaBenchmark.compute(Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath;I)I  [0x00007f280ccdcb20, 0x00007f280ccdcbb8]  152 bytes
            [Entry Point]
            [Verified Entry Point]
            [Constants]
              # {method} {0x00007f27f9fc1e58} &apos;compute&apos; &apos;(Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath;I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark&apos;
              # parm0:    rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath&apos;
              # parm1:    rdx       = int
              #           [sp+0x30]  (sp of caller)
  4.97%       0x00007f280ccdcb20: mov    DWORD PTR [rsp-0x14000],eax
  4.36%       0x00007f280ccdcb27: push   rbp
  3.05%       0x00007f280ccdcb28: sub    rsp,0x20           ;*synchronization entry
                                                            ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@-1 (line 38)
  4.40%       0x00007f280ccdcb2c: mov    r10d,DWORD PTR [rsi+0x8]  ; implicit exception: dispatches to 0x00007f280ccdcb72
  2.53%       0x00007f280ccdcb30: cmp    r10d,0xf3160       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;)}
         ╭    0x00007f280ccdcb37: je     0x00007f280ccdcb4b
  2.08%  │    0x00007f280ccdcb39: cmp    r10d,0xf2f50       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;)}
  1.34%  │╭   0x00007f280ccdcb40: jne    0x00007f280ccdcb5e  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         ││                                                 ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
  1.49%  ││   0x00007f280ccdcb42: mov    eax,edx
  0.98%  ││   0x00007f280ccdcb44: shl    eax,0x4
  1.81%  ││   0x00007f280ccdcb47: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         ││                                                 ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 126)
         ││                                                 ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
  0.98%  ││╭  0x00007f280ccdcb49: jmp    0x00007f280ccdcb4e
  1.30%  ↘││  0x00007f280ccdcb4b: imul   eax,edx,0x13       ;*synchronization entry
          ││                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@-1 (line 38)
  2.40%   │↘  0x00007f280ccdcb4e: add    rsp,0x20
  1.77%   │   0x00007f280ccdcb52: pop    rbp
  2.34%   │   0x00007f280ccdcb53: mov    r10,QWORD PTR [r15+0x108]
  2.63%   │   0x00007f280ccdcb5a: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.18%   │   0x00007f280ccdcb5d: ret    
          ↘   0x00007f280ccdcb5e: mov    rbp,rsi
              0x00007f280ccdcb61: mov    DWORD PTR [rsp],edx
              0x00007f280ccdcb64: mov    esi,0xffffffc6
              0x00007f280ccdcb69: xchg   ax,ax
              0x00007f280ccdcb6b: call   0x00007f280cc6a900  ; ImmutableOopMap{rbp=Oop }
                                                            ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
              0x00007f280ccdcb70: ud2    
              0x00007f280ccdcb72: mov    esi,0xfffffff6
....................................................................................................
 40.61%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub, version 128 (120 bytes) 

             0x00007f280cce20b1: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@32 (line 197)
                                                           ; implicit exception: dispatches to 0x00007f280cce21e6
             0x00007f280cce20b9: test   r10d,r10d
             0x00007f280cce20bc: jne    0x00007f280cce2183  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
             0x00007f280cce20c2: mov    r10d,0x1
             0x00007f280cce20c8: mov    QWORD PTR [rsp+0x8],r10
         ╭   0x00007f280cce20cd: jmp    0x00007f280cce20d5
         │   0x00007f280cce20cf: nop
  1.45%  │↗  0x00007f280cce20d0: mov    QWORD PTR [rsp+0x8],rbx  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@38 (line 198)
  1.18%  ↘│  0x00007f280cce20d5: mov    r11d,DWORD PTR [rbp+0xc]
  0.94%   │  0x00007f280cce20d9: movabs r10,0x71b85b5c0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b5c0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$BimorphicJavaState&apos;)}
  0.88%   │  0x00007f280cce20e3: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@4 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.38%   │  0x00007f280cce20e7: mov    rsi,r11
  1.14%   │  0x00007f280cce20ea: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@1 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  0.75%   │  0x00007f280cce20ee: nop
  0.96%   │  0x00007f280cce20ef: call   0x00007f280cc69400  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@7 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
          │                                                ;   {static_call}
  1.41%   │  0x00007f280cce20f4: mov    DWORD PTR [rsp+0x40],eax
  2.42%   │  0x00007f280cce20f8: mov    r11d,DWORD PTR [rbp+0x10]
  1.14%   │  0x00007f280cce20fc: movabs r10,0x71b85b5c0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b5c0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$BimorphicJavaState&apos;)}
  1.02%   │  0x00007f280cce2106: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@14 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.36%   │  0x00007f280cce210a: mov    rsi,r11
  0.94%   │  0x00007f280cce210d: shl    rsi,0x3            ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@11 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.24%   │  0x00007f280cce2111: xchg   ax,ax
  1.16%   │  0x00007f280cce2113: call   0x00007f280cc69400  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@17 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
          │                                                ;   {static_call}
  2.91%   │  0x00007f280cce2118: mov    edx,eax
  0.83%   │  0x00007f280cce211a: add    edx,DWORD PTR [rsp+0x40]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@20 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.36%   │  0x00007f280cce211e: mov    rsi,QWORD PTR [rsp]
  1.83%   │  0x00007f280cce2122: nop
  0.98%   │  0x00007f280cce2123: call   0x00007f280cc68f00  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@22 (line 195)
          │                                                ;   {optimized virtual_call}
  2.24%   │  0x00007f280cce2128: mov    r10,QWORD PTR [rsp+0x38]
  2.24%   │  0x00007f280cce212d: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  0.96%   │  0x00007f280cce2135: mov    r11,QWORD PTR [r15+0x108]
  1.18%   │  0x00007f280cce213c: mov    rbx,QWORD PTR [rsp+0x8]
  1.20%   │  0x00007f280cce2141: add    rbx,0x1            ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  0.59%   │  0x00007f280cce2145: test   DWORD PTR [r11],eax  ;   {poll}
  1.00%   │  0x00007f280cce2148: test   r10d,r10d
          ╰  0x00007f280cce214b: je     0x00007f280cce20d0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@38 (line 198)
             0x00007f280cce2151: movabs r10,0x7f2820107a00
             0x00007f280cce215b: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@39 (line 198)
             0x00007f280cce215e: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f280cce2163: mov    QWORD PTR [r10+0x18],rbx  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@54 (line 200)
             0x00007f280cce2167: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 37.68%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 123 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f280cce3220: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f280cce3224: movabs r12,0x800000000
            0x00007f280cce322e: add    r10,r12
            0x00007f280cce3231: xor    r12,r12
            0x00007f280cce3234: cmp    rax,r10
            0x00007f280cce3237: jne    0x00007f280cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007f280cce323d: data16 xchg ax,ax
          [Verified Entry Point]
  2.42%     0x00007f280cce3240: mov    DWORD PTR [rsp-0x14000],eax
  2.10%     0x00007f280cce3247: push   rbp
  1.39%     0x00007f280cce3248: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  2.36%     0x00007f280cce324c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.75%     0x00007f280cce3253: mov    r8d,edx
  1.14%     0x00007f280cce3256: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.88%     0x00007f280cce325d: mov    r9d,edx
  1.30%     0x00007f280cce3260: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.79%     0x00007f280cce3263: cmp    r9d,r8d
         ╭  0x00007f280cce3266: je     0x00007f280cce3278  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  1.32%  │  0x00007f280cce3268: add    rsp,0x20
  1.02%  │  0x00007f280cce326c: pop    rbp
  1.71%  │  0x00007f280cce326d: mov    r10,QWORD PTR [r15+0x108]
  0.94%  │  0x00007f280cce3274: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.06%  │  0x00007f280cce3277: ret    
         ↘  0x00007f280cce3278: mov    rbp,rsi
            0x00007f280cce327b: mov    DWORD PTR [rsp],edx
            0x00007f280cce327e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f280cce3283: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f280cce3288: mov    esi,0xffffff4d
            0x00007f280cce328d: xchg   ax,ax
            0x00007f280cce328f: call   0x00007f280cc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 19.17%  <total for region 3>

....[Hottest Regions]...............................................................................
 40.61%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 (61 bytes) 
 37.68%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub, version 128 (120 bytes) 
 19.17%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 123 (55 bytes) 
  1.73%       kernel  [unknown] (6 bytes) 
  0.08%       kernel  [unknown] (3 bytes) 
  0.06%       kernel  [unknown] (5 bytes) 
  0.04%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.35%  <...other 18 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 40.61%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 
 37.68%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub, version 128 
 19.17%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 123 
  2.22%       kernel  [unknown] 
  0.04%  interpreter  method entry point (kind = zerolocals)  
  0.02%    libjvm.so  _ZN20ThreadSafepointState23examine_state_of_threadEv 
  0.02%  interpreter  checkcast  192 checkcast  
  0.02%    libjvm.so  _ZN9PhaseLive7computeEj 
  0.02%  interpreter  invoke return entry points  
  0.02%    libjvm.so  _ZN22ConstantPoolCacheEntry15set_direct_callEN9Bytecodes4CodeERK12methodHandleb 
  0.02%    libjvm.so  _ZN14PhaseIdealLoop15build_loop_lateER9VectorSetR9Node_ListR10Node_Stack 
  0.02%    libjvm.so  _ZN16BacktraceBuilder4pushEP6MethodiP6Thread 
  0.02%  interpreter  iload_3  29 iload_3  
  0.02%    libjvm.so  _ZN14AccessInternal19PostRuntimeDispatchIN12G1BarrierSet13AccessBarrierILm2670710ES1_EELNS_11BarrierTypeE8ELm2670710EE18oop_access_barrierI8HeapWordEEbP12arrayOopDescmPT_S9_mSB_m 
  0.02%    libjvm.so  _ZN16IndexSetIterator16advance_and_nextEv 
  0.02%  interpreter  invokestatic  184 invokestatic  
  0.02%    libjvm.so  _ZN28G1YoungRemSetSamplingClosure14do_heap_regionEP10HeapRegion 
  0.02%  interpreter  iushr  124 iushr  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.47%           c2
  2.22%       kernel
  0.16%    libjvm.so
  0.14%  interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49141 total address lines.
Perf output processed (skipped 6.334 seconds):
 Column 1: cycles (5107 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 (61 bytes) 

             nul chk table  [0x00007f2578cdcda8,0x00007f2578cdcdb8] = 16
            ----------------------------------------------------------------------
            org/ib/benchmark/MegamorphicCallJavaBenchmark.compute(Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath;I)I  [0x00007f2578cdcc20, 0x00007f2578cdccb8]  152 bytes
            [Entry Point]
            [Verified Entry Point]
            [Constants]
              # {method} {0x00007f25787f1e58} &apos;compute&apos; &apos;(Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath;I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark&apos;
              # parm0:    rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath&apos;
              # parm1:    rdx       = int
              #           [sp+0x30]  (sp of caller)
  4.78%       0x00007f2578cdcc20: mov    DWORD PTR [rsp-0x14000],eax
  4.39%       0x00007f2578cdcc27: push   rbp
  2.21%       0x00007f2578cdcc28: sub    rsp,0x20           ;*synchronization entry
                                                            ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@-1 (line 38)
  4.52%       0x00007f2578cdcc2c: mov    r10d,DWORD PTR [rsi+0x8]  ; implicit exception: dispatches to 0x00007f2578cdcc72
  2.94%       0x00007f2578cdcc30: cmp    r10d,0xf3160       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;)}
         ╭    0x00007f2578cdcc37: je     0x00007f2578cdcc4b
  1.47%  │    0x00007f2578cdcc39: cmp    r10d,0xf2f50       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;)}
  1.08%  │╭   0x00007f2578cdcc40: jne    0x00007f2578cdcc5e  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         ││                                                 ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
  1.06%  ││   0x00007f2578cdcc42: mov    eax,edx
  1.04%  ││   0x00007f2578cdcc44: shl    eax,0x4
  1.72%  ││   0x00007f2578cdcc47: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         ││                                                 ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 126)
         ││                                                 ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
  0.74%  ││╭  0x00007f2578cdcc49: jmp    0x00007f2578cdcc4e
  1.49%  ↘││  0x00007f2578cdcc4b: imul   eax,edx,0x13       ;*synchronization entry
          ││                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@-1 (line 38)
  2.11%   │↘  0x00007f2578cdcc4e: add    rsp,0x20
  2.11%   │   0x00007f2578cdcc52: pop    rbp
  1.98%   │   0x00007f2578cdcc53: mov    r10,QWORD PTR [r15+0x108]
  2.92%   │   0x00007f2578cdcc5a: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.70%   │   0x00007f2578cdcc5d: ret    
          ↘   0x00007f2578cdcc5e: mov    rbp,rsi
              0x00007f2578cdcc61: mov    DWORD PTR [rsp],edx
              0x00007f2578cdcc64: mov    esi,0xffffffc6
              0x00007f2578cdcc69: xchg   ax,ax
              0x00007f2578cdcc6b: call   0x00007f2578c6a900  ; ImmutableOopMap{rbp=Oop }
                                                            ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
              0x00007f2578cdcc70: ud2    
              0x00007f2578cdcc72: mov    esi,0xfffffff6
....................................................................................................
 39.26%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub, version 128 (120 bytes) 

             0x00007f2578ce21b1: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@32 (line 197)
                                                           ; implicit exception: dispatches to 0x00007f2578ce22e6
             0x00007f2578ce21b9: test   r10d,r10d
             0x00007f2578ce21bc: jne    0x00007f2578ce2283  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
             0x00007f2578ce21c2: mov    r10d,0x1
             0x00007f2578ce21c8: mov    QWORD PTR [rsp+0x8],r10
         ╭   0x00007f2578ce21cd: jmp    0x00007f2578ce21d5
         │   0x00007f2578ce21cf: nop
  1.33%  │↗  0x00007f2578ce21d0: mov    QWORD PTR [rsp+0x8],rbx  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@38 (line 198)
  1.25%  ↘│  0x00007f2578ce21d5: mov    r11d,DWORD PTR [rbp+0xc]
  0.65%   │  0x00007f2578ce21d9: movabs r10,0x71b85bc90    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85bc90} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$BimorphicJavaState&apos;)}
  1.37%   │  0x00007f2578ce21e3: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@4 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.45%   │  0x00007f2578ce21e7: mov    rsi,r11
  1.27%   │  0x00007f2578ce21ea: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@1 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  0.70%   │  0x00007f2578ce21ee: nop
  1.17%   │  0x00007f2578ce21ef: call   0x00007f2578c69400  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@7 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
          │                                                ;   {static_call}
  1.47%   │  0x00007f2578ce21f4: mov    DWORD PTR [rsp+0x40],eax
  2.39%   │  0x00007f2578ce21f8: mov    r11d,DWORD PTR [rbp+0x10]
  1.41%   │  0x00007f2578ce21fc: movabs r10,0x71b85bc90    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85bc90} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$BimorphicJavaState&apos;)}
  0.96%   │  0x00007f2578ce2206: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@14 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.00%   │  0x00007f2578ce220a: mov    rsi,r11
  1.00%   │  0x00007f2578ce220d: shl    rsi,0x3            ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@11 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.02%   │  0x00007f2578ce2211: xchg   ax,ax
  1.12%   │  0x00007f2578ce2213: call   0x00007f2578c69400  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@17 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
          │                                                ;   {static_call}
  3.04%   │  0x00007f2578ce2218: mov    edx,eax
  0.82%   │  0x00007f2578ce221a: add    edx,DWORD PTR [rsp+0x40]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@20 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.27%   │  0x00007f2578ce221e: mov    rsi,QWORD PTR [rsp]
  1.57%   │  0x00007f2578ce2222: nop
  1.02%   │  0x00007f2578ce2223: call   0x00007f2578c68f00  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@22 (line 195)
          │                                                ;   {optimized virtual_call}
  1.96%   │  0x00007f2578ce2228: mov    r10,QWORD PTR [rsp+0x38]
  2.25%   │  0x00007f2578ce222d: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  0.98%   │  0x00007f2578ce2235: mov    r11,QWORD PTR [r15+0x108]
  1.14%   │  0x00007f2578ce223c: mov    rbx,QWORD PTR [rsp+0x8]
  1.35%   │  0x00007f2578ce2241: add    rbx,0x1            ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  0.61%   │  0x00007f2578ce2245: test   DWORD PTR [r11],eax  ;   {poll}
  0.96%   │  0x00007f2578ce2248: test   r10d,r10d
          ╰  0x00007f2578ce224b: je     0x00007f2578ce21d0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@38 (line 198)
             0x00007f2578ce2251: movabs r10,0x7f258c6bba00
             0x00007f2578ce225b: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@39 (line 198)
             0x00007f2578ce225e: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f2578ce2263: mov    QWORD PTR [r10+0x18],rbx  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@54 (line 200)
             0x00007f2578ce2267: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 37.52%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 123 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f2578ce3320: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f2578ce3324: movabs r12,0x800000000
            0x00007f2578ce332e: add    r10,r12
            0x00007f2578ce3331: xor    r12,r12
            0x00007f2578ce3334: cmp    rax,r10
            0x00007f2578ce3337: jne    0x00007f2578c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f2578ce333d: data16 xchg ax,ax
          [Verified Entry Point]
  2.19%     0x00007f2578ce3340: mov    DWORD PTR [rsp-0x14000],eax
  2.35%     0x00007f2578ce3347: push   rbp
  1.14%     0x00007f2578ce3348: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  2.57%     0x00007f2578ce334c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.61%     0x00007f2578ce3353: mov    r8d,edx
  1.21%     0x00007f2578ce3356: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.90%     0x00007f2578ce335d: mov    r9d,edx
  1.35%     0x00007f2578ce3360: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.88%     0x00007f2578ce3363: cmp    r9d,r8d
         ╭  0x00007f2578ce3366: je     0x00007f2578ce3378  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  1.68%  │  0x00007f2578ce3368: add    rsp,0x20
  0.96%  │  0x00007f2578ce336c: pop    rbp
  1.49%  │  0x00007f2578ce336d: mov    r10,QWORD PTR [r15+0x108]
  0.84%  │  0x00007f2578ce3374: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.43%  │  0x00007f2578ce3377: ret    
         ↘  0x00007f2578ce3378: mov    rbp,rsi
            0x00007f2578ce337b: mov    DWORD PTR [rsp],edx
            0x00007f2578ce337e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f2578ce3383: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f2578ce3388: mov    esi,0xffffff4d
            0x00007f2578ce338d: xchg   ax,ax
            0x00007f2578ce338f: call   0x00007f2578c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 19.60%  <total for region 3>

....[Hottest Regions]...............................................................................
 39.26%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 (61 bytes) 
 37.52%            c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub, version 128 (120 bytes) 
 19.60%            c2  org.openjdk.jmh.infra.Blackhole::consume, version 123 (55 bytes) 
  2.92%        kernel  [unknown] (6 bytes) 
  0.08%        kernel  [unknown] (5 bytes) 
  0.06%        kernel  [unknown] (0 bytes) 
  0.04%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.25%  <...other 13 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 39.26%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 
 37.52%            c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub, version 128 
 19.60%            c2  org.openjdk.jmh.infra.Blackhole::consume, version 123 
  3.39%        kernel  [unknown] 
  0.02%     libjvm.so  _ZN12PhaseChaitin19interfere_with_liveEjP8IndexSet 
  0.02%     libjvm.so  _ZN12PhaseChaitin16gather_lrg_masksEb 
  0.02%     libjvm.so  _ZN6IfNode5IdealEP8PhaseGVNb 
  0.02%   interpreter  method entry point (kind = native)  
  0.02%     libjvm.so  _ZN20SafepointSynchronize5beginEv 
  0.02%   interpreter  invokestatic  184 invokestatic  
  0.02%  libc-2.28.so  __memset_avx2_unaligned_erms 
  0.02%   interpreter  new  187 new  
  0.02%   interpreter  pop  87 pop  
  0.02%   interpreter  lreturn  173 lreturn  
  0.02%     libjvm.so  _ZN10fileStream5writeEPKcm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.38%            c2
  3.39%        kernel
  0.10%     libjvm.so
  0.10%   interpreter
  0.02%  libc-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49141 total address lines.
Perf output processed (skipped 6.392 seconds):
 Column 1: cycles (5014 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 (61 bytes) 

             nul chk table  [0x00007fe6f8cdc9a8,0x00007fe6f8cdc9b8] = 16
            ----------------------------------------------------------------------
            org/ib/benchmark/MegamorphicCallJavaBenchmark.compute(Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath;I)I  [0x00007fe6f8cdc820, 0x00007fe6f8cdc8b8]  152 bytes
            [Entry Point]
            [Verified Entry Point]
            [Constants]
              # {method} {0x00007fe6e94d1e58} &apos;compute&apos; &apos;(Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath;I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark&apos;
              # parm0:    rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath&apos;
              # parm1:    rdx       = int
              #           [sp+0x30]  (sp of caller)
  4.93%       0x00007fe6f8cdc820: mov    DWORD PTR [rsp-0x14000],eax
  4.05%       0x00007fe6f8cdc827: push   rbp
  2.63%       0x00007fe6f8cdc828: sub    rsp,0x20           ;*synchronization entry
                                                            ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@-1 (line 38)
  4.23%       0x00007fe6f8cdc82c: mov    r10d,DWORD PTR [rsi+0x8]  ; implicit exception: dispatches to 0x00007fe6f8cdc872
  2.83%       0x00007fe6f8cdc830: cmp    r10d,0xf3160       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;)}
         ╭    0x00007fe6f8cdc837: je     0x00007fe6f8cdc84b
  2.01%  │    0x00007fe6f8cdc839: cmp    r10d,0xf2f50       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;)}
  0.96%  │╭   0x00007fe6f8cdc840: jne    0x00007fe6f8cdc85e  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         ││                                                 ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
  1.42%  ││   0x00007fe6f8cdc842: mov    eax,edx
  0.78%  ││   0x00007fe6f8cdc844: shl    eax,0x4
  1.30%  ││   0x00007fe6f8cdc847: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         ││                                                 ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 126)
         ││                                                 ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
  1.26%  ││╭  0x00007fe6f8cdc849: jmp    0x00007fe6f8cdc84e
  1.52%  ↘││  0x00007fe6f8cdc84b: imul   eax,edx,0x13       ;*synchronization entry
          ││                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@-1 (line 38)
  2.31%   │↘  0x00007fe6f8cdc84e: add    rsp,0x20
  2.11%   │   0x00007fe6f8cdc852: pop    rbp
  2.73%   │   0x00007fe6f8cdc853: mov    r10,QWORD PTR [r15+0x108]
  2.51%   │   0x00007fe6f8cdc85a: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.69%   │   0x00007fe6f8cdc85d: ret    
          ↘   0x00007fe6f8cdc85e: mov    rbp,rsi
              0x00007fe6f8cdc861: mov    DWORD PTR [rsp],edx
              0x00007fe6f8cdc864: mov    esi,0xffffffc6
              0x00007fe6f8cdc869: xchg   ax,ax
              0x00007fe6f8cdc86b: call   0x00007fe6f8c6a900  ; ImmutableOopMap{rbp=Oop }
                                                            ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
                                                            ;   {runtime_call UncommonTrapBlob}
              0x00007fe6f8cdc870: ud2    
              0x00007fe6f8cdc872: mov    esi,0xfffffff6
....................................................................................................
 40.27%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub, version 128 (120 bytes) 

             0x00007fe6f8ce1db1: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@32 (line 197)
                                                           ; implicit exception: dispatches to 0x00007fe6f8ce1ee6
             0x00007fe6f8ce1db9: test   r10d,r10d
             0x00007fe6f8ce1dbc: jne    0x00007fe6f8ce1e83  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
             0x00007fe6f8ce1dc2: mov    r10d,0x1
             0x00007fe6f8ce1dc8: mov    QWORD PTR [rsp+0x8],r10
         ╭   0x00007fe6f8ce1dcd: jmp    0x00007fe6f8ce1dd5
         │   0x00007fe6f8ce1dcf: nop
  1.08%  │↗  0x00007fe6f8ce1dd0: mov    QWORD PTR [rsp+0x8],rbx  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@38 (line 198)
  1.24%  ↘│  0x00007fe6f8ce1dd5: mov    r11d,DWORD PTR [rbp+0xc]
  0.88%   │  0x00007fe6f8ce1dd9: movabs r10,0x71b85b5c0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b5c0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$BimorphicJavaState&apos;)}
  1.00%   │  0x00007fe6f8ce1de3: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@4 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.42%   │  0x00007fe6f8ce1de7: mov    rsi,r11
  1.42%   │  0x00007fe6f8ce1dea: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@1 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  0.72%   │  0x00007fe6f8ce1dee: nop
  1.20%   │  0x00007fe6f8ce1def: call   0x00007fe6f8c69400  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@7 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
          │                                                ;   {static_call}
  1.62%   │  0x00007fe6f8ce1df4: mov    DWORD PTR [rsp+0x40],eax
  2.53%   │  0x00007fe6f8ce1df8: mov    r11d,DWORD PTR [rbp+0x10]
  1.10%   │  0x00007fe6f8ce1dfc: movabs r10,0x71b85b5c0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b5c0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$BimorphicJavaState&apos;)}
  1.00%   │  0x00007fe6f8ce1e06: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@14 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.16%   │  0x00007fe6f8ce1e0a: mov    rsi,r11
  1.18%   │  0x00007fe6f8ce1e0d: shl    rsi,0x3            ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@11 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.12%   │  0x00007fe6f8ce1e11: xchg   ax,ax
  0.98%   │  0x00007fe6f8ce1e13: call   0x00007fe6f8c69400  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@17 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
          │                                                ;   {static_call}
  3.07%   │  0x00007fe6f8ce1e18: mov    edx,eax
  0.86%   │  0x00007fe6f8ce1e1a: add    edx,DWORD PTR [rsp+0x40]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$BimorphicJavaState::bimorphicCall@20 (line 87)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::bimorphicCall@1 (line 50)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.55%   │  0x00007fe6f8ce1e1e: mov    rsi,QWORD PTR [rsp]
  1.28%   │  0x00007fe6f8ce1e22: nop
  0.56%   │  0x00007fe6f8ce1e23: call   0x00007fe6f8c68f00  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@22 (line 195)
          │                                                ;   {optimized virtual_call}
  2.41%   │  0x00007fe6f8ce1e28: mov    r10,QWORD PTR [rsp+0x38]
  2.27%   │  0x00007fe6f8ce1e2d: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  1.02%   │  0x00007fe6f8ce1e35: mov    r11,QWORD PTR [r15+0x108]
  1.38%   │  0x00007fe6f8ce1e3c: mov    rbx,QWORD PTR [rsp+0x8]
  1.14%   │  0x00007fe6f8ce1e41: add    rbx,0x1            ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  0.86%   │  0x00007fe6f8ce1e45: test   DWORD PTR [r11],eax  ;   {poll}
  1.00%   │  0x00007fe6f8ce1e48: test   r10d,r10d
          ╰  0x00007fe6f8ce1e4b: je     0x00007fe6f8ce1dd0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@38 (line 198)
             0x00007fe6f8ce1e51: movabs r10,0x7fe70ae01a00
             0x00007fe6f8ce1e5b: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@39 (line 198)
             0x00007fe6f8ce1e5e: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fe6f8ce1e63: mov    QWORD PTR [r10+0x18],rbx  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@54 (line 200)
             0x00007fe6f8ce1e67: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 37.99%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 123 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fe6f8ce2f20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fe6f8ce2f24: movabs r12,0x800000000
            0x00007fe6f8ce2f2e: add    r10,r12
            0x00007fe6f8ce2f31: xor    r12,r12
            0x00007fe6f8ce2f34: cmp    rax,r10
            0x00007fe6f8ce2f37: jne    0x00007fe6f8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fe6f8ce2f3d: data16 xchg ax,ax
          [Verified Entry Point]
  2.37%     0x00007fe6f8ce2f40: mov    DWORD PTR [rsp-0x14000],eax
  2.19%     0x00007fe6f8ce2f47: push   rbp
  1.22%     0x00007fe6f8ce2f48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  2.49%     0x00007fe6f8ce2f4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.74%     0x00007fe6f8ce2f53: mov    r8d,edx
  1.26%     0x00007fe6f8ce2f56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.16%     0x00007fe6f8ce2f5d: mov    r9d,edx
  1.60%     0x00007fe6f8ce2f60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.82%     0x00007fe6f8ce2f63: cmp    r9d,r8d
         ╭  0x00007fe6f8ce2f66: je     0x00007fe6f8ce2f78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  1.52%  │  0x00007fe6f8ce2f68: add    rsp,0x20
  0.70%  │  0x00007fe6f8ce2f6c: pop    rbp
  1.79%  │  0x00007fe6f8ce2f6d: mov    r10,QWORD PTR [r15+0x108]
  0.90%  │  0x00007fe6f8ce2f74: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.14%  │  0x00007fe6f8ce2f77: ret    
         ↘  0x00007fe6f8ce2f78: mov    rbp,rsi
            0x00007fe6f8ce2f7b: mov    DWORD PTR [rsp],edx
            0x00007fe6f8ce2f7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fe6f8ce2f83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fe6f8ce2f88: mov    esi,0xffffff4d
            0x00007fe6f8ce2f8d: xchg   ax,ax
            0x00007fe6f8ce2f8f: call   0x00007fe6f8c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 19.88%  <total for region 3>

....[Hottest Regions]...............................................................................
 40.27%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 (61 bytes) 
 37.99%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub, version 128 (120 bytes) 
 19.88%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 123 (55 bytes) 
  1.36%       kernel  [unknown] (6 bytes) 
  0.04%       kernel  [unknown] (2 bytes) 
  0.04%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%  interpreter  aload  25 aload  (0 bytes) 
  0.02%  interpreter  ifne  154 ifne  (0 bytes) 
  0.02%    libjvm.so  _ZN12PhaseChaitin16gather_lrg_masksEb (0 bytes) 
  0.02%    libjvm.so  _ZNK8CodeBlob9is_zombieEv (0 bytes) 
  0.02%    libjvm.so  _ZNK8G1Policy30predict_region_elapsed_time_msEP10HeapRegionb (0 bytes) 
  0.02%    libjvm.so  SpinPause (0 bytes) 
  0.12%  <...other 6 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 40.27%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 
 37.99%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_BimorphicJava_jmhTest::bimorphicCall_avgt_jmhStub, version 128 
 19.88%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 123 
  1.60%       kernel  [unknown] 
  0.02%    libjvm.so  _ZN14MethodLivenessC1EP5ArenaP8ciMethod 
  0.02%    libjvm.so  _ZNK8G1Policy30predict_region_elapsed_time_msEP10HeapRegionb 
  0.02%    libjvm.so  _ZN12PhaseChaitin16gather_lrg_masksEb 
  0.02%  interpreter  ifne  154 ifne  
  0.02%    libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%    libjvm.so  _ZNK8CodeBlob9is_zombieEv 
  0.02%    libjvm.so  SpinPause 
  0.02%    libjvm.so  _ZN7nmethod19check_dependency_onER9DepChange 
  0.02%    libjvm.so  _ZNK6AbsSeq4davgEv 
  0.02%    libjvm.so  _ZNK7TypePtr5xmeetEPK4Type 
  0.02%    libjvm.so  _ZN11PhaseValues10is_IterGVNEv 
  0.02%  interpreter  aload  25 aload  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 98.15%           c2
  1.60%       kernel
  0.20%    libjvm.so
  0.04%  interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallJavaBenchmark.Megamorphic3Java
# Parameters: (param = 3)

# Run progress: 12.50% complete, ETA 00:04:07
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 52.740 ns/op
# Warmup Iteration   2: 47.715 ns/op
# Warmup Iteration   3: 47.694 ns/op
# Warmup Iteration   4: 48.002 ns/op
# Warmup Iteration   5: 46.460 ns/op
Iteration   1: 46.574 ns/op
Iteration   2: 46.625 ns/op
Iteration   3: 47.474 ns/op
Iteration   4: 47.990 ns/op
Iteration   5: 46.357 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 16.67% complete, ETA 00:03:55
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 53.169 ns/op
# Warmup Iteration   2: 51.619 ns/op
# Warmup Iteration   3: 51.480 ns/op
# Warmup Iteration   4: 51.426 ns/op
# Warmup Iteration   5: 51.657 ns/op
Iteration   1: 51.273 ns/op
Iteration   2: 51.050 ns/op
Iteration   3: 51.096 ns/op
Iteration   4: 51.022 ns/op
Iteration   5: 51.515 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 20.83% complete, ETA 00:03:42
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 54.393 ns/op
# Warmup Iteration   2: 46.674 ns/op
# Warmup Iteration   3: 46.631 ns/op
# Warmup Iteration   4: 46.734 ns/op
# Warmup Iteration   5: 46.581 ns/op
Iteration   1: 47.116 ns/op
Iteration   2: 47.297 ns/op
Iteration   3: 46.734 ns/op
Iteration   4: 46.838 ns/op
Iteration   5: 46.847 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallJavaBenchmark.Megamorphic3Java":
  48.387 ±(99.9%) 2.237 ns/op [Average]
  (min, avg, max) = (46.357, 48.387, 51.515), stdev = 2.092
  CI (99.9%): [46.150, 50.624] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallJavaBenchmark.Megamorphic3Java:·asm":
PrintAssembly processed: 49753 total address lines.
Perf output processed (skipped 6.421 seconds):
 Column 1: cycles (5168 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (30 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f6a9822c920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f6a9822c924: movabs r12,0x800000000
            0x00007f6a9822c92e: add    r10,r12
            0x00007f6a9822c931: xor    r12,r12
            0x00007f6a9822c934: cmp    rax,r10
            0x00007f6a9822c937: jne    0x00007f6a981b7c80  ;   {runtime_call ic_miss_stub}
            0x00007f6a9822c93d: data16 xchg ax,ax
          [Verified Entry Point]
  9.11%     0x00007f6a9822c940: sub    rsp,0x18
  5.26%     0x00007f6a9822c947: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@-1 (line 132)
  3.52%     0x00007f6a9822c94c: imul   eax,edx,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@3 (line 132)
            0x00007f6a9822c94f: add    rsp,0x10
            0x00007f6a9822c953: pop    rbp
  2.98%     0x00007f6a9822c954: mov    r10,QWORD PTR [r15+0x108]
            0x00007f6a9822c95b: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.02%     0x00007f6a9822c95e: ret    
            0x00007f6a9822c95f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f6a9822c960: jmp    0x00007f6a981ee680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f6a9822c965: call   0x00007f6a9822c96a
         ↘  0x00007f6a9822c96a: sub    QWORD PTR [rsp],0x5
            0x00007f6a9822c96f: jmp    0x00007f6a981b9520  ;   {runtime_call DeoptimizationBlob}
            0x00007f6a9822c974: hlt    
            0x00007f6a9822c975: hlt    
....................................................................................................
 20.90%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (30 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f6a9822c6a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f6a9822c6a4: movabs r12,0x800000000
            0x00007f6a9822c6ae: add    r10,r12
            0x00007f6a9822c6b1: xor    r12,r12
            0x00007f6a9822c6b4: cmp    rax,r10
            0x00007f6a9822c6b7: jne    0x00007f6a981b7c80  ;   {runtime_call ic_miss_stub}
            0x00007f6a9822c6bd: data16 xchg ax,ax
          [Verified Entry Point]
  9.85%     0x00007f6a9822c6c0: sub    rsp,0x18
  4.72%     0x00007f6a9822c6c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@-1 (line 138)
  3.12%     0x00007f6a9822c6cc: imul   eax,edx,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@3 (line 138)
            0x00007f6a9822c6cf: add    rsp,0x10
            0x00007f6a9822c6d3: pop    rbp
  2.81%     0x00007f6a9822c6d4: mov    r10,QWORD PTR [r15+0x108]
            0x00007f6a9822c6db: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.02%     0x00007f6a9822c6de: ret    
            0x00007f6a9822c6df: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f6a9822c6e0: jmp    0x00007f6a981ee680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f6a9822c6e5: call   0x00007f6a9822c6ea
         ↘  0x00007f6a9822c6ea: sub    QWORD PTR [rsp],0x5
            0x00007f6a9822c6ef: jmp    0x00007f6a981b9520  ;   {runtime_call DeoptimizationBlob}
            0x00007f6a9822c6f4: hlt    
            0x00007f6a9822c6f5: hlt    
....................................................................................................
 20.51%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (34 bytes) 

           # parm0:    rdx       = int
           #           [sp+0x20]  (sp of caller)
           0x00007f6a9822cba0: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007f6a9822cba4: movabs r12,0x800000000
           0x00007f6a9822cbae: add    r10,r12
           0x00007f6a9822cbb1: xor    r12,r12
           0x00007f6a9822cbb4: cmp    rax,r10
           0x00007f6a9822cbb7: jne    0x00007f6a981b7c80  ;   {runtime_call ic_miss_stub}
           0x00007f6a9822cbbd: data16 xchg ax,ax
         [Verified Entry Point]
  8.78%    0x00007f6a9822cbc0: sub    rsp,0x18
  4.82%    0x00007f6a9822cbc7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@-1 (line 126)
  2.77%    0x00007f6a9822cbcc: mov    eax,edx
           0x00007f6a9822cbce: shl    eax,0x4
           0x00007f6a9822cbd1: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 126)
           0x00007f6a9822cbd3: add    rsp,0x10
  0.56%    0x00007f6a9822cbd7: pop    rbp
  2.65%    0x00007f6a9822cbd8: mov    r10,QWORD PTR [r15+0x108]
           0x00007f6a9822cbdf: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.08%    0x00007f6a9822cbe2: ret    
           0x00007f6a9822cbe3: hlt    
           0x00007f6a9822cbe4: hlt    
           0x00007f6a9822cbe5: hlt    
           0x00007f6a9822cbe6: hlt    
           0x00007f6a9822cbe7: hlt    
           0x00007f6a9822cbe8: hlt    
           0x00007f6a9822cbe9: hlt    
           0x00007f6a9822cbea: hlt    
           0x00007f6a9822cbeb: hlt    
           0x00007f6a9822cbec: hlt    
....................................................................................................
 19.66%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 (161 bytes) 

                                                          ;   {optimized virtual_call}
            0x00007f6a98235688: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f6a9823568d: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f6a982357f6
            0x00007f6a98235695: test   r11d,r11d
            0x00007f6a98235698: jne    0x00007f6a9823578b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
            0x00007f6a9823569e: mov    ebp,0x1            ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
  0.58%  ↗  0x00007f6a982356a3: mov    r10,QWORD PTR [rsp+0x50]
         │  0x00007f6a982356a8: mov    r11d,DWORD PTR [r10+0xc]
         │  0x00007f6a982356ac: movabs r10,0x71b85b7e0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b7e0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
         │  0x00007f6a982356b6: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@4 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.62%  │  0x00007f6a982356ba: mov    rsi,r11
         │  0x00007f6a982356bd: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@1 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │  0x00007f6a982356c1: xchg   ax,ax
         │  0x00007f6a982356c3: call   0x00007f6a981b8400  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@7 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f6a982356c8: mov    QWORD PTR [rsp+0x10],rbp
  0.46%  │  0x00007f6a982356cd: mov    DWORD PTR [rsp+0x58],eax
  0.25%  │  0x00007f6a982356d1: mov    r10,QWORD PTR [rsp+0x50]
         │  0x00007f6a982356d6: mov    r10d,DWORD PTR [r10+0x10]
  1.26%  │  0x00007f6a982356da: movabs r11,0x71b85b7e0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b7e0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
  0.17%  │  0x00007f6a982356e4: mov    edx,DWORD PTR [r11+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@14 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │  0x00007f6a982356e8: mov    rsi,r10
         │  0x00007f6a982356eb: shl    rsi,0x3
  0.56%  │  0x00007f6a982356ef: call   0x00007f6a981b8400  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@17 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
  0.02%  │  0x00007f6a982356f4: mov    ebp,eax
         │  0x00007f6a982356f6: add    ebp,DWORD PTR [rsp+0x58]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@20 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.74%  │  0x00007f6a982356fa: movabs r10,0x71b85b7e0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b7e0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
         │  0x00007f6a98235704: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@25 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │  0x00007f6a98235708: mov    r10,QWORD PTR [rsp+0x50]
         │  0x00007f6a9823570d: mov    r11d,DWORD PTR [r10+0x14]
  1.35%  │  0x00007f6a98235711: mov    rsi,r11
         │  0x00007f6a98235714: shl    rsi,0x3            ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@22 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.64%  │  0x00007f6a98235718: data16 xchg ax,ax
         │  0x00007f6a9823571b: call   0x00007f6a981b8400  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@28 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f6a98235720: mov    edx,eax
         │  0x00007f6a98235722: add    edx,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@31 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │  0x00007f6a98235724: mov    rsi,QWORD PTR [rsp]
  0.62%  │  0x00007f6a98235728: data16 xchg ax,ax
         │  0x00007f6a9823572b: call   0x00007f6a981b7f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  4.97%  │  0x00007f6a98235730: mov    r10,QWORD PTR [rsp+0x48]
  0.02%  │  0x00007f6a98235735: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
         │  0x00007f6a9823573d: mov    r11,QWORD PTR [r15+0x108]
  0.54%  │  0x00007f6a98235744: mov    rbp,QWORD PTR [rsp+0x10]
         │  0x00007f6a98235749: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
         │  0x00007f6a9823574d: test   DWORD PTR [r11],eax  ;   {poll}
         │  0x00007f6a98235750: test   r10d,r10d
         ╰  0x00007f6a98235753: je     0x00007f6a982356a3  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
            0x00007f6a98235759: movabs r10,0x7f6a9c8b2a00
            0x00007f6a98235763: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@39 (line 198)
....................................................................................................
 12.81%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (26 bytes) 

                                       [Deopt Handler Code]
                                         0x00007f6a9822b8e5: call   0x00007f6a9822b8ea
                                         0x00007f6a9822b8ea: sub    QWORD PTR [rsp],0x5
                                         0x00007f6a9822b8ef: jmp    0x00007f6a981b9520  ;   {runtime_call DeoptimizationBlob}
                                         0x00007f6a9822b8f4: hlt    
                                         0x00007f6a9822b8f5: hlt    
                                         0x00007f6a9822b8f6: hlt    
                                         0x00007f6a9822b8f7: hlt    
                                       ImmutableOopMap{}pc offsets: 28 </print_nmethod>
                                       Decoding VtableStub vtbl[5]@12
  0.48%                                  0x00007f6a9822cd10: mov    eax,DWORD PTR [rsi+0x8]
  2.28%                                  0x00007f6a9822cd13: movabs r12,0x800000000
  0.56%                                  0x00007f6a9822cd1d: add    rax,r12
  1.10%                                  0x00007f6a9822cd20: xor    r12,r12
                                         0x00007f6a9822cd23: mov    rbx,QWORD PTR [rax+0x1f8]
  6.02%                                  0x00007f6a9822cd2a: jmp    QWORD PTR [rbx+0x38]
                                         0x00007f6a9822cd2d: .byte 0x0
                                       <task_queued compile_id='121' method='org.ib.benchmark.MegamorphicCallJavaBenchmark megamorphic3Call (Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState;)I' bytes='5' count='5000' backedge_count='1' iicount='10000' blocking='1' stamp='1,350' comment='count' hot_count='10000'/>
                                       <nmethod compile_id='121' compiler='c2' entry='0x00007f6a9822b340' size='1280' address='0x00007f6a9822b190' relocation_offset='376' insts_offset='432' stub_offset='656' scopes_data_offset='752' scopes_pcs_offset='880' dependencies_offset='1184' handler_table_offset='1192' nul_chk_table_offset='1264' oops_offset='728' metadata_offset='736' method='org.ib.benchmark.MegamorphicCallJavaBenchmark megamorphic3Call (Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState;)I' bytes='5' count='5000' backedge_count='1' iicount='10000' stamp='1,351'/>
                                       <print_nmethod stamp='1,351'>
                                       Compiled method (c2)    1351  121             org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call (5 bytes)
                                        total in heap  [0x00007f6a9822b190,0x00007f6a9822b690] = 1280
                                        relocation     [0x00007f6a9822b308,0x00007f6a9822b340] = 56
                                        main code      [0x00007f6a9822b340,0x00007f6a9822b420] = 224
                                        stub code      [0x00007f6a9822b420,0x00007f6a9822b468] = 72
                                        oops           [0x00007f6a9822b468,0x00007f6a9822b470] = 8
....................................................................................................
 10.45%  <total for region 5>

....[Hottest Regions]...............................................................................
 20.90%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (30 bytes) 
 20.51%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (30 bytes) 
 19.66%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (34 bytes) 
 12.81%            c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 (161 bytes) 
 10.45%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (26 bytes) 
  7.84%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 (43 bytes) 
  3.46%            c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (55 bytes) 
  3.23%        kernel  [unknown] (6 bytes) 
  0.17%        kernel  [unknown] (41 bytes) 
  0.06%        kernel  [unknown] (15 bytes) 
  0.06%        kernel  [unknown] (0 bytes) 
  0.06%        kernel  [unknown] (0 bytes) 
  0.04%        kernel  [unknown] (4 bytes) 
  0.04%        kernel  [unknown] (0 bytes) 
  0.04%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.56%  <...other 29 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 30.11%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 
 20.90%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 
 20.51%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 
 12.81%            c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 
  7.84%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 
  3.95%        kernel  [unknown] 
  3.46%            c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  0.02%     libjvm.so  _ZN17SignatureIterator18iterate_parametersEv 
  0.02%     libjvm.so  _ZN12PhaseChaitin19interfere_with_liveEjP8IndexSet 
  0.02%     libjvm.so  _ZN4Type5uhashEPKS_ 
  0.02%     libjvm.so  __tls_get_addr@plt 
  0.02%  libc-2.28.so  memcpy@GLIBC_2.2.5 
  0.02%     libjvm.so  _ZN15ClassFileParser26post_process_parsed_streamEPK15ClassFileStreamP12ConstantPoolP6Thread 
  0.02%     libjvm.so  _ZN4Node7add_reqEPS_ 
  0.02%  libc-2.28.so  __memset_avx2_unaligned_erms 
  0.02%   interpreter  method entry point (kind = zerolocals)  
  0.02%     libjvm.so  _ZN14PhaseIdealLoop24split_if_with_blocks_preEP4Node 
  0.02%     libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%   interpreter  invokevirtual  182 invokevirtual  
  0.02%     libjvm.so  _ZN12PhaseChaitin6SelectEv 
  0.15%  <...other 8 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.63%            c2
  3.95%        kernel
  0.25%     libjvm.so
  0.10%   interpreter
  0.06%  libc-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49753 total address lines.
Perf output processed (skipped 6.213 seconds):
 Column 1: cycles (5127 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (30 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f2fd8cdd6a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f2fd8cdd6a4: movabs r12,0x800000000
            0x00007f2fd8cdd6ae: add    r10,r12
            0x00007f2fd8cdd6b1: xor    r12,r12
            0x00007f2fd8cdd6b4: cmp    rax,r10
            0x00007f2fd8cdd6b7: jne    0x00007f2fd8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f2fd8cdd6bd: data16 xchg ax,ax
          [Verified Entry Point]
 10.18%     0x00007f2fd8cdd6c0: sub    rsp,0x18
  5.07%     0x00007f2fd8cdd6c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@-1 (line 138)
  3.63%     0x00007f2fd8cdd6cc: imul   eax,edx,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@3 (line 138)
            0x00007f2fd8cdd6cf: add    rsp,0x10
            0x00007f2fd8cdd6d3: pop    rbp
  2.89%     0x00007f2fd8cdd6d4: mov    r10,QWORD PTR [r15+0x108]
            0x00007f2fd8cdd6db: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.06%     0x00007f2fd8cdd6de: ret    
            0x00007f2fd8cdd6df: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f2fd8cdd6e0: jmp    0x00007f2fd8c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f2fd8cdd6e5: call   0x00007f2fd8cdd6ea
         ↘  0x00007f2fd8cdd6ea: sub    QWORD PTR [rsp],0x5
            0x00007f2fd8cdd6ef: jmp    0x00007f2fd8c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007f2fd8cdd6f4: hlt    
            0x00007f2fd8cdd6f5: hlt    
....................................................................................................
 21.83%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (20 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f2fd8cdd920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f2fd8cdd924: movabs r12,0x800000000
            0x00007f2fd8cdd92e: add    r10,r12
            0x00007f2fd8cdd931: xor    r12,r12
            0x00007f2fd8cdd934: cmp    rax,r10
            0x00007f2fd8cdd937: jne    0x00007f2fd8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f2fd8cdd93d: data16 xchg ax,ax
          [Verified Entry Point]
 10.01%     0x00007f2fd8cdd940: sub    rsp,0x18
  4.92%     0x00007f2fd8cdd947: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@-1 (line 132)
  3.35%     0x00007f2fd8cdd94c: imul   eax,edx,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@3 (line 132)
            0x00007f2fd8cdd94f: add    rsp,0x10
            0x00007f2fd8cdd953: pop    rbp
  2.50%     0x00007f2fd8cdd954: mov    r10,QWORD PTR [r15+0x108]
            0x00007f2fd8cdd95b: test   DWORD PTR [r10],eax  ;   {poll_return}
            0x00007f2fd8cdd95e: ret    
            0x00007f2fd8cdd95f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f2fd8cdd960: jmp    0x00007f2fd8c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f2fd8cdd965: call   0x00007f2fd8cdd96a
         ↘  0x00007f2fd8cdd96a: sub    QWORD PTR [rsp],0x5
            0x00007f2fd8cdd96f: jmp    0x00007f2fd8c6a520  ;   {runtime_call DeoptimizationBlob}
....................................................................................................
 20.77%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (34 bytes) 

           # parm0:    rdx       = int
           #           [sp+0x20]  (sp of caller)
           0x00007f2fd8cddba0: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007f2fd8cddba4: movabs r12,0x800000000
           0x00007f2fd8cddbae: add    r10,r12
           0x00007f2fd8cddbb1: xor    r12,r12
           0x00007f2fd8cddbb4: cmp    rax,r10
           0x00007f2fd8cddbb7: jne    0x00007f2fd8c68c80  ;   {runtime_call ic_miss_stub}
           0x00007f2fd8cddbbd: data16 xchg ax,ax
         [Verified Entry Point]
  7.94%    0x00007f2fd8cddbc0: sub    rsp,0x18
  4.35%    0x00007f2fd8cddbc7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@-1 (line 126)
  3.26%    0x00007f2fd8cddbcc: mov    eax,edx
           0x00007f2fd8cddbce: shl    eax,0x4
           0x00007f2fd8cddbd1: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 126)
           0x00007f2fd8cddbd3: add    rsp,0x10
  0.62%    0x00007f2fd8cddbd7: pop    rbp
  2.34%    0x00007f2fd8cddbd8: mov    r10,QWORD PTR [r15+0x108]
           0x00007f2fd8cddbdf: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.02%    0x00007f2fd8cddbe2: ret    
           0x00007f2fd8cddbe3: hlt    
           0x00007f2fd8cddbe4: hlt    
           0x00007f2fd8cddbe5: hlt    
           0x00007f2fd8cddbe6: hlt    
           0x00007f2fd8cddbe7: hlt    
           0x00007f2fd8cddbe8: hlt    
           0x00007f2fd8cddbe9: hlt    
           0x00007f2fd8cddbea: hlt    
           0x00007f2fd8cddbeb: hlt    
           0x00007f2fd8cddbec: hlt    
....................................................................................................
 18.53%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 (161 bytes) 

                                                          ;   {optimized virtual_call}
            0x00007f2fd8ce6688: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f2fd8ce668d: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f2fd8ce67f6
            0x00007f2fd8ce6695: test   r11d,r11d
            0x00007f2fd8ce6698: jne    0x00007f2fd8ce678b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
            0x00007f2fd8ce669e: mov    ebp,0x1            ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
  0.66%  ↗  0x00007f2fd8ce66a3: mov    r10,QWORD PTR [rsp+0x50]
         │  0x00007f2fd8ce66a8: mov    r11d,DWORD PTR [r10+0xc]
         │  0x00007f2fd8ce66ac: movabs r10,0x71b85b7e0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b7e0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
  0.02%  │  0x00007f2fd8ce66b6: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@4 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.53%  │  0x00007f2fd8ce66ba: mov    rsi,r11
         │  0x00007f2fd8ce66bd: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@1 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │  0x00007f2fd8ce66c1: xchg   ax,ax
         │  0x00007f2fd8ce66c3: call   0x00007f2fd8c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@7 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f2fd8ce66c8: mov    QWORD PTR [rsp+0x10],rbp
  0.84%  │  0x00007f2fd8ce66cd: mov    DWORD PTR [rsp+0x58],eax
  0.25%  │  0x00007f2fd8ce66d1: mov    r10,QWORD PTR [rsp+0x50]
         │  0x00007f2fd8ce66d6: mov    r10d,DWORD PTR [r10+0x10]
  1.58%  │  0x00007f2fd8ce66da: movabs r11,0x71b85b7e0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b7e0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
  0.08%  │  0x00007f2fd8ce66e4: mov    edx,DWORD PTR [r11+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@14 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │  0x00007f2fd8ce66e8: mov    rsi,r10
         │  0x00007f2fd8ce66eb: shl    rsi,0x3
  0.60%  │  0x00007f2fd8ce66ef: call   0x00007f2fd8c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@17 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f2fd8ce66f4: mov    ebp,eax
         │  0x00007f2fd8ce66f6: add    ebp,DWORD PTR [rsp+0x58]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@20 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.72%  │  0x00007f2fd8ce66fa: movabs r10,0x71b85b7e0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b7e0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
         │  0x00007f2fd8ce6704: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@25 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │  0x00007f2fd8ce6708: mov    r10,QWORD PTR [rsp+0x50]
         │  0x00007f2fd8ce670d: mov    r11d,DWORD PTR [r10+0x14]
  1.60%  │  0x00007f2fd8ce6711: mov    rsi,r11
         │  0x00007f2fd8ce6714: shl    rsi,0x3            ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@22 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.70%  │  0x00007f2fd8ce6718: data16 xchg ax,ax
         │  0x00007f2fd8ce671b: call   0x00007f2fd8c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@28 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f2fd8ce6720: mov    edx,eax
         │  0x00007f2fd8ce6722: add    edx,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@31 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │  0x00007f2fd8ce6724: mov    rsi,QWORD PTR [rsp]
  0.64%  │  0x00007f2fd8ce6728: data16 xchg ax,ax
         │  0x00007f2fd8ce672b: call   0x00007f2fd8c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  4.76%  │  0x00007f2fd8ce6730: mov    r10,QWORD PTR [rsp+0x48]
         │  0x00007f2fd8ce6735: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
         │  0x00007f2fd8ce673d: mov    r11,QWORD PTR [r15+0x108]
  0.45%  │  0x00007f2fd8ce6744: mov    rbp,QWORD PTR [rsp+0x10]
         │  0x00007f2fd8ce6749: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
         │  0x00007f2fd8ce674d: test   DWORD PTR [r11],eax  ;   {poll}
         │  0x00007f2fd8ce6750: test   r10d,r10d
         ╰  0x00007f2fd8ce6753: je     0x00007f2fd8ce66a3  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
            0x00007f2fd8ce6759: movabs r10,0x7f2feb490a00
            0x00007f2fd8ce6763: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@39 (line 198)
....................................................................................................
 13.44%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (26 bytes) 

                                       [Deopt Handler Code]
                                         0x00007f2fd8cdc8e5: call   0x00007f2fd8cdc8ea
                                         0x00007f2fd8cdc8ea: sub    QWORD PTR [rsp],0x5
                                         0x00007f2fd8cdc8ef: jmp    0x00007f2fd8c6a520  ;   {runtime_call DeoptimizationBlob}
                                         0x00007f2fd8cdc8f4: hlt    
                                         0x00007f2fd8cdc8f5: hlt    
                                         0x00007f2fd8cdc8f6: hlt    
                                         0x00007f2fd8cdc8f7: hlt    
                                       ImmutableOopMap{}pc offsets: 28 </print_nmethod>
                                       Decoding VtableStub vtbl[5]@12
  0.59%                                  0x00007f2fd8cddd10: mov    eax,DWORD PTR [rsi+0x8]
  2.85%                                  0x00007f2fd8cddd13: movabs r12,0x800000000
  0.62%                                  0x00007f2fd8cddd1d: add    rax,r12
  0.96%                                  0x00007f2fd8cddd20: xor    r12,r12
                                         0x00007f2fd8cddd23: mov    rbx,QWORD PTR [rax+0x1f8]
  5.83%                                  0x00007f2fd8cddd2a: jmp    QWORD PTR [rbx+0x38]
                                         0x00007f2fd8cddd2d: .byte 0x0
                                       <task_queued compile_id='121' method='org.ib.benchmark.MegamorphicCallJavaBenchmark megamorphic3Call (Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState;)I' bytes='5' count='5000' backedge_count='1' iicount='10000' blocking='1' stamp='1,162' comment='count' hot_count='10000'/>
                                       <nmethod compile_id='121' compiler='c2' entry='0x00007f2fd8cdc340' size='1280' address='0x00007f2fd8cdc190' relocation_offset='376' insts_offset='432' stub_offset='656' scopes_data_offset='752' scopes_pcs_offset='880' dependencies_offset='1184' handler_table_offset='1192' nul_chk_table_offset='1264' oops_offset='728' metadata_offset='736' method='org.ib.benchmark.MegamorphicCallJavaBenchmark megamorphic3Call (Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState;)I' bytes='5' count='5000' backedge_count='1' iicount='10000' stamp='1,163'/>
                                       <print_nmethod stamp='1,163'>
                                       Compiled method (c2)    1163  121             org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call (5 bytes)
                                        total in heap  [0x00007f2fd8cdc190,0x00007f2fd8cdc690] = 1280
                                        relocation     [0x00007f2fd8cdc308,0x00007f2fd8cdc340] = 56
                                        main code      [0x00007f2fd8cdc340,0x00007f2fd8cdc420] = 224
                                        stub code      [0x00007f2fd8cdc420,0x00007f2fd8cdc468] = 72
                                        oops           [0x00007f2fd8cdc468,0x00007f2fd8cdc470] = 8
....................................................................................................
 10.84%  <total for region 5>

....[Hottest Regions]...............................................................................
 21.83%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (30 bytes) 
 20.77%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (20 bytes) 
 18.53%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (34 bytes) 
 13.44%                  c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 (161 bytes) 
 10.84%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (26 bytes) 
  7.41%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 (43 bytes) 
  3.86%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (55 bytes) 
  1.95%              kernel  [unknown] (6 bytes) 
  0.10%              kernel  [unknown] (27 bytes) 
  0.10%              kernel  [unknown] (1 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (13 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN12PeriodicTask14real_time_tickEi (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.86%  <...other 44 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 29.37%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 
 21.83%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 
 20.77%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 
 13.44%                  c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 
  7.41%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 
  3.86%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  2.61%              kernel  [unknown] 
  0.04%           libjvm.so  _ZN12PeriodicTask14real_time_tickEi 
  0.04%           libjvm.so  _ZN15StatSamplerTask4taskEv 
  0.02%           libjvm.so  _ZN9PhaseLive7computeEj 
  0.02%  libpthread-2.28.so  __pthread_mutex_unlock 
  0.02%           libjvm.so  _ZN12PhaseChaitin5SplitEjP12ResourceArea 
  0.02%           libjvm.so  _ZN14PhaseIdealLoop15build_loop_lateER9VectorSetR9Node_ListR10Node_Stack 
  0.02%         interpreter  method entry point (kind = native)  
  0.02%  libpthread-2.28.so  __lll_unlock_wake 
  0.02%         interpreter  fast_iputfield  217 fast_iputfield  
  0.02%           libjvm.so  _ZN4Dict6InsertEPvS0_b 
  0.02%           libjvm.so  _ZN8PhaseCFG24schedule_node_into_blockEP4NodeP5Block 
  0.02%        libc-2.28.so  cfree@GLIBC_2.2.5 
  0.02%           libjvm.so  _ZNK18CallStaticJavaNode21uncommon_trap_requestEv 
  0.39%  <...other 20 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.70%                  c2
  2.61%              kernel
  0.41%           libjvm.so
  0.12%         interpreter
  0.06%        libc-2.28.so
  0.06%  libpthread-2.28.so
  0.02%          ld-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49753 total address lines.
Perf output processed (skipped 6.290 seconds):
 Column 1: cycles (5177 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (30 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f1fc0cdd6a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f1fc0cdd6a4: movabs r12,0x800000000
            0x00007f1fc0cdd6ae: add    r10,r12
            0x00007f1fc0cdd6b1: xor    r12,r12
            0x00007f1fc0cdd6b4: cmp    rax,r10
            0x00007f1fc0cdd6b7: jne    0x00007f1fc0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f1fc0cdd6bd: data16 xchg ax,ax
          [Verified Entry Point]
  9.27%     0x00007f1fc0cdd6c0: sub    rsp,0x18
  4.67%     0x00007f1fc0cdd6c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@-1 (line 138)
  3.57%     0x00007f1fc0cdd6cc: imul   eax,edx,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@3 (line 138)
            0x00007f1fc0cdd6cf: add    rsp,0x10
            0x00007f1fc0cdd6d3: pop    rbp
  2.38%     0x00007f1fc0cdd6d4: mov    r10,QWORD PTR [r15+0x108]
            0x00007f1fc0cdd6db: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.02%     0x00007f1fc0cdd6de: ret    
            0x00007f1fc0cdd6df: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f1fc0cdd6e0: jmp    0x00007f1fc0c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f1fc0cdd6e5: call   0x00007f1fc0cdd6ea
         ↘  0x00007f1fc0cdd6ea: sub    QWORD PTR [rsp],0x5
            0x00007f1fc0cdd6ef: jmp    0x00007f1fc0c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007f1fc0cdd6f4: hlt    
            0x00007f1fc0cdd6f5: hlt    
....................................................................................................
 19.92%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (20 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f1fc0cdd920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f1fc0cdd924: movabs r12,0x800000000
            0x00007f1fc0cdd92e: add    r10,r12
            0x00007f1fc0cdd931: xor    r12,r12
            0x00007f1fc0cdd934: cmp    rax,r10
            0x00007f1fc0cdd937: jne    0x00007f1fc0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f1fc0cdd93d: data16 xchg ax,ax
          [Verified Entry Point]
  9.39%     0x00007f1fc0cdd940: sub    rsp,0x18
  4.31%     0x00007f1fc0cdd947: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@-1 (line 132)
  3.69%     0x00007f1fc0cdd94c: imul   eax,edx,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@3 (line 132)
            0x00007f1fc0cdd94f: add    rsp,0x10
            0x00007f1fc0cdd953: pop    rbp
  2.53%     0x00007f1fc0cdd954: mov    r10,QWORD PTR [r15+0x108]
            0x00007f1fc0cdd95b: test   DWORD PTR [r10],eax  ;   {poll_return}
            0x00007f1fc0cdd95e: ret    
            0x00007f1fc0cdd95f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f1fc0cdd960: jmp    0x00007f1fc0c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f1fc0cdd965: call   0x00007f1fc0cdd96a
         ↘  0x00007f1fc0cdd96a: sub    QWORD PTR [rsp],0x5
            0x00007f1fc0cdd96f: jmp    0x00007f1fc0c6a520  ;   {runtime_call DeoptimizationBlob}
....................................................................................................
 19.92%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (24 bytes) 

           # parm0:    rdx       = int
           #           [sp+0x20]  (sp of caller)
           0x00007f1fc0cddba0: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007f1fc0cddba4: movabs r12,0x800000000
           0x00007f1fc0cddbae: add    r10,r12
           0x00007f1fc0cddbb1: xor    r12,r12
           0x00007f1fc0cddbb4: cmp    rax,r10
           0x00007f1fc0cddbb7: jne    0x00007f1fc0c68c80  ;   {runtime_call ic_miss_stub}
           0x00007f1fc0cddbbd: data16 xchg ax,ax
         [Verified Entry Point]
  8.81%    0x00007f1fc0cddbc0: sub    rsp,0x18
  4.96%    0x00007f1fc0cddbc7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@-1 (line 126)
  3.15%    0x00007f1fc0cddbcc: mov    eax,edx
           0x00007f1fc0cddbce: shl    eax,0x4
           0x00007f1fc0cddbd1: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 126)
           0x00007f1fc0cddbd3: add    rsp,0x10
  0.60%    0x00007f1fc0cddbd7: pop    rbp
  2.40%    0x00007f1fc0cddbd8: mov    r10,QWORD PTR [r15+0x108]
           0x00007f1fc0cddbdf: test   DWORD PTR [r10],eax  ;   {poll_return}
           0x00007f1fc0cddbe2: ret    
           0x00007f1fc0cddbe3: hlt    
           0x00007f1fc0cddbe4: hlt    
           0x00007f1fc0cddbe5: hlt    
           0x00007f1fc0cddbe6: hlt    
           0x00007f1fc0cddbe7: hlt    
           0x00007f1fc0cddbe8: hlt    
           0x00007f1fc0cddbe9: hlt    
           0x00007f1fc0cddbea: hlt    
....................................................................................................
 19.92%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 (161 bytes) 

                                                          ;   {optimized virtual_call}
            0x00007f1fc0ce6688: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f1fc0ce668d: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f1fc0ce67f6
            0x00007f1fc0ce6695: test   r11d,r11d
            0x00007f1fc0ce6698: jne    0x00007f1fc0ce678b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
            0x00007f1fc0ce669e: mov    ebp,0x1            ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
  0.41%  ↗  0x00007f1fc0ce66a3: mov    r10,QWORD PTR [rsp+0x50]
         │  0x00007f1fc0ce66a8: mov    r11d,DWORD PTR [r10+0xc]
         │  0x00007f1fc0ce66ac: movabs r10,0x71b85beb0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85beb0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
         │  0x00007f1fc0ce66b6: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@4 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.71%  │  0x00007f1fc0ce66ba: mov    rsi,r11
         │  0x00007f1fc0ce66bd: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@1 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │  0x00007f1fc0ce66c1: xchg   ax,ax
         │  0x00007f1fc0ce66c3: call   0x00007f1fc0c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@7 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f1fc0ce66c8: mov    QWORD PTR [rsp+0x10],rbp
  0.89%  │  0x00007f1fc0ce66cd: mov    DWORD PTR [rsp+0x58],eax
  0.08%  │  0x00007f1fc0ce66d1: mov    r10,QWORD PTR [rsp+0x50]
         │  0x00007f1fc0ce66d6: mov    r10d,DWORD PTR [r10+0x10]
  1.29%  │  0x00007f1fc0ce66da: movabs r11,0x71b85beb0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85beb0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
  0.06%  │  0x00007f1fc0ce66e4: mov    edx,DWORD PTR [r11+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@14 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │  0x00007f1fc0ce66e8: mov    rsi,r10
         │  0x00007f1fc0ce66eb: shl    rsi,0x3
  0.50%  │  0x00007f1fc0ce66ef: call   0x00007f1fc0c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@17 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f1fc0ce66f4: mov    ebp,eax
         │  0x00007f1fc0ce66f6: add    ebp,DWORD PTR [rsp+0x58]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@20 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.41%  │  0x00007f1fc0ce66fa: movabs r10,0x71b85beb0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85beb0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
         │  0x00007f1fc0ce6704: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@25 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │  0x00007f1fc0ce6708: mov    r10,QWORD PTR [rsp+0x50]
         │  0x00007f1fc0ce670d: mov    r11d,DWORD PTR [r10+0x14]
  1.58%  │  0x00007f1fc0ce6711: mov    rsi,r11
         │  0x00007f1fc0ce6714: shl    rsi,0x3            ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@22 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.58%  │  0x00007f1fc0ce6718: data16 xchg ax,ax
         │  0x00007f1fc0ce671b: call   0x00007f1fc0c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@28 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f1fc0ce6720: mov    edx,eax
         │  0x00007f1fc0ce6722: add    edx,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@31 (line 101)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 57)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │  0x00007f1fc0ce6724: mov    rsi,QWORD PTR [rsp]
  0.64%  │  0x00007f1fc0ce6728: data16 xchg ax,ax
         │  0x00007f1fc0ce672b: call   0x00007f1fc0c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  5.41%  │  0x00007f1fc0ce6730: mov    r10,QWORD PTR [rsp+0x48]
         │  0x00007f1fc0ce6735: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
         │  0x00007f1fc0ce673d: mov    r11,QWORD PTR [r15+0x108]
  0.64%  │  0x00007f1fc0ce6744: mov    rbp,QWORD PTR [rsp+0x10]
         │  0x00007f1fc0ce6749: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
         │  0x00007f1fc0ce674d: test   DWORD PTR [r11],eax  ;   {poll}
         │  0x00007f1fc0ce6750: test   r10d,r10d
         ╰  0x00007f1fc0ce6753: je     0x00007f1fc0ce66a3  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
            0x00007f1fc0ce6759: movabs r10,0x7f1fd2981a00
            0x00007f1fc0ce6763: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@39 (line 198)
....................................................................................................
 13.19%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (26 bytes) 

                                       [Deopt Handler Code]
                                         0x00007f1fc0cdc8e5: call   0x00007f1fc0cdc8ea
                                         0x00007f1fc0cdc8ea: sub    QWORD PTR [rsp],0x5
                                         0x00007f1fc0cdc8ef: jmp    0x00007f1fc0c6a520  ;   {runtime_call DeoptimizationBlob}
                                         0x00007f1fc0cdc8f4: hlt    
                                         0x00007f1fc0cdc8f5: hlt    
                                         0x00007f1fc0cdc8f6: hlt    
                                         0x00007f1fc0cdc8f7: hlt    
                                       ImmutableOopMap{}pc offsets: 28 </print_nmethod>
                                       Decoding VtableStub vtbl[5]@12
  0.77%                                  0x00007f1fc0cddd10: mov    eax,DWORD PTR [rsi+0x8]
  2.92%                                  0x00007f1fc0cddd13: movabs r12,0x800000000
  0.58%                                  0x00007f1fc0cddd1d: add    rax,r12
  1.20%                                  0x00007f1fc0cddd20: xor    r12,r12
                                         0x00007f1fc0cddd23: mov    rbx,QWORD PTR [rax+0x1f8]
  5.91%                                  0x00007f1fc0cddd2a: jmp    QWORD PTR [rbx+0x38]
                                         0x00007f1fc0cddd2d: .byte 0x0
                                       <task_queued compile_id='121' method='org.ib.benchmark.MegamorphicCallJavaBenchmark megamorphic3Call (Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState;)I' bytes='5' count='5000' backedge_count='1' iicount='10000' blocking='1' stamp='1,233' comment='count' hot_count='10000'/>
                                       <nmethod compile_id='121' compiler='c2' entry='0x00007f1fc0cdc340' size='1280' address='0x00007f1fc0cdc190' relocation_offset='376' insts_offset='432' stub_offset='656' scopes_data_offset='752' scopes_pcs_offset='880' dependencies_offset='1184' handler_table_offset='1192' nul_chk_table_offset='1264' oops_offset='728' metadata_offset='736' method='org.ib.benchmark.MegamorphicCallJavaBenchmark megamorphic3Call (Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState;)I' bytes='5' count='5000' backedge_count='1' iicount='10000' stamp='1,233'/>
                                       <print_nmethod stamp='1,233'>
                                       Compiled method (c2)    1233  121             org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call (5 bytes)
                                        total in heap  [0x00007f1fc0cdc190,0x00007f1fc0cdc690] = 1280
                                        relocation     [0x00007f1fc0cdc308,0x00007f1fc0cdc340] = 56
                                        main code      [0x00007f1fc0cdc340,0x00007f1fc0cdc420] = 224
                                        stub code      [0x00007f1fc0cdc420,0x00007f1fc0cdc468] = 72
                                        oops           [0x00007f1fc0cdc468,0x00007f1fc0cdc470] = 8
....................................................................................................
 11.38%  <total for region 5>

....[Hottest Regions]...............................................................................
 19.92%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (30 bytes) 
 19.92%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (20 bytes) 
 19.92%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (24 bytes) 
 13.19%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 (161 bytes) 
 11.38%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (26 bytes) 
  7.65%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 (43 bytes) 
  3.79%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (55 bytes) 
  3.01%       kernel  [unknown] (6 bytes) 
  0.15%       kernel  [unknown] (54 bytes) 
  0.08%       kernel  [unknown] (0 bytes) 
  0.04%       kernel  [unknown] (7 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.77%  <...other 40 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 31.29%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 
 19.92%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 
 19.92%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 
 13.19%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 
  7.65%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 
  3.79%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  3.71%       kernel  [unknown] 
  0.04%    libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%  interpreter  method entry point (kind = zerolocals)  
  0.02%    libjvm.so  jio_print 
  0.02%  interpreter  invokespecial  183 invokespecial  
  0.02%    libjvm.so  _ZN14PhaseIdealLoop15build_loop_lateER9VectorSetR9Node_ListR10Node_Stack 
  0.02%  interpreter  method entry point (kind = native)  
  0.02%    libjvm.so  _ZN4Dict6InsertEPvS0_b 
  0.02%  interpreter  putfield  181 putfield  
  0.02%  interpreter  ifeq  153 ifeq  
  0.02%  interpreter  if_icmpge  162 if_icmpge  
  0.02%    libjvm.so  _ZNK10jmpDirNode13is_block_projEv 
  0.02%    libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%    libjvm.so  _ZN7OopFlow13build_oop_mapEP4NodeiP13PhaseRegAllocPi 
  0.23%  <...other 12 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.75%           c2
  3.71%       kernel
  0.35%    libjvm.so
  0.17%  interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallJavaBenchmark.Megamorphic4Java
# Parameters: (param = 3)

# Run progress: 25.00% complete, ETA 00:03:30
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 63.459 ns/op
# Warmup Iteration   2: 61.670 ns/op
# Warmup Iteration   3: 61.005 ns/op
# Warmup Iteration   4: 60.886 ns/op
# Warmup Iteration   5: 61.885 ns/op
Iteration   1: 61.359 ns/op
Iteration   2: 62.884 ns/op
Iteration   3: 61.455 ns/op
Iteration   4: 60.663 ns/op
Iteration   5: 60.700 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 29.17% complete, ETA 00:03:18
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 69.603 ns/op
# Warmup Iteration   2: 67.765 ns/op
# Warmup Iteration   3: 67.193 ns/op
# Warmup Iteration   4: 66.930 ns/op
# Warmup Iteration   5: 66.911 ns/op
Iteration   1: 66.900 ns/op
Iteration   2: 66.613 ns/op
Iteration   3: 66.859 ns/op
Iteration   4: 66.608 ns/op
Iteration   5: 66.587 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 33.33% complete, ETA 00:03:06
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 69.307 ns/op
# Warmup Iteration   2: 68.386 ns/op
# Warmup Iteration   3: 66.875 ns/op
# Warmup Iteration   4: 66.636 ns/op
# Warmup Iteration   5: 67.001 ns/op
Iteration   1: 66.554 ns/op
Iteration   2: 66.713 ns/op
Iteration   3: 66.925 ns/op
Iteration   4: 66.274 ns/op
Iteration   5: 66.416 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallJavaBenchmark.Megamorphic4Java":
  64.901 ±(99.9%) 2.784 ns/op [Average]
  (min, avg, max) = (60.663, 64.901, 66.925), stdev = 2.604
  CI (99.9%): [62.117, 67.684] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallJavaBenchmark.Megamorphic4Java:·asm":
PrintAssembly processed: 49835 total address lines.
Perf output processed (skipped 6.359 seconds):
 Column 1: cycles (5154 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (20 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007fe9f4ce1ba0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fe9f4ce1ba4: movabs r12,0x800000000
            0x00007fe9f4ce1bae: add    r10,r12
            0x00007fe9f4ce1bb1: xor    r12,r12
            0x00007fe9f4ce1bb4: cmp    rax,r10
            0x00007fe9f4ce1bb7: jne    0x00007fe9f4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fe9f4ce1bbd: data16 xchg ax,ax
          [Verified Entry Point]
  7.51%     0x00007fe9f4ce1bc0: sub    rsp,0x18
  3.78%     0x00007fe9f4ce1bc7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@-1 (line 138)
  2.77%     0x00007fe9f4ce1bcc: imul   eax,edx,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@3 (line 138)
            0x00007fe9f4ce1bcf: add    rsp,0x10
            0x00007fe9f4ce1bd3: pop    rbp
  2.00%     0x00007fe9f4ce1bd4: mov    r10,QWORD PTR [r15+0x108]
            0x00007fe9f4ce1bdb: test   DWORD PTR [r10],eax  ;   {poll_return}
            0x00007fe9f4ce1bde: ret    
            0x00007fe9f4ce1bdf: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007fe9f4ce1be0: jmp    0x00007fe9f4c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007fe9f4ce1be5: call   0x00007fe9f4ce1bea
         ↘  0x00007fe9f4ce1bea: sub    QWORD PTR [rsp],0x5
            0x00007fe9f4ce1bef: jmp    0x00007fe9f4c6a520  ;   {runtime_call DeoptimizationBlob}
....................................................................................................
 16.07%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (27 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007fe9f4cdd420: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fe9f4cdd424: movabs r12,0x800000000
            0x00007fe9f4cdd42e: add    r10,r12
            0x00007fe9f4cdd431: xor    r12,r12
            0x00007fe9f4cdd434: cmp    rax,r10
            0x00007fe9f4cdd437: jne    0x00007fe9f4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fe9f4cdd43d: data16 xchg ax,ax
          [Verified Entry Point]
  7.78%     0x00007fe9f4cdd440: sub    rsp,0x18
  3.40%     0x00007fe9f4cdd447: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@-1 (line 132)
  2.60%     0x00007fe9f4cdd44c: imul   eax,edx,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@3 (line 132)
            0x00007fe9f4cdd44f: add    rsp,0x10
  0.02%     0x00007fe9f4cdd453: pop    rbp
  2.04%     0x00007fe9f4cdd454: mov    r10,QWORD PTR [r15+0x108]
  0.02%     0x00007fe9f4cdd45b: test   DWORD PTR [r10],eax  ;   {poll_return}
            0x00007fe9f4cdd45e: ret    
            0x00007fe9f4cdd45f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007fe9f4cdd460: jmp    0x00007fe9f4c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007fe9f4cdd465: call   0x00007fe9f4cdd46a
         ↘  0x00007fe9f4cdd46a: sub    QWORD PTR [rsp],0x5
            0x00007fe9f4cdd46f: jmp    0x00007fe9f4c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007fe9f4cdd474: hlt    
....................................................................................................
 15.85%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 (20 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007fe9f4ce1920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fe9f4ce1924: movabs r12,0x800000000
            0x00007fe9f4ce192e: add    r10,r12
            0x00007fe9f4ce1931: xor    r12,r12
            0x00007fe9f4ce1934: cmp    rax,r10
            0x00007fe9f4ce1937: jne    0x00007fe9f4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fe9f4ce193d: data16 xchg ax,ax
          [Verified Entry Point]
  7.20%     0x00007fe9f4ce1940: sub    rsp,0x18
  3.40%     0x00007fe9f4ce1947: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute@-1 (line 144)
  2.74%     0x00007fe9f4ce194c: imul   eax,edx,0x1d       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute@3 (line 144)
            0x00007fe9f4ce194f: add    rsp,0x10
            0x00007fe9f4ce1953: pop    rbp
  2.33%     0x00007fe9f4ce1954: mov    r10,QWORD PTR [r15+0x108]
            0x00007fe9f4ce195b: test   DWORD PTR [r10],eax  ;   {poll_return}
            0x00007fe9f4ce195e: ret    
            0x00007fe9f4ce195f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007fe9f4ce1960: jmp    0x00007fe9f4c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007fe9f4ce1965: call   0x00007fe9f4ce196a
         ↘  0x00007fe9f4ce196a: sub    QWORD PTR [rsp],0x5
            0x00007fe9f4ce196f: jmp    0x00007fe9f4c6a520  ;   {runtime_call DeoptimizationBlob}
....................................................................................................
 15.66%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (34 bytes) 

           # parm0:    rdx       = int
           #           [sp+0x20]  (sp of caller)
           0x00007fe9f4cdc020: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007fe9f4cdc024: movabs r12,0x800000000
           0x00007fe9f4cdc02e: add    r10,r12
           0x00007fe9f4cdc031: xor    r12,r12
           0x00007fe9f4cdc034: cmp    rax,r10
           0x00007fe9f4cdc037: jne    0x00007fe9f4c68c80  ;   {runtime_call ic_miss_stub}
           0x00007fe9f4cdc03d: data16 xchg ax,ax
         [Verified Entry Point]
  6.40%    0x00007fe9f4cdc040: sub    rsp,0x18
  3.36%    0x00007fe9f4cdc047: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@-1 (line 126)
  2.77%    0x00007fe9f4cdc04c: mov    eax,edx
           0x00007fe9f4cdc04e: shl    eax,0x4
           0x00007fe9f4cdc051: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 126)
           0x00007fe9f4cdc053: add    rsp,0x10
  0.43%    0x00007fe9f4cdc057: pop    rbp
  1.79%    0x00007fe9f4cdc058: mov    r10,QWORD PTR [r15+0x108]
           0x00007fe9f4cdc05f: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.08%    0x00007fe9f4cdc062: ret    
           0x00007fe9f4cdc063: hlt    
           0x00007fe9f4cdc064: hlt    
           0x00007fe9f4cdc065: hlt    
           0x00007fe9f4cdc066: hlt    
           0x00007fe9f4cdc067: hlt    
           0x00007fe9f4cdc068: hlt    
           0x00007fe9f4cdc069: hlt    
           0x00007fe9f4cdc06a: hlt    
           0x00007fe9f4cdc06b: hlt    
           0x00007fe9f4cdc06c: hlt    
....................................................................................................
 14.82%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call, version 122 (26 bytes) 

                                            [Deopt Handler Code]
                                              0x00007fe9f4cdc8e5: call   0x00007fe9f4cdc8ea
                                              0x00007fe9f4cdc8ea: sub    QWORD PTR [rsp],0x5
                                              0x00007fe9f4cdc8ef: jmp    0x00007fe9f4c6a520  ;   {runtime_call DeoptimizationBlob}
                                              0x00007fe9f4cdc8f4: hlt    
                                              0x00007fe9f4cdc8f5: hlt    
                                              0x00007fe9f4cdc8f6: hlt    
                                              0x00007fe9f4cdc8f7: hlt    
                                            ImmutableOopMap{}pc offsets: 28 </print_nmethod>
                                            Decoding VtableStub vtbl[5]@12
  0.66%                                       0x00007fe9f4cddd10: mov    eax,DWORD PTR [rsi+0x8]
  2.17%                                       0x00007fe9f4cddd13: movabs r12,0x800000000
  0.58%                                       0x00007fe9f4cddd1d: add    rax,r12
  1.53%                                       0x00007fe9f4cddd20: xor    r12,r12
                                              0x00007fe9f4cddd23: mov    rbx,QWORD PTR [rax+0x1f8]
  6.79%                                       0x00007fe9f4cddd2a: jmp    QWORD PTR [rbx+0x38]
                                              0x00007fe9f4cddd2d: .byte 0x0
                                            <task_queued compile_id='121' method='org.ib.benchmark.MegamorphicCallJavaBenchmark megamorphic4Call (Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState;)I' bytes='5' count='5000' backedge_count='1' iicount='10000' blocking='1' stamp='1,305' comment='count' hot_count='10000'/>
                                            <nmethod compile_id='121' compiler='c2' entry='0x00007fe9f4cdc2e0' size='1520' address='0x00007fe9f4cdc110' relocation_offset='376' insts_offset='464' stub_offset='752' scopes_data_offset='856' scopes_pcs_offset='1016' dependencies_offset='1400' handler_table_offset='1408' nul_chk_table_offset='1504' oops_offset='832' metadata_offset='840' method='org.ib.benchmark.MegamorphicCallJavaBenchmark megamorphic4Call (Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState;)I' bytes='5' count='5000' backedge_count='1' iicount='10000' stamp='1,306'/>
                                            <print_nmethod stamp='1,306'>
                                            Compiled method (c2)    1306  121             org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call (5 bytes)
                                             total in heap  [0x00007fe9f4cdc110,0x00007fe9f4cdc700] = 1520
                                             relocation     [0x00007fe9f4cdc288,0x00007fe9f4cdc2d0] = 72
                                             main code      [0x00007fe9f4cdc2e0,0x00007fe9f4cdc400] = 288
                                             stub code      [0x00007fe9f4cdc400,0x00007fe9f4cdc450] = 80
                                             oops           [0x00007fe9f4cdc450,0x00007fe9f4cdc458] = 8
....................................................................................................
 11.74%  <total for region 5>

....[Hottest Region 6]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 (204 bytes) 

            0x00007fe9f4ce3e4c: mov    r10,QWORD PTR [rsp+0x48]
            0x00007fe9f4ce3e51: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007fe9f4ce3ff2
            0x00007fe9f4ce3e59: test   r10d,r10d
            0x00007fe9f4ce3e5c: jne    0x00007fe9f4ce3f83  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
            0x00007fe9f4ce3e62: mov    ebp,0x1
            0x00007fe9f4ce3e67: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
  0.43%  ↗  0x00007fe9f4ce3e70: mov    r10,QWORD PTR [rsp+0x8]
         │  0x00007fe9f4ce3e75: mov    r10d,DWORD PTR [r10+0xc]
         │  0x00007fe9f4ce3e79: movabs r11,0x71b85b920    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b920} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
         │  0x00007fe9f4ce3e83: mov    edx,DWORD PTR [r11+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@4 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.37%  │  0x00007fe9f4ce3e87: mov    rsi,r10
         │  0x00007fe9f4ce3e8a: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@1 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007fe9f4ce3e8e: nop
         │  0x00007fe9f4ce3e8f: call   0x00007fe9f4c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@7 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
  0.02%  │  0x00007fe9f4ce3e94: mov    QWORD PTR [rsp+0x50],rbp
  0.49%  │  0x00007fe9f4ce3e99: mov    ebp,eax
  0.19%  │  0x00007fe9f4ce3e9b: mov    r10,QWORD PTR [rsp+0x8]
         │  0x00007fe9f4ce3ea0: mov    r11d,DWORD PTR [r10+0x10]
  0.89%  │  0x00007fe9f4ce3ea4: movabs r10,0x71b85b920    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b920} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.19%  │  0x00007fe9f4ce3eae: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@14 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007fe9f4ce3eb2: mov    rsi,r11
         │  0x00007fe9f4ce3eb5: shl    rsi,0x3            ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@11 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.41%  │  0x00007fe9f4ce3eb9: xchg   ax,ax
  0.08%  │  0x00007fe9f4ce3ebb: call   0x00007fe9f4c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@17 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007fe9f4ce3ec0: add    eax,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@20 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007fe9f4ce3ec2: mov    DWORD PTR [rsp+0x10],eax
  0.43%  │  0x00007fe9f4ce3ec6: movabs r10,0x71b85b920    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b920} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
         │  0x00007fe9f4ce3ed0: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@25 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007fe9f4ce3ed4: mov    r10,QWORD PTR [rsp+0x8]
         │  0x00007fe9f4ce3ed9: mov    r11d,DWORD PTR [r10+0x14]
  0.52%  │  0x00007fe9f4ce3edd: mov    rsi,r11
         │  0x00007fe9f4ce3ee0: shl    rsi,0x3            ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@22 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007fe9f4ce3ee4: data16 xchg ax,ax
         │  0x00007fe9f4ce3ee7: call   0x00007fe9f4c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@28 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007fe9f4ce3eec: mov    ebp,eax
         │  0x00007fe9f4ce3eee: add    ebp,DWORD PTR [rsp+0x10]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@31 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.70%  │  0x00007fe9f4ce3ef2: movabs r10,0x71b85b920    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b920} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
         │  0x00007fe9f4ce3efc: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@36 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007fe9f4ce3f00: mov    r10,QWORD PTR [rsp+0x8]
         │  0x00007fe9f4ce3f05: mov    r11d,DWORD PTR [r10+0x18]
  1.36%  │  0x00007fe9f4ce3f09: mov    rsi,r11
         │  0x00007fe9f4ce3f0c: shl    rsi,0x3            ;*getfield alg4 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@33 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.54%  │  0x00007fe9f4ce3f10: data16 xchg ax,ax
         │  0x00007fe9f4ce3f13: call   0x00007fe9f4c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@39 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007fe9f4ce3f18: mov    edx,eax
         │  0x00007fe9f4ce3f1a: add    edx,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@42 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007fe9f4ce3f1c: mov    rsi,QWORD PTR [rsp]
  0.47%  │  0x00007fe9f4ce3f20: data16 xchg ax,ax
         │  0x00007fe9f4ce3f23: call   0x00007fe9f4c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  3.90%  │  0x00007fe9f4ce3f28: mov    r10,QWORD PTR [rsp+0x48]
         │  0x00007fe9f4ce3f2d: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
         │  0x00007fe9f4ce3f35: mov    r11,QWORD PTR [r15+0x108]
  0.43%  │  0x00007fe9f4ce3f3c: mov    rbp,QWORD PTR [rsp+0x50]
         │  0x00007fe9f4ce3f41: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
         │  0x00007fe9f4ce3f45: test   DWORD PTR [r11],eax  ;   {poll}
         │  0x00007fe9f4ce3f48: test   r10d,r10d
         ╰  0x00007fe9f4ce3f4b: je     0x00007fe9f4ce3e70  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
            0x00007fe9f4ce3f51: movabs r10,0x7fea07813a00
            0x00007fe9f4ce3f5b: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@39 (line 198)
....................................................................................................
 11.41%  <total for region 6>

....[Hottest Regions]...............................................................................
 16.07%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (20 bytes) 
 15.85%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (27 bytes) 
 15.66%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 (20 bytes) 
 14.82%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (34 bytes) 
 11.74%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call, version 122 (26 bytes) 
 11.41%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 (204 bytes) 
  7.92%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 (43 bytes) 
  2.95%       kernel  [unknown] (6 bytes) 
  2.74%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 
  0.06%       kernel  [unknown] (0 bytes) 
  0.04%       kernel  [unknown] (1 bytes) 
  0.04%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.54%  <...other 28 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 16.07%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 
 15.85%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 
 15.66%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 
 14.82%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 
 11.74%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call, version 122 
 11.41%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 
  7.92%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 
  3.47%       kernel  [unknown] 
  2.74%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.02%  interpreter  invoke return entry points  
  0.02%  interpreter  getstatic  178 getstatic  
  0.02%    libjvm.so  _ZN7Matcher11find_sharedEP4Node 
  0.02%  interpreter  method entry point (kind = native)  
  0.02%    libjvm.so  _ZN4Type3cmpEPKS_S1_ 
  0.02%    libjvm.so  _ZN14PhaseIdealLoop24split_if_with_blocks_preEP4Node 
  0.02%    libjvm.so  _ZN10CodeBuffer25verify_section_allocationEv 
  0.02%    libjvm.so  _ZN12PhaseIterGVN25remove_globally_dead_nodeEP4Node 
  0.02%    libjvm.so  _ZN8IndexSet10free_blockEj 
  0.02%    libjvm.so  _ZN12PhaseChaitin20add_input_to_liveoutEP5BlockP4NodeP8IndexSetdRNS_8PressureES7_ 
  0.02%    libjvm.so  _ZN8PhaseIFG24Compute_Effective_DegreeEv 
  0.10%  <...other 5 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.20%           c2
  3.47%       kernel
  0.25%    libjvm.so
  0.06%  interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49835 total address lines.
Perf output processed (skipped 6.307 seconds):
 Column 1: cycles (5153 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (20 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f3cf0ce1ba0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f3cf0ce1ba4: movabs r12,0x800000000
            0x00007f3cf0ce1bae: add    r10,r12
            0x00007f3cf0ce1bb1: xor    r12,r12
            0x00007f3cf0ce1bb4: cmp    rax,r10
            0x00007f3cf0ce1bb7: jne    0x00007f3cf0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f3cf0ce1bbd: data16 xchg ax,ax
          [Verified Entry Point]
  8.29%     0x00007f3cf0ce1bc0: sub    rsp,0x18
  3.53%     0x00007f3cf0ce1bc7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@-1 (line 138)
  2.74%     0x00007f3cf0ce1bcc: imul   eax,edx,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@3 (line 138)
            0x00007f3cf0ce1bcf: add    rsp,0x10
            0x00007f3cf0ce1bd3: pop    rbp
  2.45%     0x00007f3cf0ce1bd4: mov    r10,QWORD PTR [r15+0x108]
            0x00007f3cf0ce1bdb: test   DWORD PTR [r10],eax  ;   {poll_return}
            0x00007f3cf0ce1bde: ret    
            0x00007f3cf0ce1bdf: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f3cf0ce1be0: jmp    0x00007f3cf0c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f3cf0ce1be5: call   0x00007f3cf0ce1bea
         ↘  0x00007f3cf0ce1bea: sub    QWORD PTR [rsp],0x5
            0x00007f3cf0ce1bef: jmp    0x00007f3cf0c6a520  ;   {runtime_call DeoptimizationBlob}
....................................................................................................
 17.00%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (20 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f3cf0cdd420: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f3cf0cdd424: movabs r12,0x800000000
            0x00007f3cf0cdd42e: add    r10,r12
            0x00007f3cf0cdd431: xor    r12,r12
            0x00007f3cf0cdd434: cmp    rax,r10
            0x00007f3cf0cdd437: jne    0x00007f3cf0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f3cf0cdd43d: data16 xchg ax,ax
          [Verified Entry Point]
  7.76%     0x00007f3cf0cdd440: sub    rsp,0x18
  3.94%     0x00007f3cf0cdd447: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@-1 (line 132)
  3.09%     0x00007f3cf0cdd44c: imul   eax,edx,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@3 (line 132)
            0x00007f3cf0cdd44f: add    rsp,0x10
            0x00007f3cf0cdd453: pop    rbp
  2.17%     0x00007f3cf0cdd454: mov    r10,QWORD PTR [r15+0x108]
            0x00007f3cf0cdd45b: test   DWORD PTR [r10],eax  ;   {poll_return}
            0x00007f3cf0cdd45e: ret    
            0x00007f3cf0cdd45f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f3cf0cdd460: jmp    0x00007f3cf0c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f3cf0cdd465: call   0x00007f3cf0cdd46a
         ↘  0x00007f3cf0cdd46a: sub    QWORD PTR [rsp],0x5
            0x00007f3cf0cdd46f: jmp    0x00007f3cf0c6a520  ;   {runtime_call DeoptimizationBlob}
....................................................................................................
 16.96%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 (20 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f3cf0ce1920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f3cf0ce1924: movabs r12,0x800000000
            0x00007f3cf0ce192e: add    r10,r12
            0x00007f3cf0ce1931: xor    r12,r12
            0x00007f3cf0ce1934: cmp    rax,r10
            0x00007f3cf0ce1937: jne    0x00007f3cf0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f3cf0ce193d: data16 xchg ax,ax
          [Verified Entry Point]
  6.83%     0x00007f3cf0ce1940: sub    rsp,0x18
  3.71%     0x00007f3cf0ce1947: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute@-1 (line 144)
  2.74%     0x00007f3cf0ce194c: imul   eax,edx,0x1d       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute@3 (line 144)
            0x00007f3cf0ce194f: add    rsp,0x10
            0x00007f3cf0ce1953: pop    rbp
  2.25%     0x00007f3cf0ce1954: mov    r10,QWORD PTR [r15+0x108]
            0x00007f3cf0ce195b: test   DWORD PTR [r10],eax  ;   {poll_return}
            0x00007f3cf0ce195e: ret    
            0x00007f3cf0ce195f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f3cf0ce1960: jmp    0x00007f3cf0c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f3cf0ce1965: call   0x00007f3cf0ce196a
         ↘  0x00007f3cf0ce196a: sub    QWORD PTR [rsp],0x5
            0x00007f3cf0ce196f: jmp    0x00007f3cf0c6a520  ;   {runtime_call DeoptimizationBlob}
....................................................................................................
 15.52%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (34 bytes) 

           # parm0:    rdx       = int
           #           [sp+0x20]  (sp of caller)
           0x00007f3cf0cdc020: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007f3cf0cdc024: movabs r12,0x800000000
           0x00007f3cf0cdc02e: add    r10,r12
           0x00007f3cf0cdc031: xor    r12,r12
           0x00007f3cf0cdc034: cmp    rax,r10
           0x00007f3cf0cdc037: jne    0x00007f3cf0c68c80  ;   {runtime_call ic_miss_stub}
           0x00007f3cf0cdc03d: data16 xchg ax,ax
         [Verified Entry Point]
  5.88%    0x00007f3cf0cdc040: sub    rsp,0x18
  3.36%    0x00007f3cf0cdc047: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@-1 (line 126)
  2.83%    0x00007f3cf0cdc04c: mov    eax,edx
           0x00007f3cf0cdc04e: shl    eax,0x4
           0x00007f3cf0cdc051: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 126)
           0x00007f3cf0cdc053: add    rsp,0x10
  0.37%    0x00007f3cf0cdc057: pop    rbp
  1.57%    0x00007f3cf0cdc058: mov    r10,QWORD PTR [r15+0x108]
           0x00007f3cf0cdc05f: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.08%    0x00007f3cf0cdc062: ret    
           0x00007f3cf0cdc063: hlt    
           0x00007f3cf0cdc064: hlt    
           0x00007f3cf0cdc065: hlt    
           0x00007f3cf0cdc066: hlt    
           0x00007f3cf0cdc067: hlt    
           0x00007f3cf0cdc068: hlt    
           0x00007f3cf0cdc069: hlt    
           0x00007f3cf0cdc06a: hlt    
           0x00007f3cf0cdc06b: hlt    
           0x00007f3cf0cdc06c: hlt    
....................................................................................................
 14.09%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call, version 122 (26 bytes) 

                                            [Deopt Handler Code]
                                              0x00007f3cf0cdc8e5: call   0x00007f3cf0cdc8ea
                                              0x00007f3cf0cdc8ea: sub    QWORD PTR [rsp],0x5
                                              0x00007f3cf0cdc8ef: jmp    0x00007f3cf0c6a520  ;   {runtime_call DeoptimizationBlob}
                                              0x00007f3cf0cdc8f4: hlt    
                                              0x00007f3cf0cdc8f5: hlt    
                                              0x00007f3cf0cdc8f6: hlt    
                                              0x00007f3cf0cdc8f7: hlt    
                                            ImmutableOopMap{}pc offsets: 28 </print_nmethod>
                                            Decoding VtableStub vtbl[5]@12
  0.70%                                       0x00007f3cf0cddd10: mov    eax,DWORD PTR [rsi+0x8]
  2.25%                                       0x00007f3cf0cddd13: movabs r12,0x800000000
  0.80%                                       0x00007f3cf0cddd1d: add    rax,r12
  1.13%                                       0x00007f3cf0cddd20: xor    r12,r12
                                              0x00007f3cf0cddd23: mov    rbx,QWORD PTR [rax+0x1f8]
  6.70%                                       0x00007f3cf0cddd2a: jmp    QWORD PTR [rbx+0x38]
                                              0x00007f3cf0cddd2d: .byte 0x0
                                            <task_queued compile_id='121' method='org.ib.benchmark.MegamorphicCallJavaBenchmark megamorphic4Call (Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState;)I' bytes='5' count='5000' backedge_count='1' iicount='10000' blocking='1' stamp='1,254' comment='count' hot_count='10000'/>
                                            <nmethod compile_id='121' compiler='c2' entry='0x00007f3cf0cdc2e0' size='1520' address='0x00007f3cf0cdc110' relocation_offset='376' insts_offset='464' stub_offset='752' scopes_data_offset='856' scopes_pcs_offset='1016' dependencies_offset='1400' handler_table_offset='1408' nul_chk_table_offset='1504' oops_offset='832' metadata_offset='840' method='org.ib.benchmark.MegamorphicCallJavaBenchmark megamorphic4Call (Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState;)I' bytes='5' count='5000' backedge_count='1' iicount='10000' stamp='1,255'/>
                                            <print_nmethod stamp='1,255'>
                                            Compiled method (c2)    1254  121             org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call (5 bytes)
                                             total in heap  [0x00007f3cf0cdc110,0x00007f3cf0cdc700] = 1520
                                             relocation     [0x00007f3cf0cdc288,0x00007f3cf0cdc2d0] = 72
                                             main code      [0x00007f3cf0cdc2e0,0x00007f3cf0cdc400] = 288
                                             stub code      [0x00007f3cf0cdc400,0x00007f3cf0cdc450] = 80
                                             oops           [0x00007f3cf0cdc450,0x00007f3cf0cdc458] = 8
....................................................................................................
 11.57%  <total for region 5>

....[Hottest Region 6]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 (204 bytes) 

            0x00007f3cf0ce3e4c: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f3cf0ce3e51: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f3cf0ce3ff2
            0x00007f3cf0ce3e59: test   r10d,r10d
            0x00007f3cf0ce3e5c: jne    0x00007f3cf0ce3f83  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
            0x00007f3cf0ce3e62: mov    ebp,0x1
            0x00007f3cf0ce3e67: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
  0.41%  ↗  0x00007f3cf0ce3e70: mov    r10,QWORD PTR [rsp+0x8]
         │  0x00007f3cf0ce3e75: mov    r10d,DWORD PTR [r10+0xc]
         │  0x00007f3cf0ce3e79: movabs r11,0x71b85bff0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85bff0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
         │  0x00007f3cf0ce3e83: mov    edx,DWORD PTR [r11+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@4 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.43%  │  0x00007f3cf0ce3e87: mov    rsi,r10
         │  0x00007f3cf0ce3e8a: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@1 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007f3cf0ce3e8e: nop
         │  0x00007f3cf0ce3e8f: call   0x00007f3cf0c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@7 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f3cf0ce3e94: mov    QWORD PTR [rsp+0x50],rbp
  0.33%  │  0x00007f3cf0ce3e99: mov    ebp,eax
  0.31%  │  0x00007f3cf0ce3e9b: mov    r10,QWORD PTR [rsp+0x8]
         │  0x00007f3cf0ce3ea0: mov    r11d,DWORD PTR [r10+0x10]
  0.91%  │  0x00007f3cf0ce3ea4: movabs r10,0x71b85bff0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85bff0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.08%  │  0x00007f3cf0ce3eae: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@14 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007f3cf0ce3eb2: mov    rsi,r11
         │  0x00007f3cf0ce3eb5: shl    rsi,0x3            ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@11 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.39%  │  0x00007f3cf0ce3eb9: xchg   ax,ax
  0.10%  │  0x00007f3cf0ce3ebb: call   0x00007f3cf0c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@17 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f3cf0ce3ec0: add    eax,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@20 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007f3cf0ce3ec2: mov    DWORD PTR [rsp+0x10],eax
  0.41%  │  0x00007f3cf0ce3ec6: movabs r10,0x71b85bff0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85bff0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
         │  0x00007f3cf0ce3ed0: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@25 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.02%  │  0x00007f3cf0ce3ed4: mov    r10,QWORD PTR [rsp+0x8]
         │  0x00007f3cf0ce3ed9: mov    r11d,DWORD PTR [r10+0x14]
  0.39%  │  0x00007f3cf0ce3edd: mov    rsi,r11
         │  0x00007f3cf0ce3ee0: shl    rsi,0x3            ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@22 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007f3cf0ce3ee4: data16 xchg ax,ax
         │  0x00007f3cf0ce3ee7: call   0x00007f3cf0c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@28 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f3cf0ce3eec: mov    ebp,eax
         │  0x00007f3cf0ce3eee: add    ebp,DWORD PTR [rsp+0x10]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@31 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.43%  │  0x00007f3cf0ce3ef2: movabs r10,0x71b85bff0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85bff0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
         │  0x00007f3cf0ce3efc: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@36 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007f3cf0ce3f00: mov    r10,QWORD PTR [rsp+0x8]
         │  0x00007f3cf0ce3f05: mov    r11d,DWORD PTR [r10+0x18]
  1.28%  │  0x00007f3cf0ce3f09: mov    rsi,r11
         │  0x00007f3cf0ce3f0c: shl    rsi,0x3            ;*getfield alg4 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@33 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.37%  │  0x00007f3cf0ce3f10: data16 xchg ax,ax
         │  0x00007f3cf0ce3f13: call   0x00007f3cf0c69400  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@39 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f3cf0ce3f18: mov    edx,eax
         │  0x00007f3cf0ce3f1a: add    edx,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@42 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007f3cf0ce3f1c: mov    rsi,QWORD PTR [rsp]
  0.50%  │  0x00007f3cf0ce3f20: data16 xchg ax,ax
         │  0x00007f3cf0ce3f23: call   0x00007f3cf0c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  3.78%  │  0x00007f3cf0ce3f28: mov    r10,QWORD PTR [rsp+0x48]
         │  0x00007f3cf0ce3f2d: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
         │  0x00007f3cf0ce3f35: mov    r11,QWORD PTR [r15+0x108]
  0.45%  │  0x00007f3cf0ce3f3c: mov    rbp,QWORD PTR [rsp+0x50]
         │  0x00007f3cf0ce3f41: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
         │  0x00007f3cf0ce3f45: test   DWORD PTR [r11],eax  ;   {poll}
         │  0x00007f3cf0ce3f48: test   r10d,r10d
         ╰  0x00007f3cf0ce3f4b: je     0x00007f3cf0ce3e70  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
            0x00007f3cf0ce3f51: movabs r10,0x7f3d01fa1a00
            0x00007f3cf0ce3f5b: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@39 (line 198)
....................................................................................................
 10.58%  <total for region 6>

....[Hottest Regions]...............................................................................
 17.00%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (20 bytes) 
 16.96%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (20 bytes) 
 15.52%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 (20 bytes) 
 14.09%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (34 bytes) 
 11.57%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call, version 122 (26 bytes) 
 10.58%            c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 (204 bytes) 
  7.80%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 (43 bytes) 
  2.91%        kernel  [unknown] (6 bytes) 
  2.70%            c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 
  0.06%        kernel  [unknown] (0 bytes) 
  0.06%        kernel  [unknown] (0 bytes) 
  0.04%        kernel  [unknown] (9 bytes) 
  0.04%        kernel  [unknown] (4 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.52%  <...other 27 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 17.00%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 
 16.96%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 
 15.52%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 
 14.09%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 
 11.57%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call, version 122 
 10.58%            c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 
  7.80%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 
  3.36%        kernel  [unknown] 
  2.70%            c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.02%     libjvm.so  jio_print 
  0.02%     libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%     libjvm.so  _ZN15G1CollectedHeap27safepoint_synchronize_beginEv 
  0.02%     libjvm.so  _ZNK10TypeAryPtr10add_offsetEl 
  0.02%   interpreter  method entry point (kind = zerolocals)  
  0.02%  libc-2.28.so  _IO_fwrite 
  0.02%     libjvm.so  _ZNK15ClassFileParser29verify_legal_method_signatureEPK6SymbolS2_P6Thread 
  0.02%     libjvm.so  _ZN14PhaseIdealLoop18build_and_optimizeEbbb 
  0.02%     libjvm.so  _ZNK6Symbol15print_symbol_onEP12outputStream 
  0.02%     libjvm.so  _ZNK7TypeInt9singletonEv 
  0.02%     libjvm.so  _ZN12PhaseChaitin18build_ifg_physicalEP12ResourceArea 
  0.19%  <...other 10 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.22%            c2
  3.36%        kernel
  0.35%     libjvm.so
  0.04%  libc-2.28.so
  0.02%   interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49835 total address lines.
Perf output processed (skipped 6.249 seconds):
 Column 1: cycles (5148 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 (27 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f053cac4920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f053cac4924: movabs r12,0x800000000
            0x00007f053cac492e: add    r10,r12
            0x00007f053cac4931: xor    r12,r12
            0x00007f053cac4934: cmp    rax,r10
            0x00007f053cac4937: jne    0x00007f053ca4bc80  ;   {runtime_call ic_miss_stub}
            0x00007f053cac493d: data16 xchg ax,ax
          [Verified Entry Point]
  7.50%     0x00007f053cac4940: sub    rsp,0x18
  3.50%     0x00007f053cac4947: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute@-1 (line 144)
  2.91%     0x00007f053cac494c: imul   eax,edx,0x1d       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute@3 (line 144)
            0x00007f053cac494f: add    rsp,0x10
            0x00007f053cac4953: pop    rbp
  2.12%     0x00007f053cac4954: mov    r10,QWORD PTR [r15+0x108]
  0.02%     0x00007f053cac495b: test   DWORD PTR [r10],eax  ;   {poll_return}
            0x00007f053cac495e: ret    
            0x00007f053cac495f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f053cac4960: jmp    0x00007f053ca82680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f053cac4965: call   0x00007f053cac496a
         ↘  0x00007f053cac496a: sub    QWORD PTR [rsp],0x5
            0x00007f053cac496f: jmp    0x00007f053ca4d520  ;   {runtime_call DeoptimizationBlob}
            0x00007f053cac4974: hlt    
....................................................................................................
 16.05%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (20 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f053cac4ba0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f053cac4ba4: movabs r12,0x800000000
            0x00007f053cac4bae: add    r10,r12
            0x00007f053cac4bb1: xor    r12,r12
            0x00007f053cac4bb4: cmp    rax,r10
            0x00007f053cac4bb7: jne    0x00007f053ca4bc80  ;   {runtime_call ic_miss_stub}
            0x00007f053cac4bbd: data16 xchg ax,ax
          [Verified Entry Point]
  7.73%     0x00007f053cac4bc0: sub    rsp,0x18
  3.48%     0x00007f053cac4bc7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@-1 (line 138)
  2.49%     0x00007f053cac4bcc: imul   eax,edx,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@3 (line 138)
            0x00007f053cac4bcf: add    rsp,0x10
            0x00007f053cac4bd3: pop    rbp
  2.35%     0x00007f053cac4bd4: mov    r10,QWORD PTR [r15+0x108]
            0x00007f053cac4bdb: test   DWORD PTR [r10],eax  ;   {poll_return}
            0x00007f053cac4bde: ret    
            0x00007f053cac4bdf: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f053cac4be0: jmp    0x00007f053ca82680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f053cac4be5: call   0x00007f053cac4bea
         ↘  0x00007f053cac4bea: sub    QWORD PTR [rsp],0x5
            0x00007f053cac4bef: jmp    0x00007f053ca4d520  ;   {runtime_call DeoptimizationBlob}
....................................................................................................
 16.05%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (30 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f053cac0420: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f053cac0424: movabs r12,0x800000000
            0x00007f053cac042e: add    r10,r12
            0x00007f053cac0431: xor    r12,r12
            0x00007f053cac0434: cmp    rax,r10
            0x00007f053cac0437: jne    0x00007f053ca4bc80  ;   {runtime_call ic_miss_stub}
            0x00007f053cac043d: data16 xchg ax,ax
          [Verified Entry Point]
  7.73%     0x00007f053cac0440: sub    rsp,0x18
  3.54%     0x00007f053cac0447: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@-1 (line 132)
  2.58%     0x00007f053cac044c: imul   eax,edx,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@3 (line 132)
            0x00007f053cac044f: add    rsp,0x10
  0.02%     0x00007f053cac0453: pop    rbp
  2.06%     0x00007f053cac0454: mov    r10,QWORD PTR [r15+0x108]
            0x00007f053cac045b: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.02%     0x00007f053cac045e: ret    
            0x00007f053cac045f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f053cac0460: jmp    0x00007f053ca82680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f053cac0465: call   0x00007f053cac046a
         ↘  0x00007f053cac046a: sub    QWORD PTR [rsp],0x5
            0x00007f053cac046f: jmp    0x00007f053ca4d520  ;   {runtime_call DeoptimizationBlob}
            0x00007f053cac0474: hlt    
            0x00007f053cac0475: hlt    
....................................................................................................
 15.95%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (34 bytes) 

           # parm0:    rdx       = int
           #           [sp+0x20]  (sp of caller)
           0x00007f053cabf020: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007f053cabf024: movabs r12,0x800000000
           0x00007f053cabf02e: add    r10,r12
           0x00007f053cabf031: xor    r12,r12
           0x00007f053cabf034: cmp    rax,r10
           0x00007f053cabf037: jne    0x00007f053ca4bc80  ;   {runtime_call ic_miss_stub}
           0x00007f053cabf03d: data16 xchg ax,ax
         [Verified Entry Point]
  6.25%    0x00007f053cabf040: sub    rsp,0x18
  3.19%    0x00007f053cabf047: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@-1 (line 126)
  2.49%    0x00007f053cabf04c: mov    eax,edx
           0x00007f053cabf04e: shl    eax,0x4
           0x00007f053cabf051: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 126)
           0x00007f053cabf053: add    rsp,0x10
  0.37%    0x00007f053cabf057: pop    rbp
  1.88%    0x00007f053cabf058: mov    r10,QWORD PTR [r15+0x108]
           0x00007f053cabf05f: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.02%    0x00007f053cabf062: ret    
           0x00007f053cabf063: hlt    
           0x00007f053cabf064: hlt    
           0x00007f053cabf065: hlt    
           0x00007f053cabf066: hlt    
           0x00007f053cabf067: hlt    
           0x00007f053cabf068: hlt    
           0x00007f053cabf069: hlt    
           0x00007f053cabf06a: hlt    
           0x00007f053cabf06b: hlt    
           0x00007f053cabf06c: hlt    
....................................................................................................
 14.20%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call, version 122 (26 bytes) 

                                            [Deopt Handler Code]
                                              0x00007f053cabf8e5: call   0x00007f053cabf8ea
                                              0x00007f053cabf8ea: sub    QWORD PTR [rsp],0x5
                                              0x00007f053cabf8ef: jmp    0x00007f053ca4d520  ;   {runtime_call DeoptimizationBlob}
                                              0x00007f053cabf8f4: hlt    
                                              0x00007f053cabf8f5: hlt    
                                              0x00007f053cabf8f6: hlt    
                                              0x00007f053cabf8f7: hlt    
                                            ImmutableOopMap{}pc offsets: 28 </print_nmethod>
                                            Decoding VtableStub vtbl[5]@12
  0.51%                                       0x00007f053cac0d10: mov    eax,DWORD PTR [rsi+0x8]
  2.35%                                       0x00007f053cac0d13: movabs r12,0x800000000
  0.39%                                       0x00007f053cac0d1d: add    rax,r12
  1.42%                                       0x00007f053cac0d20: xor    r12,r12
                                              0x00007f053cac0d23: mov    rbx,QWORD PTR [rax+0x1f8]
  7.46%                                       0x00007f053cac0d2a: jmp    QWORD PTR [rbx+0x38]
                                              0x00007f053cac0d2d: .byte 0x0
                                            <task_queued compile_id='121' method='org.ib.benchmark.MegamorphicCallJavaBenchmark megamorphic4Call (Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState;)I' bytes='5' count='5000' backedge_count='1' iicount='10000' blocking='1' stamp='1,196' comment='count' hot_count='10000'/>
                                            <nmethod compile_id='121' compiler='c2' entry='0x00007f053cabf2e0' size='1520' address='0x00007f053cabf110' relocation_offset='376' insts_offset='464' stub_offset='752' scopes_data_offset='856' scopes_pcs_offset='1016' dependencies_offset='1400' handler_table_offset='1408' nul_chk_table_offset='1504' oops_offset='832' metadata_offset='840' method='org.ib.benchmark.MegamorphicCallJavaBenchmark megamorphic4Call (Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState;)I' bytes='5' count='5000' backedge_count='1' iicount='10000' stamp='1,197'/>
                                            <print_nmethod stamp='1,197'>
                                            Compiled method (c2)    1196  121             org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call (5 bytes)
                                             total in heap  [0x00007f053cabf110,0x00007f053cabf700] = 1520
                                             relocation     [0x00007f053cabf288,0x00007f053cabf2d0] = 72
                                             main code      [0x00007f053cabf2e0,0x00007f053cabf400] = 288
                                             stub code      [0x00007f053cabf400,0x00007f053cabf450] = 80
                                             oops           [0x00007f053cabf450,0x00007f053cabf458] = 8
....................................................................................................
 12.12%  <total for region 5>

....[Hottest Region 6]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 (204 bytes) 

            0x00007f053cac6e4c: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f053cac6e51: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f053cac6ff2
            0x00007f053cac6e59: test   r10d,r10d
            0x00007f053cac6e5c: jne    0x00007f053cac6f83  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
            0x00007f053cac6e62: mov    ebp,0x1
            0x00007f053cac6e67: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
  0.39%  ↗  0x00007f053cac6e70: mov    r10,QWORD PTR [rsp+0x8]
         │  0x00007f053cac6e75: mov    r10d,DWORD PTR [r10+0xc]
         │  0x00007f053cac6e79: movabs r11,0x71b85b920    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b920} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
         │  0x00007f053cac6e83: mov    edx,DWORD PTR [r11+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@4 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.47%  │  0x00007f053cac6e87: mov    rsi,r10
         │  0x00007f053cac6e8a: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@1 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007f053cac6e8e: nop
         │  0x00007f053cac6e8f: call   0x00007f053ca4c400  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@7 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f053cac6e94: mov    QWORD PTR [rsp+0x50],rbp
  0.31%  │  0x00007f053cac6e99: mov    ebp,eax
  0.17%  │  0x00007f053cac6e9b: mov    r10,QWORD PTR [rsp+0x8]
         │  0x00007f053cac6ea0: mov    r11d,DWORD PTR [r10+0x10]
  0.91%  │  0x00007f053cac6ea4: movabs r10,0x71b85b920    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b920} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.16%  │  0x00007f053cac6eae: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@14 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007f053cac6eb2: mov    rsi,r11
         │  0x00007f053cac6eb5: shl    rsi,0x3            ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@11 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.29%  │  0x00007f053cac6eb9: xchg   ax,ax
         │  0x00007f053cac6ebb: call   0x00007f053ca4c400  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@17 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f053cac6ec0: add    eax,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@20 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007f053cac6ec2: mov    DWORD PTR [rsp+0x10],eax
  0.49%  │  0x00007f053cac6ec6: movabs r10,0x71b85b920    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b920} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
         │  0x00007f053cac6ed0: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@25 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007f053cac6ed4: mov    r10,QWORD PTR [rsp+0x8]
         │  0x00007f053cac6ed9: mov    r11d,DWORD PTR [r10+0x14]
  0.39%  │  0x00007f053cac6edd: mov    rsi,r11
         │  0x00007f053cac6ee0: shl    rsi,0x3            ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@22 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007f053cac6ee4: data16 xchg ax,ax
         │  0x00007f053cac6ee7: call   0x00007f053ca4c400  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@28 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f053cac6eec: mov    ebp,eax
         │  0x00007f053cac6eee: add    ebp,DWORD PTR [rsp+0x10]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@31 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.54%  │  0x00007f053cac6ef2: movabs r10,0x71b85b920    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b920} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
         │  0x00007f053cac6efc: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@36 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007f053cac6f00: mov    r10,QWORD PTR [rsp+0x8]
         │  0x00007f053cac6f05: mov    r11d,DWORD PTR [r10+0x18]
  1.40%  │  0x00007f053cac6f09: mov    rsi,r11
         │  0x00007f053cac6f0c: shl    rsi,0x3            ;*getfield alg4 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@33 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.43%  │  0x00007f053cac6f10: data16 xchg ax,ax
         │  0x00007f053cac6f13: call   0x00007f053ca4c400  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@39 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {static_call}
         │  0x00007f053cac6f18: mov    edx,eax
         │  0x00007f053cac6f1a: add    edx,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@42 (line 116)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 63)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │  0x00007f053cac6f1c: mov    rsi,QWORD PTR [rsp]
  0.47%  │  0x00007f053cac6f20: data16 xchg ax,ax
         │  0x00007f053cac6f23: call   0x00007f053ca4bf00  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  3.92%  │  0x00007f053cac6f28: mov    r10,QWORD PTR [rsp+0x48]
         │  0x00007f053cac6f2d: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
         │  0x00007f053cac6f35: mov    r11,QWORD PTR [r15+0x108]
  0.43%  │  0x00007f053cac6f3c: mov    rbp,QWORD PTR [rsp+0x50]
         │  0x00007f053cac6f41: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
         │  0x00007f053cac6f45: test   DWORD PTR [r11],eax  ;   {poll}
         │  0x00007f053cac6f48: test   r10d,r10d
         ╰  0x00007f053cac6f4b: je     0x00007f053cac6e70  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
            0x00007f053cac6f51: movabs r10,0x7f054d54aa00
            0x00007f053cac6f5b: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@39 (line 198)
....................................................................................................
 10.76%  <total for region 6>

....[Hottest Regions]...............................................................................
 16.05%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 (27 bytes) 
 16.05%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (20 bytes) 
 15.95%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (30 bytes) 
 14.20%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (34 bytes) 
 12.12%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call, version 122 (26 bytes) 
 10.76%                  c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 (204 bytes) 
  8.10%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 (43 bytes) 
  3.05%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 
  2.45%              kernel  [unknown] (6 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.97%  <...other 50 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 16.05%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 
 16.05%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 
 15.95%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 
 14.20%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 
 12.12%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call, version 122 
 10.76%                  c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 
  8.10%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 120 
  3.15%              kernel  [unknown] 
  3.05%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  0.04%         interpreter  getstatic  178 getstatic  
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN22Node_Backward_Iterator4nextEv 
  0.02%         interpreter  invoke return entry points  
  0.02%           libjvm.so  _ZN10Dictionary4findEjP6Symbol6Handle 
  0.02%      hsdis-amd64.so  print_insn 
  0.02%           libjvm.so  _ZN25PhaseConservativeCoalesce10update_ifgEjjP8IndexSetS1_ 
  0.02%         interpreter  iinc  132 iinc  
  0.02%  libpthread-2.28.so  __pthread_disable_asynccancel 
  0.02%           libjvm.so  _ZN5Parse18merge_memory_edgesEP12MergeMemNodeib 
  0.02%           libjvm.so  _ZN6IfNode16search_identicalEi 
  0.31%  <...other 16 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.27%                  c2
  3.15%              kernel
  0.31%           libjvm.so
  0.16%         interpreter
  0.06%  libpthread-2.28.so
  0.04%      hsdis-amd64.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallJavaBenchmark.MonomorphicJava
# Parameters: (param = 3)

# Run progress: 37.50% complete, ETA 00:02:54
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.942 ns/op
# Warmup Iteration   2: 3.888 ns/op
# Warmup Iteration   3: 4.057 ns/op
# Warmup Iteration   4: 4.058 ns/op
# Warmup Iteration   5: 4.068 ns/op
Iteration   1: 4.090 ns/op
Iteration   2: 4.069 ns/op
Iteration   3: 4.109 ns/op
Iteration   4: 4.102 ns/op
Iteration   5: 4.059 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 41.67% complete, ETA 00:02:42
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.887 ns/op
# Warmup Iteration   2: 4.463 ns/op
# Warmup Iteration   3: 4.709 ns/op
# Warmup Iteration   4: 4.656 ns/op
# Warmup Iteration   5: 4.648 ns/op
Iteration   1: 4.639 ns/op
Iteration   2: 4.685 ns/op
Iteration   3: 4.624 ns/op
Iteration   4: 4.722 ns/op
Iteration   5: 4.615 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 45.83% complete, ETA 00:02:30
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.362 ns/op
# Warmup Iteration   2: 4.396 ns/op
# Warmup Iteration   3: 4.552 ns/op
# Warmup Iteration   4: 4.542 ns/op
# Warmup Iteration   5: 4.549 ns/op
Iteration   1: 4.507 ns/op
Iteration   2: 4.636 ns/op
Iteration   3: 4.610 ns/op
Iteration   4: 4.599 ns/op
Iteration   5: 4.602 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallJavaBenchmark.MonomorphicJava":
  4.445 ±(99.9%) 0.285 ns/op [Average]
  (min, avg, max) = (4.059, 4.445, 4.722), stdev = 0.267
  CI (99.9%): [4.159, 4.730] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallJavaBenchmark.MonomorphicJava:·asm":
PrintAssembly processed: 49042 total address lines.
Perf output processed (skipped 6.245 seconds):
 Column 1: cycles (5140 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub, version 129 (80 bytes) 

             0x00007f6b3ccdd4e9: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@32 (line 197)
                                                           ; implicit exception: dispatches to 0x00007f6b3ccdd5f2
             0x00007f6b3ccdd4f1: test   r10d,r10d
             0x00007f6b3ccdd4f4: jne    0x00007f6b3ccdd597  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
             0x00007f6b3ccdd4fa: mov    r10d,0x1
             0x00007f6b3ccdd500: mov    QWORD PTR [rsp+0x40],r10
         ╭   0x00007f6b3ccdd505: jmp    0x00007f6b3ccdd515
         │   0x00007f6b3ccdd507: nop    WORD PTR [rax+rax*1+0x0]
  1.83%  │↗  0x00007f6b3ccdd510: mov    QWORD PTR [rsp+0x40],rbx  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@38 (line 198)
  1.71%  ↘│  0x00007f6b3ccdd515: mov    r11d,DWORD PTR [rbp+0xc]
  2.26%   │  0x00007f6b3ccdd519: movabs r10,0x71b85b528    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b528} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$MonomorphicJavaState&apos;)}
  1.40%   │  0x00007f6b3ccdd523: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$MonomorphicJavaState::monomorphicCall@4 (line 74)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::monomorphicCall@1 (line 44)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
  2.20%   │  0x00007f6b3ccdd527: mov    rsi,r11
  1.50%   │  0x00007f6b3ccdd52a: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$MonomorphicJavaState::monomorphicCall@1 (line 74)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::monomorphicCall@1 (line 44)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
  1.85%   │  0x00007f6b3ccdd52e: nop
  1.96%   │  0x00007f6b3ccdd52f: call   0x00007f6b3cc69400  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$MonomorphicJavaState::monomorphicCall@7 (line 74)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::monomorphicCall@1 (line 44)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
          │                                                ;   {static_call}
  3.50%   │  0x00007f6b3ccdd534: mov    rsi,QWORD PTR [rsp]
  2.70%   │  0x00007f6b3ccdd538: mov    edx,eax
  2.02%   │  0x00007f6b3ccdd53a: nop
  2.32%   │  0x00007f6b3ccdd53b: call   0x00007f6b3cc68f00  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@22 (line 195)
          │                                                ;   {optimized virtual_call}
  4.32%   │  0x00007f6b3ccdd540: mov    r10,QWORD PTR [rsp+0x38]
  3.07%   │  0x00007f6b3ccdd545: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
  1.96%   │  0x00007f6b3ccdd54d: mov    r10,QWORD PTR [r15+0x108]
  1.98%   │  0x00007f6b3ccdd554: mov    rbx,QWORD PTR [rsp+0x40]
  1.46%   │  0x00007f6b3ccdd559: add    rbx,0x1            ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
  1.69%   │  0x00007f6b3ccdd55d: test   DWORD PTR [r10],eax  ;   {poll}
  1.69%   │  0x00007f6b3ccdd560: test   r11d,r11d
          ╰  0x00007f6b3ccdd563: je     0x00007f6b3ccdd510  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@38 (line 198)
             0x00007f6b3ccdd565: movabs r10,0x7f6b4fed1a00
             0x00007f6b3ccdd56f: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@39 (line 198)
             0x00007f6b3ccdd572: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f6b3ccdd577: mov    QWORD PTR [r10+0x18],rbx  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@54 (line 200)
             0x00007f6b3ccdd57b: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 41.44%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 124 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f6b3cce2f20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f6b3cce2f24: movabs r12,0x800000000
            0x00007f6b3cce2f2e: add    r10,r12
            0x00007f6b3cce2f31: xor    r12,r12
            0x00007f6b3cce2f34: cmp    rax,r10
            0x00007f6b3cce2f37: jne    0x00007f6b3cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007f6b3cce2f3d: data16 xchg ax,ax
          [Verified Entry Point]
  2.39%     0x00007f6b3cce2f40: mov    DWORD PTR [rsp-0x14000],eax
  4.12%     0x00007f6b3cce2f47: push   rbp
  1.65%     0x00007f6b3cce2f48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.37%     0x00007f6b3cce2f4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.32%     0x00007f6b3cce2f53: mov    r8d,edx
  1.58%     0x00007f6b3cce2f56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.36%     0x00007f6b3cce2f5d: mov    r9d,edx
  1.69%     0x00007f6b3cce2f60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.41%     0x00007f6b3cce2f63: cmp    r9d,r8d
         ╭  0x00007f6b3cce2f66: je     0x00007f6b3cce2f78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  1.32%  │  0x00007f6b3cce2f68: add    rsp,0x20
  1.23%  │  0x00007f6b3cce2f6c: pop    rbp
  2.20%  │  0x00007f6b3cce2f6d: mov    r10,QWORD PTR [r15+0x108]
  2.18%  │  0x00007f6b3cce2f74: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.40%  │  0x00007f6b3cce2f77: ret    
         ↘  0x00007f6b3cce2f78: mov    rbp,rsi
            0x00007f6b3cce2f7b: mov    DWORD PTR [rsp],edx
            0x00007f6b3cce2f7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f6b3cce2f83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f6b3cce2f88: mov    esi,0xffffff4d
            0x00007f6b3cce2f8d: xchg   ax,ax
            0x00007f6b3cce2f8f: call   0x00007f6b3cc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 29.22%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 122 (39 bytes) 

           dependencies   [0x00007f6b3ccdc238,0x00007f6b3ccdc240] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark.compute(Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath;I)I  [0x00007f6b3ccdc120, 0x00007f6b3ccdc178]  88 bytes
          [Entry Point]
          [Verified Entry Point]
          [Constants]
            # {method} {0x00007f6b29fc1e58} &apos;compute&apos; &apos;(Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath;I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark&apos;
            # parm0:    rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath&apos;
            # parm1:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  3.04%     0x00007f6b3ccdc120: mov    DWORD PTR [rsp-0x14000],eax
  4.46%     0x00007f6b3ccdc127: push   rbp
  1.75%     0x00007f6b3ccdc128: sub    rsp,0x10           ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@-1 (line 38)
  3.15%     0x00007f6b3ccdc12c: test   rsi,rsi
         ╭  0x00007f6b3ccdc12f: je     0x00007f6b3ccdc148  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
  1.44%  │  0x00007f6b3ccdc131: mov    eax,edx
  1.77%  │  0x00007f6b3ccdc133: shl    eax,0x4
  1.44%  │  0x00007f6b3ccdc136: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 126)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
  1.95%  │  0x00007f6b3ccdc138: add    rsp,0x10
  1.91%  │  0x00007f6b3ccdc13c: pop    rbp
  1.91%  │  0x00007f6b3ccdc13d: mov    r10,QWORD PTR [r15+0x108]
  1.28%  │  0x00007f6b3ccdc144: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.77%  │  0x00007f6b3ccdc147: ret    
         ↘  0x00007f6b3ccdc148: mov    esi,0xfffffff6
            0x00007f6b3ccdc14d: mov    ebp,edx
            0x00007f6b3ccdc14f: call   0x00007f6b3cc6a900  ; ImmutableOopMap{}
                                                          ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
                                                          ;   {runtime_call UncommonTrapBlob}
            0x00007f6b3ccdc154: ud2                       ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
            0x00007f6b3ccdc156: hlt    
            0x00007f6b3ccdc157: hlt    
....................................................................................................
 25.86%  <total for region 3>

....[Hottest Regions]...............................................................................
 41.44%             c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub, version 129 (80 bytes) 
 29.22%             c2  org.openjdk.jmh.infra.Blackhole::consume, version 124 (55 bytes) 
 25.86%             c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 122 (39 bytes) 
  2.61%         kernel  [unknown] (6 bytes) 
  0.10%         kernel  [unknown] (16 bytes) 
  0.08%         kernel  [unknown] (3 bytes) 
  0.06%         kernel  [unknown] (0 bytes) 
  0.04%         kernel  [unknown] (0 bytes) 
  0.04%         kernel  [unknown] (0 bytes) 
  0.02%         kernel  [unknown] (0 bytes) 
  0.02%         kernel  [unknown] (0 bytes) 
  0.02%         kernel  [unknown] (0 bytes) 
  0.02%         kernel  [unknown] (0 bytes) 
  0.02%         kernel  [unknown] (0 bytes) 
  0.02%         kernel  [unknown] (0 bytes) 
  0.02%         kernel  [unknown] (0 bytes) 
  0.02%         kernel  [unknown] (0 bytes) 
  0.02%         kernel  [unknown] (0 bytes) 
  0.02%         kernel  [unknown] (0 bytes) 
  0.02%         kernel  [unknown] (0 bytes) 
  0.33%  <...other 17 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 41.44%             c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub, version 129 
 29.22%             c2  org.openjdk.jmh.infra.Blackhole::consume, version 124 
 25.86%             c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 122 
  3.13%         kernel  [unknown] 
  0.04%    interpreter  method entry point (kind = zerolocals)  
  0.02%    interpreter  fast_iload  224 fast_iload  
  0.02%      libjvm.so  _ZNK15G1CollectionSet7iterateEP17HeapRegionClosure 
  0.02%    interpreter  invoke return entry points  
  0.02%  perf-8976.map  [unknown] 
  0.02%    interpreter  method entry point (kind = native)  
  0.02%      libjvm.so  _ZNK6vframe6senderEv 
  0.02%    interpreter  return  177 return  
  0.02%      libjvm.so  _ZN12PhaseChaitin26post_allocate_copy_removalEv 
  0.02%      libjvm.so  _ZN9CodeCache9find_blobEPv 
  0.02%      libjvm.so  _ZNK17ObjArrayAllocator10initializeEP8HeapWord 
  0.02%    interpreter  fast_igetfield  208 fast_igetfield  
  0.02%      libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%    interpreter  aload_3  45 aload_3  
  0.02%    interpreter  invokeinterface  185 invokeinterface  
  0.02%      libjvm.so  _ZN21ParallelSPCleanupTask4workEj 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.52%             c2
  3.13%         kernel
  0.18%    interpreter
  0.14%      libjvm.so
  0.02%  perf-8976.map
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49059 total address lines.
Perf output processed (skipped 6.183 seconds):
 Column 1: cycles (5102 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub, version 129 (80 bytes) 

             0x00007f1c28cdd469: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@32 (line 197)
                                                           ; implicit exception: dispatches to 0x00007f1c28cdd572
             0x00007f1c28cdd471: test   r10d,r10d
             0x00007f1c28cdd474: jne    0x00007f1c28cdd517  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
             0x00007f1c28cdd47a: mov    r10d,0x1
             0x00007f1c28cdd480: mov    QWORD PTR [rsp+0x40],r10
         ╭   0x00007f1c28cdd485: jmp    0x00007f1c28cdd495
         │   0x00007f1c28cdd487: nop    WORD PTR [rax+rax*1+0x0]
  1.71%  │↗  0x00007f1c28cdd490: mov    QWORD PTR [rsp+0x40],rbx  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@38 (line 198)
  1.31%  ↘│  0x00007f1c28cdd495: mov    r11d,DWORD PTR [rbp+0xc]
  2.20%   │  0x00007f1c28cdd499: movabs r10,0x71b85b528    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85b528} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$MonomorphicJavaState&apos;)}
  1.63%   │  0x00007f1c28cdd4a3: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$MonomorphicJavaState::monomorphicCall@4 (line 74)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::monomorphicCall@1 (line 44)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
  1.80%   │  0x00007f1c28cdd4a7: mov    rsi,r11
  1.45%   │  0x00007f1c28cdd4aa: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$MonomorphicJavaState::monomorphicCall@1 (line 74)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::monomorphicCall@1 (line 44)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
  2.12%   │  0x00007f1c28cdd4ae: nop
  1.51%   │  0x00007f1c28cdd4af: call   0x00007f1c28c69400  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$MonomorphicJavaState::monomorphicCall@7 (line 74)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::monomorphicCall@1 (line 44)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
          │                                                ;   {static_call}
  3.53%   │  0x00007f1c28cdd4b4: mov    rsi,QWORD PTR [rsp]
  2.67%   │  0x00007f1c28cdd4b8: mov    edx,eax
  1.92%   │  0x00007f1c28cdd4ba: nop
  2.33%   │  0x00007f1c28cdd4bb: call   0x00007f1c28c68f00  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@22 (line 195)
          │                                                ;   {optimized virtual_call}
  4.68%   │  0x00007f1c28cdd4c0: mov    r10,QWORD PTR [rsp+0x38]
  3.10%   │  0x00007f1c28cdd4c5: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
  2.10%   │  0x00007f1c28cdd4cd: mov    r10,QWORD PTR [r15+0x108]
  1.96%   │  0x00007f1c28cdd4d4: mov    rbx,QWORD PTR [rsp+0x40]
  1.39%   │  0x00007f1c28cdd4d9: add    rbx,0x1            ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
  1.86%   │  0x00007f1c28cdd4dd: test   DWORD PTR [r10],eax  ;   {poll}
  1.86%   │  0x00007f1c28cdd4e0: test   r11d,r11d
          ╰  0x00007f1c28cdd4e3: je     0x00007f1c28cdd490  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@38 (line 198)
             0x00007f1c28cdd4e5: movabs r10,0x7f1c3b6eaa00
             0x00007f1c28cdd4ef: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@39 (line 198)
             0x00007f1c28cdd4f2: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f1c28cdd4f7: mov    QWORD PTR [r10+0x18],rbx  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@54 (line 200)
             0x00007f1c28cdd4fb: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 41.12%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 124 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f1c28ce2ea0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f1c28ce2ea4: movabs r12,0x800000000
            0x00007f1c28ce2eae: add    r10,r12
            0x00007f1c28ce2eb1: xor    r12,r12
            0x00007f1c28ce2eb4: cmp    rax,r10
            0x00007f1c28ce2eb7: jne    0x00007f1c28c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f1c28ce2ebd: data16 xchg ax,ax
          [Verified Entry Point]
  3.00%     0x00007f1c28ce2ec0: mov    DWORD PTR [rsp-0x14000],eax
  4.35%     0x00007f1c28ce2ec7: push   rbp
  1.78%     0x00007f1c28ce2ec8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.10%     0x00007f1c28ce2ecc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.18%     0x00007f1c28ce2ed3: mov    r8d,edx
  1.69%     0x00007f1c28ce2ed6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.92%     0x00007f1c28ce2edd: mov    r9d,edx
  1.80%     0x00007f1c28ce2ee0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.00%     0x00007f1c28ce2ee3: cmp    r9d,r8d
         ╭  0x00007f1c28ce2ee6: je     0x00007f1c28ce2ef8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  2.00%  │  0x00007f1c28ce2ee8: add    rsp,0x20
  1.43%  │  0x00007f1c28ce2eec: pop    rbp
  2.06%  │  0x00007f1c28ce2eed: mov    r10,QWORD PTR [r15+0x108]
  2.33%  │  0x00007f1c28ce2ef4: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.35%  │  0x00007f1c28ce2ef7: ret    
         ↘  0x00007f1c28ce2ef8: mov    rbp,rsi
            0x00007f1c28ce2efb: mov    DWORD PTR [rsp],edx
            0x00007f1c28ce2efe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f1c28ce2f03: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f1c28ce2f08: mov    esi,0xffffff4d
            0x00007f1c28ce2f0d: xchg   ax,ax
            0x00007f1c28ce2f0f: call   0x00007f1c28c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 29.99%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 122 (39 bytes) 

           dependencies   [0x00007f1c28cdc1b8,0x00007f1c28cdc1c0] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark.compute(Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath;I)I  [0x00007f1c28cdc0a0, 0x00007f1c28cdc0f8]  88 bytes
          [Entry Point]
          [Verified Entry Point]
          [Constants]
            # {method} {0x00007f1c15db1e58} &apos;compute&apos; &apos;(Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath;I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark&apos;
            # parm0:    rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath&apos;
            # parm1:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  3.12%     0x00007f1c28cdc0a0: mov    DWORD PTR [rsp-0x14000],eax
  3.41%     0x00007f1c28cdc0a7: push   rbp
  1.98%     0x00007f1c28cdc0a8: sub    rsp,0x10           ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@-1 (line 38)
  3.43%     0x00007f1c28cdc0ac: test   rsi,rsi
         ╭  0x00007f1c28cdc0af: je     0x00007f1c28cdc0c8  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
  1.84%  │  0x00007f1c28cdc0b1: mov    eax,edx
  1.41%  │  0x00007f1c28cdc0b3: shl    eax,0x4
  1.27%  │  0x00007f1c28cdc0b6: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 126)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
  2.00%  │  0x00007f1c28cdc0b8: add    rsp,0x10
  1.88%  │  0x00007f1c28cdc0bc: pop    rbp
  2.06%  │  0x00007f1c28cdc0bd: mov    r10,QWORD PTR [r15+0x108]
  1.37%  │  0x00007f1c28cdc0c4: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.33%  │  0x00007f1c28cdc0c7: ret    
         ↘  0x00007f1c28cdc0c8: mov    esi,0xfffffff6
            0x00007f1c28cdc0cd: mov    ebp,edx
            0x00007f1c28cdc0cf: call   0x00007f1c28c6a900  ; ImmutableOopMap{}
                                                          ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
                                                          ;   {runtime_call UncommonTrapBlob}
            0x00007f1c28cdc0d4: ud2                       ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
            0x00007f1c28cdc0d6: hlt    
            0x00007f1c28cdc0d7: hlt    
....................................................................................................
 26.11%  <total for region 3>

....[Hottest Regions]...............................................................................
 41.12%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub, version 129 (80 bytes) 
 29.99%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 124 (55 bytes) 
 26.11%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 122 (39 bytes) 
  2.27%       kernel  [unknown] (6 bytes) 
  0.06%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%  interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%  interpreter  method entry point (kind = native)  (0 bytes) 
  0.14%  <...other 7 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 41.12%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub, version 129 
 29.99%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 124 
 26.11%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 122 
  2.59%       kernel  [unknown] 
  0.02%  interpreter  invokevirtual  182 invokevirtual  
  0.02%    libjvm.so  _ZN12PhaseChaitin18get_spillcopy_wideEN17MachSpillCopyNode9SpillTypeEP4NodeS3_j 
  0.02%    libjvm.so  _ZN14BasicHashtableIL10MemoryType1EE19new_entry_free_listEv 
  0.02%    libjvm.so  _ZN10MemBarNodeC1EP7CompileiP4Node 
  0.02%  interpreter  method entry point (kind = native)  
  0.02%  interpreter  method entry point (kind = zerolocals)  
  0.02%    libjvm.so  _ZNK4Node4jvmsEv 
  0.02%    libjvm.so  _ZN11SymbolTable6lookupEiPKcij 
  0.02%    libjvm.so  _ZN5DictIppEv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.22%           c2
  2.59%       kernel
  0.12%    libjvm.so
  0.06%  interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49042 total address lines.
Perf output processed (skipped 6.245 seconds):
 Column 1: cycles (5070 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub, version 129 (80 bytes) 

             0x00007f6d54cdd069: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@32 (line 197)
                                                           ; implicit exception: dispatches to 0x00007f6d54cdd172
             0x00007f6d54cdd071: test   r10d,r10d
             0x00007f6d54cdd074: jne    0x00007f6d54cdd117  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
             0x00007f6d54cdd07a: mov    r10d,0x1
             0x00007f6d54cdd080: mov    QWORD PTR [rsp+0x40],r10
         ╭   0x00007f6d54cdd085: jmp    0x00007f6d54cdd095
         │   0x00007f6d54cdd087: nop    WORD PTR [rax+rax*1+0x0]
  1.87%  │↗  0x00007f6d54cdd090: mov    QWORD PTR [rsp+0x40],rbx  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@38 (line 198)
  1.26%  ↘│  0x00007f6d54cdd095: mov    r11d,DWORD PTR [rbp+0xc]
  1.79%   │  0x00007f6d54cdd099: movabs r10,0x71b85bbf8    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85bbf8} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$MonomorphicJavaState&apos;)}
  1.91%   │  0x00007f6d54cdd0a3: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$MonomorphicJavaState::monomorphicCall@4 (line 74)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::monomorphicCall@1 (line 44)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
  1.91%   │  0x00007f6d54cdd0a7: mov    rsi,r11
  1.30%   │  0x00007f6d54cdd0aa: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$MonomorphicJavaState::monomorphicCall@1 (line 74)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::monomorphicCall@1 (line 44)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
  1.89%   │  0x00007f6d54cdd0ae: nop
  1.70%   │  0x00007f6d54cdd0af: call   0x00007f6d54c69400  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokestatic compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$MonomorphicJavaState::monomorphicCall@7 (line 74)
          │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::monomorphicCall@1 (line 44)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
          │                                                ;   {static_call}
  3.18%   │  0x00007f6d54cdd0b4: mov    rsi,QWORD PTR [rsp]
  2.62%   │  0x00007f6d54cdd0b8: mov    edx,eax
  1.58%   │  0x00007f6d54cdd0ba: nop
  2.09%   │  0x00007f6d54cdd0bb: call   0x00007f6d54c68f00  ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@22 (line 195)
          │                                                ;   {optimized virtual_call}
  4.87%   │  0x00007f6d54cdd0c0: mov    r10,QWORD PTR [rsp+0x38]
  3.20%   │  0x00007f6d54cdd0c5: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
  2.25%   │  0x00007f6d54cdd0cd: mov    r10,QWORD PTR [r15+0x108]
  2.09%   │  0x00007f6d54cdd0d4: mov    rbx,QWORD PTR [rsp+0x40]
  1.58%   │  0x00007f6d54cdd0d9: add    rbx,0x1            ; ImmutableOopMap{rbp=Oop [48]=Oop [56]=Oop [72]=Oop [0]=Oop }
          │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
  1.54%   │  0x00007f6d54cdd0dd: test   DWORD PTR [r10],eax  ;   {poll}
  1.64%   │  0x00007f6d54cdd0e0: test   r11d,r11d
          ╰  0x00007f6d54cdd0e3: je     0x00007f6d54cdd090  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@38 (line 198)
             0x00007f6d54cdd0e5: movabs r10,0x7f6d662e4a00
             0x00007f6d54cdd0ef: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@39 (line 198)
             0x00007f6d54cdd0f2: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f6d54cdd0f7: mov    QWORD PTR [r10+0x18],rbx  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@54 (line 200)
             0x00007f6d54cdd0fb: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 40.28%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 124 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f6d54ce2aa0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f6d54ce2aa4: movabs r12,0x800000000
            0x00007f6d54ce2aae: add    r10,r12
            0x00007f6d54ce2ab1: xor    r12,r12
            0x00007f6d54ce2ab4: cmp    rax,r10
            0x00007f6d54ce2ab7: jne    0x00007f6d54c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f6d54ce2abd: data16 xchg ax,ax
          [Verified Entry Point]
  2.66%     0x00007f6d54ce2ac0: mov    DWORD PTR [rsp-0x14000],eax
  4.22%     0x00007f6d54ce2ac7: push   rbp
  1.60%     0x00007f6d54ce2ac8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.04%     0x00007f6d54ce2acc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.41%     0x00007f6d54ce2ad3: mov    r8d,edx
  1.50%     0x00007f6d54ce2ad6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.42%     0x00007f6d54ce2add: mov    r9d,edx
  2.13%     0x00007f6d54ce2ae0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.35%     0x00007f6d54ce2ae3: cmp    r9d,r8d
         ╭  0x00007f6d54ce2ae6: je     0x00007f6d54ce2af8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  1.85%  │  0x00007f6d54ce2ae8: add    rsp,0x20
  1.16%  │  0x00007f6d54ce2aec: pop    rbp
  2.37%  │  0x00007f6d54ce2aed: mov    r10,QWORD PTR [r15+0x108]
  2.39%  │  0x00007f6d54ce2af4: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.62%  │  0x00007f6d54ce2af7: ret    
         ↘  0x00007f6d54ce2af8: mov    rbp,rsi
            0x00007f6d54ce2afb: mov    DWORD PTR [rsp],edx
            0x00007f6d54ce2afe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f6d54ce2b03: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f6d54ce2b08: mov    esi,0xffffff4d
            0x00007f6d54ce2b0d: xchg   ax,ax
            0x00007f6d54ce2b0f: call   0x00007f6d54c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 30.71%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 122 (39 bytes) 

           dependencies   [0x00007f6d54cdbdb8,0x00007f6d54cdbdc0] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark.compute(Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath;I)I  [0x00007f6d54cdbca0, 0x00007f6d54cdbcf8]  88 bytes
          [Entry Point]
          [Verified Entry Point]
          [Constants]
            # {method} {0x00007f6d449c1e58} &apos;compute&apos; &apos;(Lorg/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath;I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark&apos;
            # parm0:    rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaCMath&apos;
            # parm1:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  3.21%     0x00007f6d54cdbca0: mov    DWORD PTR [rsp-0x14000],eax
  3.45%     0x00007f6d54cdbca7: push   rbp
  2.31%     0x00007f6d54cdbca8: sub    rsp,0x10           ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@-1 (line 38)
  3.29%     0x00007f6d54cdbcac: test   rsi,rsi
         ╭  0x00007f6d54cdbcaf: je     0x00007f6d54cdbcc8  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
  1.79%  │  0x00007f6d54cdbcb1: mov    eax,edx
  1.85%  │  0x00007f6d54cdbcb3: shl    eax,0x4
  1.44%  │  0x00007f6d54cdbcb6: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 126)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
  1.81%  │  0x00007f6d54cdbcb8: add    rsp,0x10
  1.87%  │  0x00007f6d54cdbcbc: pop    rbp
  1.97%  │  0x00007f6d54cdbcbd: mov    r10,QWORD PTR [r15+0x108]
  1.87%  │  0x00007f6d54cdbcc4: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.01%  │  0x00007f6d54cdbcc7: ret    
         ↘  0x00007f6d54cdbcc8: mov    esi,0xfffffff6
            0x00007f6d54cdbccd: mov    ebp,edx
            0x00007f6d54cdbccf: call   0x00007f6d54c6a900  ; ImmutableOopMap{}
                                                          ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
                                                          ;   {runtime_call UncommonTrapBlob}
            0x00007f6d54cdbcd4: ud2                       ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 38)
            0x00007f6d54cdbcd6: hlt    
            0x00007f6d54cdbcd7: hlt    
....................................................................................................
 26.90%  <total for region 3>

....[Hottest Regions]...............................................................................
 40.28%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub, version 129 (80 bytes) 
 30.71%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 124 (55 bytes) 
 26.90%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 122 (39 bytes) 
  1.46%       kernel  [unknown] (6 bytes) 
  0.06%       kernel  [unknown] (1 bytes) 
  0.06%       kernel  [unknown] (0 bytes) 
  0.04%       kernel  [unknown] (0 bytes) 
  0.04%       kernel  [unknown] (0 bytes) 
  0.04%  interpreter  method entry point (kind = zerolocals)  (8 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%  interpreter  ldc  18 ldc  (0 bytes) 
  0.02%  interpreter  return  177 return  (0 bytes) 
  0.02%  interpreter  invokevirtual  182 invokevirtual  (0 bytes) 
  0.02%  interpreter  fast_iload  224 fast_iload  (0 bytes) 
  0.18%  <...other 9 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 40.28%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_MonomorphicJava_jmhTest::monomorphicCall_avgt_jmhStub, version 129 
 30.71%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 124 
 26.90%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark::compute, version 122 
  1.79%       kernel  [unknown] 
  0.04%  interpreter  method entry point (kind = zerolocals)  
  0.02%  interpreter  invokevirtual  182 invokevirtual  
  0.02%    libjvm.so  _ZN12PhaseChaitin16gather_lrg_masksEb.constprop.87 
  0.02%    libjvm.so  _ZNK8CodeHeap16find_blob_unsafeEPv 
  0.02%  interpreter  fast_iload  224 fast_iload  
  0.02%    libjvm.so  _ZN12PhaseChaitin10elide_copyEP4NodeiP5BlockR9Node_ListS5_b 
  0.02%    libjvm.so  _ZN7Monitor28lock_without_safepoint_checkEv 
  0.02%    libjvm.so  _ZN15ConnectionGraph14compute_escapeEv 
  0.02%  interpreter  ldc  18 ldc  
  0.02%  interpreter  return  177 return  
  0.02%    libjvm.so  _ZN15PerfLongVariant6sampleEv 
  0.02%    libjvm.so  _ZNK6Method8bcp_fromEPh 
  0.02%    libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%    libjvm.so  _ZN13defaultStream5writeEPKcm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.89%           c2
  1.79%       kernel
  0.18%    libjvm.so
  0.12%  interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallKtBenchmark.BimorphicKt
# Parameters: (param = 3)

# Run progress: 50.00% complete, ETA 00:02:18
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.421 ns/op
# Warmup Iteration   2: 3.782 ns/op
# Warmup Iteration   3: 3.304 ns/op
# Warmup Iteration   4: 3.251 ns/op
# Warmup Iteration   5: 3.249 ns/op
Iteration   1: 3.250 ns/op
Iteration   2: 3.238 ns/op
Iteration   3: 3.243 ns/op
Iteration   4: 3.227 ns/op
Iteration   5: 3.220 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 54.17% complete, ETA 00:02:07
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.870 ns/op
# Warmup Iteration   2: 3.725 ns/op
# Warmup Iteration   3: 3.196 ns/op
# Warmup Iteration   4: 3.222 ns/op
# Warmup Iteration   5: 3.287 ns/op
Iteration   1: 3.257 ns/op
Iteration   2: 3.302 ns/op
Iteration   3: 3.208 ns/op
Iteration   4: 3.221 ns/op
Iteration   5: 3.209 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 58.33% complete, ETA 00:01:55
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.996 ns/op
# Warmup Iteration   2: 4.262 ns/op
# Warmup Iteration   3: 3.630 ns/op
# Warmup Iteration   4: 3.621 ns/op
# Warmup Iteration   5: 3.655 ns/op
Iteration   1: 3.678 ns/op
Iteration   2: 3.614 ns/op
Iteration   3: 3.592 ns/op
Iteration   4: 3.642 ns/op
Iteration   5: 3.590 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallKtBenchmark.BimorphicKt":
  3.366 ±(99.9%) 0.204 ns/op [Average]
  (min, avg, max) = (3.208, 3.366, 3.678), stdev = 0.191
  CI (99.9%): [3.162, 3.570] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallKtBenchmark.BimorphicKt:·asm":
PrintAssembly processed: 49727 total address lines.
Perf output processed (skipped 6.292 seconds):
 Column 1: cycles (5102 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 132 (128 bytes) 

                                                          ;   {optimized virtual_call}
            0x00007fbee4ce3688: mov    rcx,QWORD PTR [rsp+0x40]
            0x00007fbee4ce368d: movzx  r10d,BYTE PTR [rcx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007fbee4ce3862
            0x00007fbee4ce3695: test   r10d,r10d
            0x00007fbee4ce3698: jne    0x00007fbee4ce379a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
            0x00007fbee4ce369e: mov    ebp,0x1            ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@38 (line 198)
  2.41%  ↗  0x00007fbee4ce36a3: mov    r10,QWORD PTR [rsp+0x50]
  1.43%  │  0x00007fbee4ce36a8: mov    r11d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@5 (line 70)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.08%  │  0x00007fbee4ce36ac: movabs r10,0x71b85d8f8    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85d8f8} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$BimorphicKtState&apos;)}
  3.10%  │  0x00007fbee4ce36b6: mov    r10d,DWORD PTR [r10+0x74]
         │                                                ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@9 (line 70)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.59%  │  0x00007fbee4ce36ba: mov    r8d,DWORD PTR [r12+r11*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007fbee4ce37fe
  3.25%  │  0x00007fbee4ce36bf: cmp    r8d,0xf3018        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007fbee4ce36c6: jne    0x00007fbee4ce375e  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  3.33%  │  0x00007fbee4ce36cc: mov    r11,QWORD PTR [rsp+0x50]
  2.31%  │  0x00007fbee4ce36d1: mov    r11d,DWORD PTR [r11+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@26 (line 70)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.45%  │  0x00007fbee4ce36d5: mov    r8d,DWORD PTR [r12+r11*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007fbee4ce380e
  1.78%  │  0x00007fbee4ce36da: mov    r9d,r10d
  2.90%  │  0x00007fbee4ce36dd: shl    r9d,0x4
  2.21%  │  0x00007fbee4ce36e1: add    r9d,r10d           ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.33%  │  0x00007fbee4ce36e4: cmp    r8d,0xf3228        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007fbee4ce36eb: jne    0x00007fbee4ce377a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@41 (line 163)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.76%  │  0x00007fbee4ce36f1: mov    QWORD PTR [rsp+0x40],rcx
  3.02%  │  0x00007fbee4ce36f6: imul   edx,r10d,0x13
  2.29%  │  0x00007fbee4ce36fa: add    edx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@50 (line 70)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.71%  │  0x00007fbee4ce36fd: mov    rsi,QWORD PTR [rsp]
  1.63%  │  0x00007fbee4ce3701: xchg   ax,ax
  2.78%  │  0x00007fbee4ce3703: call   0x00007fbee4c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  2.41%  │  0x00007fbee4ce3708: mov    rcx,QWORD PTR [rsp+0x40]
  4.88%  │  0x00007fbee4ce370d: movzx  r11d,BYTE PTR [rcx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  1.96%  │  0x00007fbee4ce3715: mov    r10,QWORD PTR [r15+0x108]
  1.86%  │  0x00007fbee4ce371c: add    rbp,0x1            ; ImmutableOopMap{rcx=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  2.08%  │  0x00007fbee4ce3720: test   DWORD PTR [r10],eax  ;   {poll}
  3.19%  │  0x00007fbee4ce3723: test   r11d,r11d
         ╰  0x00007fbee4ce3726: je     0x00007fbee4ce36a3  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@38 (line 198)
            0x00007fbee4ce372c: movabs r10,0x7fbef6a6fa00
            0x00007fbee4ce3736: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@39 (line 198)
            0x00007fbee4ce3739: mov    r10,QWORD PTR [rsp+0x48]
            0x00007fbee4ce373e: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@54 (line 200)
            0x00007fbee4ce3742: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 59.76%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 128 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fbee4ce1f20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fbee4ce1f24: movabs r12,0x800000000
            0x00007fbee4ce1f2e: add    r10,r12
            0x00007fbee4ce1f31: xor    r12,r12
            0x00007fbee4ce1f34: cmp    rax,r10
            0x00007fbee4ce1f37: jne    0x00007fbee4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fbee4ce1f3d: data16 xchg ax,ax
          [Verified Entry Point]
  3.78%     0x00007fbee4ce1f40: mov    DWORD PTR [rsp-0x14000],eax
  4.88%     0x00007fbee4ce1f47: push   rbp
  2.31%     0x00007fbee4ce1f48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.51%     0x00007fbee4ce1f4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  3.16%     0x00007fbee4ce1f53: mov    r8d,edx
  2.08%     0x00007fbee4ce1f56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.47%     0x00007fbee4ce1f5d: mov    r9d,edx
  2.02%     0x00007fbee4ce1f60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.78%     0x00007fbee4ce1f63: cmp    r9d,r8d
         ╭  0x00007fbee4ce1f66: je     0x00007fbee4ce1f78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  2.47%  │  0x00007fbee4ce1f68: add    rsp,0x20
  1.67%  │  0x00007fbee4ce1f6c: pop    rbp
  1.78%  │  0x00007fbee4ce1f6d: mov    r10,QWORD PTR [r15+0x108]
  3.00%  │  0x00007fbee4ce1f74: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.63%  │  0x00007fbee4ce1f77: ret    
         ↘  0x00007fbee4ce1f78: mov    rbp,rsi
            0x00007fbee4ce1f7b: mov    DWORD PTR [rsp],edx
            0x00007fbee4ce1f7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fbee4ce1f83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fbee4ce1f88: mov    esi,0xffffff4d
            0x00007fbee4ce1f8d: xchg   ax,ax
            0x00007fbee4ce1f8f: call   0x00007fbee4c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 37.53%  <total for region 2>

....[Hottest Regions]...............................................................................
 59.76%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 132 (128 bytes) 
 37.53%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 128 (55 bytes) 
  2.29%       kernel  [unknown] (6 bytes) 
  0.08%       kernel  [unknown] (29 bytes) 
  0.04%       kernel  [unknown] (0 bytes) 
  0.04%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%  interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%    libjvm.so  _ZN15PerfLongVariant6sampleEv (0 bytes) 
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 59.76%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 132 
 37.53%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 128 
  2.65%       kernel  [unknown] 
  0.02%    libjvm.so  _ZN15PerfLongVariant6sampleEv 
  0.02%  interpreter  method entry point (kind = zerolocals)  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.30%           c2
  2.65%       kernel
  0.02%    libjvm.so
  0.02%  interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49678 total address lines.
Perf output processed (skipped 6.277 seconds):
 Column 1: cycles (5143 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 131 (128 bytes) 

                                                          ;   {optimized virtual_call}
            0x00007f85ecce8208: mov    rcx,QWORD PTR [rsp+0x40]
            0x00007f85ecce820d: movzx  r10d,BYTE PTR [rcx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f85ecce83e2
            0x00007f85ecce8215: test   r10d,r10d
            0x00007f85ecce8218: jne    0x00007f85ecce831a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
            0x00007f85ecce821e: mov    ebp,0x1            ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@38 (line 198)
  2.62%  ↗  0x00007f85ecce8223: mov    r10,QWORD PTR [rsp+0x50]
  1.52%  │  0x00007f85ecce8228: mov    r11d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@5 (line 70)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.56%  │  0x00007f85ecce822c: movabs r10,0x71b85d8f8    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85d8f8} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$BimorphicKtState&apos;)}
  2.84%  │  0x00007f85ecce8236: mov    r10d,DWORD PTR [r10+0x74]
         │                                                ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@9 (line 70)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.76%  │  0x00007f85ecce823a: mov    r8d,DWORD PTR [r12+r11*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f85ecce837e
  3.85%  │  0x00007f85ecce823f: cmp    r8d,0xf3018        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007f85ecce8246: jne    0x00007f85ecce82de  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  3.54%  │  0x00007f85ecce824c: mov    r11,QWORD PTR [rsp+0x50]
  2.24%  │  0x00007f85ecce8251: mov    r11d,DWORD PTR [r11+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@26 (line 70)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.65%  │  0x00007f85ecce8255: mov    r8d,DWORD PTR [r12+r11*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f85ecce838e
  2.12%  │  0x00007f85ecce825a: mov    r9d,r10d
  2.99%  │  0x00007f85ecce825d: shl    r9d,0x4
  2.24%  │  0x00007f85ecce8261: add    r9d,r10d           ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.52%  │  0x00007f85ecce8264: cmp    r8d,0xf3228        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007f85ecce826b: jne    0x00007f85ecce82fa  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@41 (line 163)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.85%  │  0x00007f85ecce8271: mov    QWORD PTR [rsp+0x40],rcx
  2.72%  │  0x00007f85ecce8276: imul   edx,r10d,0x13
  2.16%  │  0x00007f85ecce827a: add    edx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@50 (line 70)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.63%  │  0x00007f85ecce827d: mov    rsi,QWORD PTR [rsp]
  1.75%  │  0x00007f85ecce8281: xchg   ax,ax
  3.36%  │  0x00007f85ecce8283: call   0x00007f85ecc68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  2.39%  │  0x00007f85ecce8288: mov    rcx,QWORD PTR [rsp+0x40]
  4.61%  │  0x00007f85ecce828d: movzx  r11d,BYTE PTR [rcx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  2.43%  │  0x00007f85ecce8295: mov    r10,QWORD PTR [r15+0x108]
  1.48%  │  0x00007f85ecce829c: add    rbp,0x1            ; ImmutableOopMap{rcx=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  1.83%  │  0x00007f85ecce82a0: test   DWORD PTR [r10],eax  ;   {poll}
  2.64%  │  0x00007f85ecce82a3: test   r11d,r11d
         ╰  0x00007f85ecce82a6: je     0x00007f85ecce8223  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@38 (line 198)
            0x00007f85ecce82ac: movabs r10,0x7f85feecca00
            0x00007f85ecce82b6: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@39 (line 198)
            0x00007f85ecce82b9: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f85ecce82be: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@54 (line 200)
            0x00007f85ecce82c2: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 60.30%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f85ecce22a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f85ecce22a4: movabs r12,0x800000000
            0x00007f85ecce22ae: add    r10,r12
            0x00007f85ecce22b1: xor    r12,r12
            0x00007f85ecce22b4: cmp    rax,r10
            0x00007f85ecce22b7: jne    0x00007f85ecc68c80  ;   {runtime_call ic_miss_stub}
            0x00007f85ecce22bd: data16 xchg ax,ax
          [Verified Entry Point]
  3.95%     0x00007f85ecce22c0: mov    DWORD PTR [rsp-0x14000],eax
  5.11%     0x00007f85ecce22c7: push   rbp
  2.08%     0x00007f85ecce22c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.34%     0x00007f85ecce22cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.59%     0x00007f85ecce22d3: mov    r8d,edx
  2.27%     0x00007f85ecce22d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.61%     0x00007f85ecce22dd: mov    r9d,edx
  1.54%     0x00007f85ecce22e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.74%     0x00007f85ecce22e3: cmp    r9d,r8d
         ╭  0x00007f85ecce22e6: je     0x00007f85ecce22f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  1.92%  │  0x00007f85ecce22e8: add    rsp,0x20
  1.71%  │  0x00007f85ecce22ec: pop    rbp
  1.69%  │  0x00007f85ecce22ed: mov    r10,QWORD PTR [r15+0x108]
  3.29%  │  0x00007f85ecce22f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.33%  │  0x00007f85ecce22f7: ret    
         ↘  0x00007f85ecce22f8: mov    rbp,rsi
            0x00007f85ecce22fb: mov    DWORD PTR [rsp],edx
            0x00007f85ecce22fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f85ecce2303: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f85ecce2308: mov    esi,0xffffff4d
            0x00007f85ecce230d: xchg   ax,ax
            0x00007f85ecce230f: call   0x00007f85ecc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 36.19%  <total for region 2>

....[Hottest Regions]...............................................................................
 60.30%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 131 (128 bytes) 
 36.19%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 
  2.94%       kernel  [unknown] (6 bytes) 
  0.06%       kernel  [unknown] (0 bytes) 
  0.06%       kernel  [unknown] (0 bytes) 
  0.04%       kernel  [unknown] (9 bytes) 
  0.04%       kernel  [unknown] (13 bytes) 
  0.04%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.10%  <...other 5 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 60.30%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 131 
 36.19%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  3.40%       kernel  [unknown] 
  0.02%  interpreter  aload_2  44 aload_2  
  0.02%  interpreter  invokestatic  184 invokestatic  
  0.02%    libjvm.so  _ZN20SafepointSynchronize5beginEv 
  0.02%  interpreter  fast_dputfield  215 fast_dputfield  
  0.02%    libjvm.so  _ZNK17ObjArrayAllocator10initializeEP8HeapWord 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.48%           c2
  3.40%       kernel
  0.06%  interpreter
  0.04%    libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49744 total address lines.
Perf output processed (skipped 6.254 seconds):
 Column 1: cycles (5159 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 132 (128 bytes) 

                                                          ;   {optimized virtual_call}
            0x00007f5c50ce3608: mov    rcx,QWORD PTR [rsp+0x40]
            0x00007f5c50ce360d: movzx  r10d,BYTE PTR [rcx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f5c50ce37e2
            0x00007f5c50ce3615: test   r10d,r10d
            0x00007f5c50ce3618: jne    0x00007f5c50ce371a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
            0x00007f5c50ce361e: mov    ebp,0x1            ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@38 (line 198)
  2.25%  ↗  0x00007f5c50ce3623: mov    r10,QWORD PTR [rsp+0x50]
  1.69%  │  0x00007f5c50ce3628: mov    r11d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@5 (line 70)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.09%  │  0x00007f5c50ce362c: movabs r10,0x71b85d228    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85d228} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$BimorphicKtState&apos;)}
  2.97%  │  0x00007f5c50ce3636: mov    r10d,DWORD PTR [r10+0x74]
         │                                                ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@9 (line 70)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.31%  │  0x00007f5c50ce363a: mov    r8d,DWORD PTR [r12+r11*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f5c50ce377e
  3.86%  │  0x00007f5c50ce363f: cmp    r8d,0xf3018        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007f5c50ce3646: jne    0x00007f5c50ce36de  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  3.62%  │  0x00007f5c50ce364c: mov    r11,QWORD PTR [rsp+0x50]
  2.50%  │  0x00007f5c50ce3651: mov    r11d,DWORD PTR [r11+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@26 (line 70)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.61%  │  0x00007f5c50ce3655: mov    r8d,DWORD PTR [r12+r11*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f5c50ce378e
  1.96%  │  0x00007f5c50ce365a: mov    r9d,r10d
  3.00%  │  0x00007f5c50ce365d: shl    r9d,0x4
  1.98%  │  0x00007f5c50ce3661: add    r9d,r10d           ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.40%  │  0x00007f5c50ce3664: cmp    r8d,0xf3228        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007f5c50ce366b: jne    0x00007f5c50ce36fa  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@41 (line 163)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.78%  │  0x00007f5c50ce3671: mov    QWORD PTR [rsp+0x40],rcx
  3.30%  │  0x00007f5c50ce3676: imul   edx,r10d,0x13
  2.15%  │  0x00007f5c50ce367a: add    edx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@50 (line 70)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  1.40%  │  0x00007f5c50ce367d: mov    rsi,QWORD PTR [rsp]
  1.86%  │  0x00007f5c50ce3681: xchg   ax,ax
  2.95%  │  0x00007f5c50ce3683: call   0x00007f5c50c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  2.00%  │  0x00007f5c50ce3688: mov    rcx,QWORD PTR [rsp+0x40]
  4.54%  │  0x00007f5c50ce368d: movzx  r11d,BYTE PTR [rcx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  1.94%  │  0x00007f5c50ce3695: mov    r10,QWORD PTR [r15+0x108]
  1.45%  │  0x00007f5c50ce369c: add    rbp,0x1            ; ImmutableOopMap{rcx=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  1.90%  │  0x00007f5c50ce36a0: test   DWORD PTR [r10],eax  ;   {poll}
  2.77%  │  0x00007f5c50ce36a3: test   r11d,r11d
         ╰  0x00007f5c50ce36a6: je     0x00007f5c50ce3623  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@38 (line 198)
            0x00007f5c50ce36ac: movabs r10,0x7f5c626eba00
            0x00007f5c50ce36b6: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@39 (line 198)
            0x00007f5c50ce36b9: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f5c50ce36be: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@54 (line 200)
            0x00007f5c50ce36c2: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 59.26%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 128 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f5c50ce1ea0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f5c50ce1ea4: movabs r12,0x800000000
            0x00007f5c50ce1eae: add    r10,r12
            0x00007f5c50ce1eb1: xor    r12,r12
            0x00007f5c50ce1eb4: cmp    rax,r10
            0x00007f5c50ce1eb7: jne    0x00007f5c50c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f5c50ce1ebd: data16 xchg ax,ax
          [Verified Entry Point]
  4.01%     0x00007f5c50ce1ec0: mov    DWORD PTR [rsp-0x14000],eax
  4.46%     0x00007f5c50ce1ec7: push   rbp
  2.35%     0x00007f5c50ce1ec8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.26%     0x00007f5c50ce1ecc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  3.33%     0x00007f5c50ce1ed3: mov    r8d,edx
  2.17%     0x00007f5c50ce1ed6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.80%     0x00007f5c50ce1edd: mov    r9d,edx
  2.07%     0x00007f5c50ce1ee0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.75%     0x00007f5c50ce1ee3: cmp    r9d,r8d
         ╭  0x00007f5c50ce1ee6: je     0x00007f5c50ce1ef8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  2.15%  │  0x00007f5c50ce1ee8: add    rsp,0x20
  1.53%  │  0x00007f5c50ce1eec: pop    rbp
  1.73%  │  0x00007f5c50ce1eed: mov    r10,QWORD PTR [r15+0x108]
  3.04%  │  0x00007f5c50ce1ef4: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.25%  │  0x00007f5c50ce1ef7: ret    
         ↘  0x00007f5c50ce1ef8: mov    rbp,rsi
            0x00007f5c50ce1efb: mov    DWORD PTR [rsp],edx
            0x00007f5c50ce1efe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f5c50ce1f03: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f5c50ce1f08: mov    esi,0xffffff4d
            0x00007f5c50ce1f0d: xchg   ax,ax
            0x00007f5c50ce1f0f: call   0x00007f5c50c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 36.91%  <total for region 2>

....[Hottest Regions]...............................................................................
 59.26%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 132 (128 bytes) 
 36.91%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 128 (55 bytes) 
  3.31%       kernel  [unknown] (6 bytes) 
  0.08%       kernel  [unknown] (28 bytes) 
  0.06%       kernel  [unknown] (0 bytes) 
  0.06%       kernel  [unknown] (0 bytes) 
  0.04%       kernel  [unknown] (0 bytes) 
  0.04%       kernel  [unknown] (11 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%  interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%  interpreter  invokevirtual  182 invokevirtual  (0 bytes) 
  0.02%    libjvm.so  _ZN18InterpreterRuntime20resolve_invokehandleEP10JavaThread (0 bytes) 
  0.02%    libjvm.so  MHN_resolve_Mem (0 bytes) 
  0.02%    libjvm.so  _ZN15PerfLongCounterD0Ev (0 bytes) 
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 59.26%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 132 
 36.91%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 128 
  3.72%       kernel  [unknown] 
  0.02%  interpreter  invokevirtual  182 invokevirtual  
  0.02%    libjvm.so  _ZN18InterpreterRuntime20resolve_invokehandleEP10JavaThread 
  0.02%    libjvm.so  MHN_resolve_Mem 
  0.02%  interpreter  method entry point (kind = zerolocals)  
  0.02%    libjvm.so  _ZN15PerfLongCounterD0Ev 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.16%           c2
  3.72%       kernel
  0.06%    libjvm.so
  0.04%  interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic3Kt
# Parameters: (param = 3)

# Run progress: 62.50% complete, ETA 00:01:43
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.801 ns/op
# Warmup Iteration   2: 4.590 ns/op
# Warmup Iteration   3: 4.184 ns/op
# Warmup Iteration   4: 4.162 ns/op
# Warmup Iteration   5: 4.207 ns/op
Iteration   1: 4.162 ns/op
Iteration   2: 4.151 ns/op
Iteration   3: 4.149 ns/op
Iteration   4: 4.164 ns/op
Iteration   5: 4.210 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 66.67% complete, ETA 00:01:32
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.204 ns/op
# Warmup Iteration   2: 4.078 ns/op
# Warmup Iteration   3: 3.787 ns/op
# Warmup Iteration   4: 3.809 ns/op
# Warmup Iteration   5: 3.808 ns/op
Iteration   1: 3.808 ns/op
Iteration   2: 3.744 ns/op
Iteration   3: 3.721 ns/op
Iteration   4: 3.775 ns/op
Iteration   5: 3.701 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 70.83% complete, ETA 00:01:20
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.895 ns/op
# Warmup Iteration   2: 4.598 ns/op
# Warmup Iteration   3: 4.274 ns/op
# Warmup Iteration   4: 4.295 ns/op
# Warmup Iteration   5: 4.323 ns/op
Iteration   1: 4.381 ns/op
Iteration   2: 4.398 ns/op
Iteration   3: 4.244 ns/op
Iteration   4: 4.322 ns/op
Iteration   5: 4.235 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic3Kt":
  4.078 ±(99.9%) 0.270 ns/op [Average]
  (min, avg, max) = (3.701, 4.078, 4.398), stdev = 0.253
  CI (99.9%): [3.808, 4.348] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic3Kt:·asm":
PrintAssembly processed: 49904 total address lines.
Perf output processed (skipped 6.297 seconds):
 Column 1: cycles (5074 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 (159 bytes) 

            0x00007f9da4ce334c: mov    rcx,QWORD PTR [rsp+0x50]
            0x00007f9da4ce3351: movzx  r11d,BYTE PTR [rcx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f9da4ce35be
            0x00007f9da4ce3359: test   r11d,r11d
            0x00007f9da4ce335c: jne    0x00007f9da4ce34a6  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
            0x00007f9da4ce3362: mov    ebp,0x1
            0x00007f9da4ce3367: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
  3.29%  ↗  0x00007f9da4ce3370: mov    r10,QWORD PTR [rsp+0x60]
  2.70%  │  0x00007f9da4ce3375: mov    r8d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@5 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.41%  │  0x00007f9da4ce3379: movabs r10,0x71b85d700    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85d700} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic3KtState&apos;)}
  1.04%  │  0x00007f9da4ce3383: mov    r11d,DWORD PTR [r10+0x74]
         │                                                ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@9 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.17%  │  0x00007f9da4ce3387: mov    r9d,DWORD PTR [r12+r8*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f9da4ce353a
  4.95%  │  0x00007f9da4ce338c: cmp    r9d,0xf3018        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007f9da4ce3393: jne    0x00007f9da4ce344a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  4.61%  │  0x00007f9da4ce3399: mov    r10,QWORD PTR [rsp+0x60]
  0.71%  │  0x00007f9da4ce339e: mov    r10d,DWORD PTR [r10+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@26 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.22%  │  0x00007f9da4ce33a2: mov    ebx,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f9da4ce354a
  3.33%  │  0x00007f9da4ce33a7: mov    r8d,r11d
  2.62%  │  0x00007f9da4ce33aa: shl    r8d,0x4
  0.57%  │  0x00007f9da4ce33ae: add    r8d,r11d           ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.79%  │  0x00007f9da4ce33b1: cmp    ebx,0xf3228        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007f9da4ce33b7: jne    0x00007f9da4ce3466  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@41 (line 163)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.57%  │  0x00007f9da4ce33bd: mov    r10,QWORD PTR [rsp+0x60]
  2.21%  │  0x00007f9da4ce33c2: mov    r10d,DWORD PTR [r10+0x14]
         │                                                ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@56 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.55%  │  0x00007f9da4ce33c6: mov    edi,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f9da4ce355a
  1.30%  │  0x00007f9da4ce33cb: imul   r9d,r11d,0x13
  3.47%  │  0x00007f9da4ce33cf: add    r9d,r8d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@50 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.87%  │  0x00007f9da4ce33d2: cmp    edi,0xf3438        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
         │  0x00007f9da4ce33d8: jne    0x00007f9da4ce3486  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@71 (line 164)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.53%  │  0x00007f9da4ce33de: mov    QWORD PTR [rsp+0x50],rcx
  1.16%  │  0x00007f9da4ce33e3: imul   edx,r11d,0x17
  3.19%  │  0x00007f9da4ce33e7: add    edx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@80 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  2.29%  │  0x00007f9da4ce33ea: mov    rsi,QWORD PTR [rsp]
  0.65%  │  0x00007f9da4ce33ee: nop
  1.16%  │  0x00007f9da4ce33ef: call   0x00007f9da4c68f00  ; ImmutableOopMap{[80]=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  2.66%  │  0x00007f9da4ce33f4: mov    rcx,QWORD PTR [rsp+0x50]
  1.64%  │  0x00007f9da4ce33f9: movzx  r10d,BYTE PTR [rcx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  3.27%  │  0x00007f9da4ce3401: mov    r11,QWORD PTR [r15+0x108]
  2.31%  │  0x00007f9da4ce3408: add    rbp,0x1            ; ImmutableOopMap{rcx=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  0.65%  │  0x00007f9da4ce340c: test   DWORD PTR [r11],eax  ;   {poll}
  1.22%  │  0x00007f9da4ce340f: test   r10d,r10d
         ╰  0x00007f9da4ce3412: je     0x00007f9da4ce3370  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
            0x00007f9da4ce3418: movabs r10,0x7f9db6b99a00
            0x00007f9da4ce3422: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@39 (line 198)
            0x00007f9da4ce3425: mov    r10,QWORD PTR [rsp+0x58]
            0x00007f9da4ce342a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@54 (line 200)
            0x00007f9da4ce342e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 63.13%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f9da4ce1920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f9da4ce1924: movabs r12,0x800000000
            0x00007f9da4ce192e: add    r10,r12
            0x00007f9da4ce1931: xor    r12,r12
            0x00007f9da4ce1934: cmp    rax,r10
            0x00007f9da4ce1937: jne    0x00007f9da4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f9da4ce193d: data16 xchg ax,ax
          [Verified Entry Point]
  6.25%     0x00007f9da4ce1940: mov    DWORD PTR [rsp-0x14000],eax
  1.71%     0x00007f9da4ce1947: push   rbp
  3.31%     0x00007f9da4ce1948: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  2.72%     0x00007f9da4ce194c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.08%     0x00007f9da4ce1953: mov    r8d,edx
  3.47%     0x00007f9da4ce1956: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.50%     0x00007f9da4ce195d: mov    r9d,edx
  0.57%     0x00007f9da4ce1960: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.16%     0x00007f9da4ce1963: cmp    r9d,r8d
         ╭  0x00007f9da4ce1966: je     0x00007f9da4ce1978  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.59%  │  0x00007f9da4ce1968: add    rsp,0x20
  2.84%  │  0x00007f9da4ce196c: pop    rbp
  0.55%  │  0x00007f9da4ce196d: mov    r10,QWORD PTR [r15+0x108]
  1.26%  │  0x00007f9da4ce1974: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.55%  │  0x00007f9da4ce1977: ret    
         ↘  0x00007f9da4ce1978: mov    rbp,rsi
            0x00007f9da4ce197b: mov    DWORD PTR [rsp],edx
            0x00007f9da4ce197e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f9da4ce1983: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f9da4ce1988: mov    esi,0xffffff4d
            0x00007f9da4ce198d: xchg   ax,ax
            0x00007f9da4ce198f: call   0x00007f9da4c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 34.57%  <total for region 2>

....[Hottest Regions]...............................................................................
 63.13%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 (159 bytes) 
 34.57%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 
  2.03%       kernel  [unknown] (6 bytes) 
  0.06%       kernel  [unknown] (1 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%  interpreter  dup  89 dup  (0 bytes) 
  0.02%    libjvm.so  _ZN7Monitor4waitEblb (0 bytes) 
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 63.13%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 
 34.57%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 
  2.25%       kernel  [unknown] 
  0.02%  interpreter  dup  89 dup  
  0.02%    libjvm.so  _ZN7Monitor4waitEblb 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.69%           c2
  2.25%       kernel
  0.02%    libjvm.so
  0.02%  interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49904 total address lines.
Perf output processed (skipped 6.307 seconds):
 Column 1: cycles (5075 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 (159 bytes) 

            0x00007fa0a8ce374c: mov    rcx,QWORD PTR [rsp+0x50]
            0x00007fa0a8ce3751: movzx  r11d,BYTE PTR [rcx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007fa0a8ce39be
            0x00007fa0a8ce3759: test   r11d,r11d
            0x00007fa0a8ce375c: jne    0x00007fa0a8ce38a6  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
            0x00007fa0a8ce3762: mov    ebp,0x1
            0x00007fa0a8ce3767: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
  3.21%  ↗  0x00007fa0a8ce3770: mov    r10,QWORD PTR [rsp+0x60]
  2.33%  │  0x00007fa0a8ce3775: mov    r8d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@5 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.45%  │  0x00007fa0a8ce3779: movabs r10,0x71b85d700    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85d700} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic3KtState&apos;)}
  0.91%  │  0x00007fa0a8ce3783: mov    r11d,DWORD PTR [r10+0x74]
         │                                                ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@9 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.07%  │  0x00007fa0a8ce3787: mov    r9d,DWORD PTR [r12+r8*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007fa0a8ce393a
  4.87%  │  0x00007fa0a8ce378c: cmp    r9d,0xf3018        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007fa0a8ce3793: jne    0x00007fa0a8ce384a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  4.85%  │  0x00007fa0a8ce3799: mov    r10,QWORD PTR [rsp+0x60]
  0.43%  │  0x00007fa0a8ce379e: mov    r10d,DWORD PTR [r10+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@26 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.97%  │  0x00007fa0a8ce37a2: mov    ebx,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007fa0a8ce394a
  3.33%  │  0x00007fa0a8ce37a7: mov    r8d,r11d
  2.60%  │  0x00007fa0a8ce37aa: shl    r8d,0x4
  0.45%  │  0x00007fa0a8ce37ae: add    r8d,r11d           ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.28%  │  0x00007fa0a8ce37b1: cmp    ebx,0xf3228        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007fa0a8ce37b7: jne    0x00007fa0a8ce3866  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@41 (line 163)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.51%  │  0x00007fa0a8ce37bd: mov    r10,QWORD PTR [rsp+0x60]
  2.56%  │  0x00007fa0a8ce37c2: mov    r10d,DWORD PTR [r10+0x14]
         │                                                ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@56 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.51%  │  0x00007fa0a8ce37c6: mov    edi,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007fa0a8ce395a
  1.26%  │  0x00007fa0a8ce37cb: imul   r9d,r11d,0x13
  3.35%  │  0x00007fa0a8ce37cf: add    r9d,r8d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@50 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  2.52%  │  0x00007fa0a8ce37d2: cmp    edi,0xf3438        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
         │  0x00007fa0a8ce37d8: jne    0x00007fa0a8ce3886  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@71 (line 164)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.53%  │  0x00007fa0a8ce37de: mov    QWORD PTR [rsp+0x50],rcx
  1.04%  │  0x00007fa0a8ce37e3: imul   edx,r11d,0x17
  3.98%  │  0x00007fa0a8ce37e7: add    edx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@80 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  2.13%  │  0x00007fa0a8ce37ea: mov    rsi,QWORD PTR [rsp]
  0.73%  │  0x00007fa0a8ce37ee: nop
  1.00%  │  0x00007fa0a8ce37ef: call   0x00007fa0a8c68f00  ; ImmutableOopMap{[80]=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  3.00%  │  0x00007fa0a8ce37f4: mov    rcx,QWORD PTR [rsp+0x50]
  1.71%  │  0x00007fa0a8ce37f9: movzx  r10d,BYTE PTR [rcx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  3.43%  │  0x00007fa0a8ce3801: mov    r11,QWORD PTR [r15+0x108]
  2.33%  │  0x00007fa0a8ce3808: add    rbp,0x1            ; ImmutableOopMap{rcx=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  0.43%  │  0x00007fa0a8ce380c: test   DWORD PTR [r11],eax  ;   {poll}
  1.38%  │  0x00007fa0a8ce380f: test   r10d,r10d
         ╰  0x00007fa0a8ce3812: je     0x00007fa0a8ce3770  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
            0x00007fa0a8ce3818: movabs r10,0x7fa0bb284a00
            0x00007fa0a8ce3822: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@39 (line 198)
            0x00007fa0a8ce3825: mov    r10,QWORD PTR [rsp+0x58]
            0x00007fa0a8ce382a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@54 (line 200)
            0x00007fa0a8ce382e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 64.16%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fa0a8ce1d20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fa0a8ce1d24: movabs r12,0x800000000
            0x00007fa0a8ce1d2e: add    r10,r12
            0x00007fa0a8ce1d31: xor    r12,r12
            0x00007fa0a8ce1d34: cmp    rax,r10
            0x00007fa0a8ce1d37: jne    0x00007fa0a8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fa0a8ce1d3d: data16 xchg ax,ax
          [Verified Entry Point]
  5.69%     0x00007fa0a8ce1d40: mov    DWORD PTR [rsp-0x14000],eax
  1.99%     0x00007fa0a8ce1d47: push   rbp
  3.03%     0x00007fa0a8ce1d48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.01%     0x00007fa0a8ce1d4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.34%     0x00007fa0a8ce1d53: mov    r8d,edx
  3.68%     0x00007fa0a8ce1d56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.21%     0x00007fa0a8ce1d5d: mov    r9d,edx
  0.61%     0x00007fa0a8ce1d60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.04%     0x00007fa0a8ce1d63: cmp    r9d,r8d
         ╭  0x00007fa0a8ce1d66: je     0x00007fa0a8ce1d78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.57%  │  0x00007fa0a8ce1d68: add    rsp,0x20
  2.15%  │  0x00007fa0a8ce1d6c: pop    rbp
  0.69%  │  0x00007fa0a8ce1d6d: mov    r10,QWORD PTR [r15+0x108]
  1.06%  │  0x00007fa0a8ce1d74: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.53%  │  0x00007fa0a8ce1d77: ret    
         ↘  0x00007fa0a8ce1d78: mov    rbp,rsi
            0x00007fa0a8ce1d7b: mov    DWORD PTR [rsp],edx
            0x00007fa0a8ce1d7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fa0a8ce1d83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fa0a8ce1d88: mov    esi,0xffffff4d
            0x00007fa0a8ce1d8d: xchg   ax,ax
            0x00007fa0a8ce1d8f: call   0x00007fa0a8c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 33.62%  <total for region 2>

....[Hottest Regions]...............................................................................
 64.16%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 (159 bytes) 
 33.62%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 
  1.69%       kernel  [unknown] (6 bytes) 
  0.06%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%  interpreter  ifgt  157 ifgt  (0 bytes) 
  0.14%  <...other 7 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 64.16%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 
 33.62%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 
  2.05%       kernel  [unknown] 
  0.02%  interpreter  invokevirtual  182 invokevirtual  
  0.02%  interpreter  areturn  176 areturn  
  0.02%  interpreter  fast_aload_0  220 fast_aload_0  
  0.02%  interpreter  ifgt  157 ifgt  
  0.02%    libjvm.so  _ZN20SafepointSynchronize5beginEv 
  0.02%    libjvm.so  _ZN7Monitor5IWaitEP6Threadl 
  0.02%  interpreter  fast_aputfield  211 fast_aputfield  
  0.02%    libjvm.so  _ZN15ClassFileParser12parse_methodEPK15ClassFileStreambPK12ConstantPoolP11AccessFlagsP6Thread 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.77%           c2
  2.05%       kernel
  0.10%  interpreter
  0.06%    libjvm.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49904 total address lines.
Perf output processed (skipped 6.244 seconds):
 Column 1: cycles (5114 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 (159 bytes) 

            0x00007f941cce334c: mov    rcx,QWORD PTR [rsp+0x50]
            0x00007f941cce3351: movzx  r11d,BYTE PTR [rcx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f941cce35be
            0x00007f941cce3359: test   r11d,r11d
            0x00007f941cce335c: jne    0x00007f941cce34a6  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
            0x00007f941cce3362: mov    ebp,0x1
            0x00007f941cce3367: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
  3.50%  ↗  0x00007f941cce3370: mov    r10,QWORD PTR [rsp+0x60]
  1.99%  │  0x00007f941cce3375: mov    r8d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@5 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.63%  │  0x00007f941cce3379: movabs r10,0x71b85d700    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85d700} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic3KtState&apos;)}
  1.33%  │  0x00007f941cce3383: mov    r11d,DWORD PTR [r10+0x74]
         │                                                ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@9 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.34%  │  0x00007f941cce3387: mov    r9d,DWORD PTR [r12+r8*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f941cce353a
  3.85%  │  0x00007f941cce338c: cmp    r9d,0xf3018        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007f941cce3393: jne    0x00007f941cce344a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.66%  │  0x00007f941cce3399: mov    r10,QWORD PTR [rsp+0x60]
  0.68%  │  0x00007f941cce339e: mov    r10d,DWORD PTR [r10+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@26 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.99%  │  0x00007f941cce33a2: mov    ebx,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f941cce354a
  3.09%  │  0x00007f941cce33a7: mov    r8d,r11d
  2.01%  │  0x00007f941cce33aa: shl    r8d,0x4
  0.43%  │  0x00007f941cce33ae: add    r8d,r11d           ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.51%  │  0x00007f941cce33b1: cmp    ebx,0xf3228        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007f941cce33b7: jne    0x00007f941cce3466  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@41 (line 163)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.19%  │  0x00007f941cce33bd: mov    r10,QWORD PTR [rsp+0x60]
  2.56%  │  0x00007f941cce33c2: mov    r10d,DWORD PTR [r10+0x14]
         │                                                ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@56 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.66%  │  0x00007f941cce33c6: mov    edi,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f941cce355a
  1.82%  │  0x00007f941cce33cb: imul   r9d,r11d,0x13
  2.62%  │  0x00007f941cce33cf: add    r9d,r8d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@50 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  2.13%  │  0x00007f941cce33d2: cmp    edi,0xf3438        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
         │  0x00007f941cce33d8: jne    0x00007f941cce3486  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@71 (line 164)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.78%  │  0x00007f941cce33de: mov    QWORD PTR [rsp+0x50],rcx
  1.53%  │  0x00007f941cce33e3: imul   edx,r11d,0x17
  3.56%  │  0x00007f941cce33e7: add    edx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@80 (line 87)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  2.05%  │  0x00007f941cce33ea: mov    rsi,QWORD PTR [rsp]
  0.65%  │  0x00007f941cce33ee: nop
  1.56%  │  0x00007f941cce33ef: call   0x00007f941cc68f00  ; ImmutableOopMap{[80]=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  3.09%  │  0x00007f941cce33f4: mov    rcx,QWORD PTR [rsp+0x50]
  2.19%  │  0x00007f941cce33f9: movzx  r10d,BYTE PTR [rcx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  4.24%  │  0x00007f941cce3401: mov    r11,QWORD PTR [r15+0x108]
  1.99%  │  0x00007f941cce3408: add    rbp,0x1            ; ImmutableOopMap{rcx=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  0.59%  │  0x00007f941cce340c: test   DWORD PTR [r11],eax  ;   {poll}
  1.43%  │  0x00007f941cce340f: test   r10d,r10d
         ╰  0x00007f941cce3412: je     0x00007f941cce3370  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
            0x00007f941cce3418: movabs r10,0x7f942e95ca00
            0x00007f941cce3422: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@39 (line 198)
            0x00007f941cce3425: mov    r10,QWORD PTR [rsp+0x58]
            0x00007f941cce342a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@54 (line 200)
            0x00007f941cce342e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 64.67%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f941cce1920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f941cce1924: movabs r12,0x800000000
            0x00007f941cce192e: add    r10,r12
            0x00007f941cce1931: xor    r12,r12
            0x00007f941cce1934: cmp    rax,r10
            0x00007f941cce1937: jne    0x00007f941cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007f941cce193d: data16 xchg ax,ax
          [Verified Entry Point]
  5.26%     0x00007f941cce1940: mov    DWORD PTR [rsp-0x14000],eax
  2.46%     0x00007f941cce1947: push   rbp
  3.19%     0x00007f941cce1948: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  2.76%     0x00007f941cce194c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.54%     0x00007f941cce1953: mov    r8d,edx
  2.93%     0x00007f941cce1956: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.25%     0x00007f941cce195d: mov    r9d,edx
  0.76%     0x00007f941cce1960: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.56%     0x00007f941cce1963: cmp    r9d,r8d
         ╭  0x00007f941cce1966: je     0x00007f941cce1978  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  2.95%  │  0x00007f941cce1968: add    rsp,0x20
  2.11%  │  0x00007f941cce196c: pop    rbp
  0.53%  │  0x00007f941cce196d: mov    r10,QWORD PTR [r15+0x108]
  1.21%  │  0x00007f941cce1974: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.82%  │  0x00007f941cce1977: ret    
         ↘  0x00007f941cce1978: mov    rbp,rsi
            0x00007f941cce197b: mov    DWORD PTR [rsp],edx
            0x00007f941cce197e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f941cce1983: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f941cce1988: mov    esi,0xffffff4d
            0x00007f941cce198d: xchg   ax,ax
            0x00007f941cce198f: call   0x00007f941cc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 32.34%  <total for region 2>

....[Hottest Regions]...............................................................................
 64.67%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 (159 bytes) 
 32.34%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 
  2.60%       kernel  [unknown] (6 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%  interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%  interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%  interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%  interpreter  caload  52 caload  (0 bytes) 
  0.02%  interpreter  astore  58 astore  (0 bytes) 
  0.02%  interpreter  return  177 return  (0 bytes) 
  0.02%  interpreter  invokeinterface  185 invokeinterface  (0 bytes) 
  0.02%  interpreter  checkcast  192 checkcast  (0 bytes) 
  0.02%  interpreter  fast_aputfield  211 fast_aputfield  (0 bytes) 
  0.02%  interpreter  fast_aload_0  220 fast_aload_0  (0 bytes) 
  0.04%  <...other 2 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 64.67%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 
 32.34%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 
  2.74%       kernel  [unknown] 
  0.06%  interpreter  method entry point (kind = zerolocals)  
  0.02%  interpreter  checkcast  192 checkcast  
  0.02%  interpreter  fast_aload_0  220 fast_aload_0  
  0.02%           c2  java.lang.Object::&lt;init&gt;, version 13 
  0.02%  interpreter  fast_aputfield  211 fast_aputfield  
  0.02%  interpreter  return  177 return  
  0.02%    libjvm.so  _ZN13ObjArrayKlass10copy_arrayEP12arrayOopDesciS1_iiP6Thread 
  0.02%  interpreter  astore  58 astore  
  0.02%  interpreter  caload  52 caload  
  0.02%  interpreter  invokeinterface  185 invokeinterface  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.03%           c2
  2.74%       kernel
  0.20%  interpreter
  0.02%    libjvm.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic4Kt
# Parameters: (param = 3)

# Run progress: 75.00% complete, ETA 00:01:09
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5.396 ns/op
# Warmup Iteration   2: 5.071 ns/op
# Warmup Iteration   3: 4.684 ns/op
# Warmup Iteration   4: 4.610 ns/op
# Warmup Iteration   5: 4.644 ns/op
Iteration   1: 4.673 ns/op
Iteration   2: 4.818 ns/op
Iteration   3: 4.679 ns/op
Iteration   4: 4.630 ns/op
Iteration   5: 4.614 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 79.17% complete, ETA 00:00:57
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5.533 ns/op
# Warmup Iteration   2: 5.327 ns/op
# Warmup Iteration   3: 4.702 ns/op
# Warmup Iteration   4: 4.696 ns/op
# Warmup Iteration   5: 4.717 ns/op
Iteration   1: 4.571 ns/op
Iteration   2: 4.717 ns/op
Iteration   3: 4.662 ns/op
Iteration   4: 4.646 ns/op
Iteration   5: 4.588 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 83.33% complete, ETA 00:00:46
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5.435 ns/op
# Warmup Iteration   2: 4.673 ns/op
# Warmup Iteration   3: 4.156 ns/op
# Warmup Iteration   4: 4.609 ns/op
# Warmup Iteration   5: 4.574 ns/op
Iteration   1: 4.631 ns/op
Iteration   2: 4.613 ns/op
Iteration   3: 4.624 ns/op
Iteration   4: 4.578 ns/op
Iteration   5: 4.631 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic4Kt":
  4.645 ±(99.9%) 0.066 ns/op [Average]
  (min, avg, max) = (4.571, 4.645, 4.818), stdev = 0.062
  CI (99.9%): [4.579, 4.711] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic4Kt:·asm":
PrintAssembly processed: 50090 total address lines.
Perf output processed (skipped 6.212 seconds):
 Column 1: cycles (5102 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 134 (195 bytes) 

            0x00007fc85c122de4: mov    rbx,QWORD PTR [rsp+0x50]
            0x00007fc85c122de9: movzx  r10d,BYTE PTR [rbx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007fc85c1230de
            0x00007fc85c122df1: test   r10d,r10d
            0x00007fc85c122df4: jne    0x00007fc85c122f7a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
            0x00007fc85c122dfa: mov    ebp,0x1
            0x00007fc85c122dff: nop                       ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
  2.21%  ↗  0x00007fc85c122e00: mov    r10,QWORD PTR [rsp+0x60]
  0.98%  │  0x00007fc85c122e05: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@5 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.73%  │  0x00007fc85c122e09: movabs r11,0x71b85daf0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85daf0} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic4KtState&apos;)}
  2.84%  │  0x00007fc85c122e13: mov    r9d,DWORD PTR [r11+0x74]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@9 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.02%  │  0x00007fc85c122e17: mov    r11d,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007fc85c12303a
  4.59%  │  0x00007fc85c122e1c: cmp    r11d,0xf3018       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007fc85c122e23: jne    0x00007fc85c122efe  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  3.04%  │  0x00007fc85c122e29: mov    r10,QWORD PTR [rsp+0x60]
  2.14%  │  0x00007fc85c122e2e: mov    r10d,DWORD PTR [r10+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@26 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.71%  │  0x00007fc85c122e32: mov    r11d,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007fc85c12304a
  0.80%  │  0x00007fc85c122e37: mov    r8d,r9d
  2.65%  │  0x00007fc85c122e3a: shl    r8d,0x4
  2.08%  │  0x00007fc85c122e3e: add    r8d,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.00%  │  0x00007fc85c122e41: cmp    r11d,0xf3228       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007fc85c122e48: jne    0x00007fc85c122f1a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@41 (line 163)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.73%  │  0x00007fc85c122e4e: mov    r10,QWORD PTR [rsp+0x60]
  2.63%  │  0x00007fc85c122e53: mov    ecx,DWORD PTR [r10+0x14]  ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@56 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.06%  │  0x00007fc85c122e57: mov    r11d,DWORD PTR [r12+rcx*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007fc85c12305a
  1.10%  │  0x00007fc85c122e5c: imul   r10d,r9d,0x13
  0.61%  │  0x00007fc85c122e60: add    r10d,r8d           ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@50 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.69%  │  0x00007fc85c122e63: cmp    r11d,0xf3438       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
         │  0x00007fc85c122e6a: jne    0x00007fc85c122f3a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@71 (line 164)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.21%  │  0x00007fc85c122e70: mov    r11,QWORD PTR [rsp+0x60]
  1.25%  │  0x00007fc85c122e75: mov    r11d,DWORD PTR [r11+0x18]
         │                                                ;*getfield alg4 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@86 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.86%  │  0x00007fc85c122e79: mov    ecx,DWORD PTR [r12+r11*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007fc85c12306a
  3.04%  │  0x00007fc85c122e7e: imul   r8d,r9d,0x17
  2.21%  │  0x00007fc85c122e82: add    r8d,r10d           ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@80 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.06%  │  0x00007fc85c122e85: cmp    ecx,0xf3648        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg4&apos;)}
         │  0x00007fc85c122e8b: jne    0x00007fc85c122f5a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@101 (line 165)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.74%  │  0x00007fc85c122e91: mov    QWORD PTR [rsp+0x50],rbx
  2.92%  │  0x00007fc85c122e96: imul   edx,r9d,0x1d
  2.33%  │  0x00007fc85c122e9a: add    edx,r8d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@110 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.18%  │  0x00007fc85c122e9d: mov    rsi,QWORD PTR [rsp]
  0.82%  │  0x00007fc85c122ea1: xchg   ax,ax
  2.69%  │  0x00007fc85c122ea3: call   0x00007fc85c0a1f00  ; ImmutableOopMap{[80]=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  1.78%  │  0x00007fc85c122ea8: mov    rbx,QWORD PTR [rsp+0x50]
  3.72%  │  0x00007fc85c122ead: movzx  r11d,BYTE PTR [rbx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  1.76%  │  0x00007fc85c122eb5: mov    r10,QWORD PTR [r15+0x108]
  1.10%  │  0x00007fc85c122ebc: add    rbp,0x1            ; ImmutableOopMap{rbx=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.80%  │  0x00007fc85c122ec0: test   DWORD PTR [r10],eax  ;   {poll}
  2.61%  │  0x00007fc85c122ec3: test   r11d,r11d
         ╰  0x00007fc85c122ec6: je     0x00007fc85c122e00  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
            0x00007fc85c122ecc: movabs r10,0x7fc86079ca00
            0x00007fc85c122ed6: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@39 (line 198)
            0x00007fc85c122ed9: mov    r10,QWORD PTR [rsp+0x58]
            0x00007fc85c122ede: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@54 (line 200)
            0x00007fc85c122ee2: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 68.68%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 130 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fc85c11da20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fc85c11da24: movabs r12,0x800000000
            0x00007fc85c11da2e: add    r10,r12
            0x00007fc85c11da31: xor    r12,r12
            0x00007fc85c11da34: cmp    rax,r10
            0x00007fc85c11da37: jne    0x00007fc85c0a1c80  ;   {runtime_call ic_miss_stub}
            0x00007fc85c11da3d: data16 xchg ax,ax
          [Verified Entry Point]
  2.92%     0x00007fc85c11da40: mov    DWORD PTR [rsp-0x14000],eax
  3.16%     0x00007fc85c11da47: push   rbp
  2.21%     0x00007fc85c11da48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  1.80%     0x00007fc85c11da4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.94%     0x00007fc85c11da53: mov    r8d,edx
  2.08%     0x00007fc85c11da56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.92%     0x00007fc85c11da5d: mov    r9d,edx
  0.73%     0x00007fc85c11da60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.94%     0x00007fc85c11da63: cmp    r9d,r8d
         ╭  0x00007fc85c11da66: je     0x00007fc85c11da78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  1.84%  │  0x00007fc85c11da68: add    rsp,0x20
  0.96%  │  0x00007fc85c11da6c: pop    rbp
  0.74%  │  0x00007fc85c11da6d: mov    r10,QWORD PTR [r15+0x108]
  3.00%  │  0x00007fc85c11da74: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.39%  │  0x00007fc85c11da77: ret    
         ↘  0x00007fc85c11da78: mov    rbp,rsi
            0x00007fc85c11da7b: mov    DWORD PTR [rsp],edx
            0x00007fc85c11da7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fc85c11da83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fc85c11da88: mov    esi,0xffffff4d
            0x00007fc85c11da8d: xchg   ax,ax
            0x00007fc85c11da8f: call   0x00007fc85c0a3900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 28.64%  <total for region 2>

....[Hottest Regions]...............................................................................
 68.68%                  c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 134 (195 bytes) 
 28.64%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 130 (55 bytes) 
  1.71%              kernel  [unknown] (6 bytes) 
  0.10%              kernel  [unknown] (13 bytes) 
  0.06%              kernel  [unknown] (1 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  0.04%              kernel  [unknown] (1 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.04%        libc-2.28.so  __clock_gettime (18 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.43%  <...other 22 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 68.68%                  c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 134 
 28.64%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 130 
  2.20%              kernel  [unknown] 
  0.08%         interpreter  method entry point (kind = zerolocals)  
  0.06%         interpreter  invokevirtual  182 invokevirtual  
  0.04%        libc-2.28.so  __clock_gettime 
  0.02%                  c2  jdk.internal.reflect.ClassFileAssembler::emitByte, version 88 
  0.02%  libpthread-2.28.so  __condvar_cancel_waiting 
  0.02%           libjvm.so  _ZNK15ClassFileParser23verify_legal_class_nameEPK6SymbolP6Thread 
  0.02%  libpthread-2.28.so  __pthread_mutex_unlock 
  0.02%  libpthread-2.28.so  __pthread_mutex_cond_lock 
  0.02%         interpreter  ifnull  198 ifnull  
  0.02%  libpthread-2.28.so  __lll_unlock_wake 
  0.02%  libpthread-2.28.so  __free_tcb 
  0.02%         interpreter  fast_aputfield  211 fast_aputfield  
  0.02%  libpthread-2.28.so  __pthread_mutex_lock 
  0.02%         interpreter  iand  126 iand  
  0.02%           libjvm.so  _ZN7Monitor6unlockEv 
  0.02%           libjvm.so  _ZN9CodeCache9find_blobEPv 
  0.02%           libjvm.so  _ZNK17ObjArrayAllocator10initializeEP8HeapWord 
  0.02%  <...other 1 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.33%                  c2
  2.20%              kernel
  0.22%         interpreter
  0.12%  libpthread-2.28.so
  0.08%           libjvm.so
  0.04%        libc-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 50073 total address lines.
Perf output processed (skipped 6.273 seconds):
 Column 1: cycles (5085 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 134 (195 bytes) 

            0x00007f06c4ce9e64: mov    rbx,QWORD PTR [rsp+0x50]
            0x00007f06c4ce9e69: movzx  r10d,BYTE PTR [rbx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f06c4cea15e
            0x00007f06c4ce9e71: test   r10d,r10d
            0x00007f06c4ce9e74: jne    0x00007f06c4ce9ffa  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
            0x00007f06c4ce9e7a: mov    ebp,0x1
            0x00007f06c4ce9e7f: nop                       ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
  1.93%  ↗  0x00007f06c4ce9e80: mov    r10,QWORD PTR [rsp+0x60]
  1.00%  │  0x00007f06c4ce9e85: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@5 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.73%  │  0x00007f06c4ce9e89: movabs r11,0x71b85daf0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85daf0} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic4KtState&apos;)}
  2.69%  │  0x00007f06c4ce9e93: mov    r9d,DWORD PTR [r11+0x74]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@9 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.75%  │  0x00007f06c4ce9e97: mov    r11d,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f06c4cea0ba
  4.58%  │  0x00007f06c4ce9e9c: cmp    r11d,0xf3018       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007f06c4ce9ea3: jne    0x00007f06c4ce9f7e  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  3.30%  │  0x00007f06c4ce9ea9: mov    r10,QWORD PTR [rsp+0x60]
  1.97%  │  0x00007f06c4ce9eae: mov    r10d,DWORD PTR [r10+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@26 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.04%  │  0x00007f06c4ce9eb2: mov    r11d,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f06c4cea0ca
  0.73%  │  0x00007f06c4ce9eb7: mov    r8d,r9d
  2.91%  │  0x00007f06c4ce9eba: shl    r8d,0x4
  2.01%  │  0x00007f06c4ce9ebe: add    r8d,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.96%  │  0x00007f06c4ce9ec1: cmp    r11d,0xf3228       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007f06c4ce9ec8: jne    0x00007f06c4ce9f9a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@41 (line 163)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.65%  │  0x00007f06c4ce9ece: mov    r10,QWORD PTR [rsp+0x60]
  2.56%  │  0x00007f06c4ce9ed3: mov    ecx,DWORD PTR [r10+0x14]  ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@56 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.95%  │  0x00007f06c4ce9ed7: mov    r11d,DWORD PTR [r12+rcx*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f06c4cea0da
  1.18%  │  0x00007f06c4ce9edc: imul   r10d,r9d,0x13
  0.88%  │  0x00007f06c4ce9ee0: add    r10d,r8d           ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@50 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.93%  │  0x00007f06c4ce9ee3: cmp    r11d,0xf3438       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
         │  0x00007f06c4ce9eea: jne    0x00007f06c4ce9fba  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@71 (line 164)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.18%  │  0x00007f06c4ce9ef0: mov    r11,QWORD PTR [rsp+0x60]
  0.90%  │  0x00007f06c4ce9ef5: mov    r11d,DWORD PTR [r11+0x18]
         │                                                ;*getfield alg4 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@86 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.94%  │  0x00007f06c4ce9ef9: mov    ecx,DWORD PTR [r12+r11*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f06c4cea0ea
  2.71%  │  0x00007f06c4ce9efe: imul   r8d,r9d,0x17
  2.28%  │  0x00007f06c4ce9f02: add    r8d,r10d           ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@80 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.22%  │  0x00007f06c4ce9f05: cmp    ecx,0xf3648        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg4&apos;)}
         │  0x00007f06c4ce9f0b: jne    0x00007f06c4ce9fda  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@101 (line 165)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.81%  │  0x00007f06c4ce9f11: mov    QWORD PTR [rsp+0x50],rbx
  2.81%  │  0x00007f06c4ce9f16: imul   edx,r9d,0x1d
  2.22%  │  0x00007f06c4ce9f1a: add    edx,r8d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@110 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.83%  │  0x00007f06c4ce9f1d: mov    rsi,QWORD PTR [rsp]
  0.85%  │  0x00007f06c4ce9f21: xchg   ax,ax
  3.11%  │  0x00007f06c4ce9f23: call   0x00007f06c4c68f00  ; ImmutableOopMap{[80]=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  1.93%  │  0x00007f06c4ce9f28: mov    rbx,QWORD PTR [rsp+0x50]
  3.23%  │  0x00007f06c4ce9f2d: movzx  r11d,BYTE PTR [rbx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  1.85%  │  0x00007f06c4ce9f35: mov    r10,QWORD PTR [r15+0x108]
  1.00%  │  0x00007f06c4ce9f3c: add    rbp,0x1            ; ImmutableOopMap{rbx=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.73%  │  0x00007f06c4ce9f40: test   DWORD PTR [r10],eax  ;   {poll}
  2.75%  │  0x00007f06c4ce9f43: test   r11d,r11d
         ╰  0x00007f06c4ce9f46: je     0x00007f06c4ce9e80  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
            0x00007f06c4ce9f4c: movabs r10,0x7f06d7157a00
            0x00007f06c4ce9f56: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@39 (line 198)
            0x00007f06c4ce9f59: mov    r10,QWORD PTR [rsp+0x58]
            0x00007f06c4ce9f5e: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@54 (line 200)
            0x00007f06c4ce9f62: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 68.10%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 130 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f06c4ce4aa0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f06c4ce4aa4: movabs r12,0x800000000
            0x00007f06c4ce4aae: add    r10,r12
            0x00007f06c4ce4ab1: xor    r12,r12
            0x00007f06c4ce4ab4: cmp    rax,r10
            0x00007f06c4ce4ab7: jne    0x00007f06c4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f06c4ce4abd: data16 xchg ax,ax
          [Verified Entry Point]
  3.21%     0x00007f06c4ce4ac0: mov    DWORD PTR [rsp-0x14000],eax
  3.62%     0x00007f06c4ce4ac7: push   rbp
  1.93%     0x00007f06c4ce4ac8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  1.67%     0x00007f06c4ce4acc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.75%     0x00007f06c4ce4ad3: mov    r8d,edx
  2.44%     0x00007f06c4ce4ad6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.04%     0x00007f06c4ce4add: mov    r9d,edx
  0.61%     0x00007f06c4ce4ae0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  3.19%     0x00007f06c4ce4ae3: cmp    r9d,r8d
         ╭  0x00007f06c4ce4ae6: je     0x00007f06c4ce4af8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  2.10%  │  0x00007f06c4ce4ae8: add    rsp,0x20
  0.90%  │  0x00007f06c4ce4aec: pop    rbp
  0.77%  │  0x00007f06c4ce4aed: mov    r10,QWORD PTR [r15+0x108]
  2.91%  │  0x00007f06c4ce4af4: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.30%  │  0x00007f06c4ce4af7: ret    
         ↘  0x00007f06c4ce4af8: mov    rbp,rsi
            0x00007f06c4ce4afb: mov    DWORD PTR [rsp],edx
            0x00007f06c4ce4afe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f06c4ce4b03: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f06c4ce4b08: mov    esi,0xffffff4d
            0x00007f06c4ce4b0d: xchg   ax,ax
            0x00007f06c4ce4b0f: call   0x00007f06c4c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 29.44%  <total for region 2>

....[Hottest Regions]...............................................................................
 68.10%                  c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 134 (195 bytes) 
 29.44%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 130 (55 bytes) 
  1.63%              kernel  [unknown] (6 bytes) 
  0.06%              kernel  [unknown] (1 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (17 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (7 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.29%  <...other 15 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 68.10%                  c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 134 
 29.44%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 130 
  2.10%              kernel  [unknown] 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  if_icmpne  160 if_icmpne  
  0.02%           libjvm.so  _ZN12CounterDecay9do_methodEP6Method 
  0.02%           libjvm.so  _ZN2os13javaTimeNanosEv 
  0.02%  libpthread-2.28.so  __pthread_mutex_cond_lock 
  0.02%         interpreter  bipush  16 bipush  
  0.02%         interpreter  invokespecial  183 invokespecial  
  0.02%           libjvm.so  _ZN6Thread10muxReleaseEPVl 
  0.02%         interpreter  method entry point (kind = native)  
  0.02%           libjvm.so  _ZN4UTF813is_legal_utf8EPKhib 
  0.02%         interpreter  areturn  176 areturn  
  0.02%           libjvm.so  jni_ExceptionCheck 
  0.02%           libjvm.so  _ZN20SafepointSynchronize3endEv 
  0.02%        libc-2.28.so  __memset_avx2_unaligned_erms 
  0.02%           libjvm.so  _ZN10Reflection19verify_class_accessEPK5KlassPK13InstanceKlassb 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.54%                  c2
  2.10%              kernel
  0.16%         interpreter
  0.14%           libjvm.so
  0.02%        libc-2.28.so
  0.02%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 50073 total address lines.
Perf output processed (skipped 6.281 seconds):
 Column 1: cycles (5092 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 133 (195 bytes) 

            0x00007f0cc039e864: mov    rbx,QWORD PTR [rsp+0x50]
            0x00007f0cc039e869: movzx  r10d,BYTE PTR [rbx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f0cc039eb5e
            0x00007f0cc039e871: test   r10d,r10d
            0x00007f0cc039e874: jne    0x00007f0cc039e9fa  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
            0x00007f0cc039e87a: mov    ebp,0x1
            0x00007f0cc039e87f: nop                       ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
  1.96%  ↗  0x00007f0cc039e880: mov    r10,QWORD PTR [rsp+0x60]
  1.28%  │  0x00007f0cc039e885: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@5 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.81%  │  0x00007f0cc039e889: movabs r11,0x71b85daf0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85daf0} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic4KtState&apos;)}
  3.00%  │  0x00007f0cc039e893: mov    r9d,DWORD PTR [r11+0x74]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@9 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.42%  │  0x00007f0cc039e897: mov    r11d,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f0cc039eaba
  4.69%  │  0x00007f0cc039e89c: cmp    r11d,0xf3018       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007f0cc039e8a3: jne    0x00007f0cc039e97e  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.85%  │  0x00007f0cc039e8a9: mov    r10,QWORD PTR [rsp+0x60]
  2.30%  │  0x00007f0cc039e8ae: mov    r10d,DWORD PTR [r10+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@26 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.69%  │  0x00007f0cc039e8b2: mov    r11d,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f0cc039eaca
  0.94%  │  0x00007f0cc039e8b7: mov    r8d,r9d
  2.73%  │  0x00007f0cc039e8ba: shl    r8d,0x4
  1.90%  │  0x00007f0cc039e8be: add    r8d,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.92%  │  0x00007f0cc039e8c1: cmp    r11d,0xf3228       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007f0cc039e8c8: jne    0x00007f0cc039e99a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@41 (line 163)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.86%  │  0x00007f0cc039e8ce: mov    r10,QWORD PTR [rsp+0x60]
  2.87%  │  0x00007f0cc039e8d3: mov    ecx,DWORD PTR [r10+0x14]  ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@56 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.16%  │  0x00007f0cc039e8d7: mov    r11d,DWORD PTR [r12+rcx*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f0cc039eada
  0.77%  │  0x00007f0cc039e8dc: imul   r10d,r9d,0x13
  0.90%  │  0x00007f0cc039e8e0: add    r10d,r8d           ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@50 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.57%  │  0x00007f0cc039e8e3: cmp    r11d,0xf3438       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
         │  0x00007f0cc039e8ea: jne    0x00007f0cc039e9ba  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@71 (line 164)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.30%  │  0x00007f0cc039e8f0: mov    r11,QWORD PTR [rsp+0x60]
  0.84%  │  0x00007f0cc039e8f5: mov    r11d,DWORD PTR [r11+0x18]
         │                                                ;*getfield alg4 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@86 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.79%  │  0x00007f0cc039e8f9: mov    ecx,DWORD PTR [r12+r11*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f0cc039eaea
  2.71%  │  0x00007f0cc039e8fe: imul   r8d,r9d,0x17
  2.16%  │  0x00007f0cc039e902: add    r8d,r10d           ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@80 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.04%  │  0x00007f0cc039e905: cmp    ecx,0xf3648        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg4&apos;)}
         │  0x00007f0cc039e90b: jne    0x00007f0cc039e9da  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@101 (line 165)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.86%  │  0x00007f0cc039e911: mov    QWORD PTR [rsp+0x50],rbx
  2.91%  │  0x00007f0cc039e916: imul   edx,r9d,0x1d
  1.96%  │  0x00007f0cc039e91a: add    edx,r8d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@110 (line 105)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.86%  │  0x00007f0cc039e91d: mov    rsi,QWORD PTR [rsp]
  0.75%  │  0x00007f0cc039e921: xchg   ax,ax
  2.95%  │  0x00007f0cc039e923: call   0x00007f0cc031df00  ; ImmutableOopMap{[80]=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  1.61%  │  0x00007f0cc039e928: mov    rbx,QWORD PTR [rsp+0x50]
  3.46%  │  0x00007f0cc039e92d: movzx  r11d,BYTE PTR [rbx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  2.22%  │  0x00007f0cc039e935: mov    r10,QWORD PTR [r15+0x108]
  0.90%  │  0x00007f0cc039e93c: add    rbp,0x1            ; ImmutableOopMap{rbx=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.43%  │  0x00007f0cc039e940: test   DWORD PTR [r10],eax  ;   {poll}
  3.22%  │  0x00007f0cc039e943: test   r11d,r11d
         ╰  0x00007f0cc039e946: je     0x00007f0cc039e880  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
            0x00007f0cc039e94c: movabs r10,0x7f0cc4a18a00
            0x00007f0cc039e956: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@39 (line 198)
            0x00007f0cc039e959: mov    r10,QWORD PTR [rsp+0x58]
            0x00007f0cc039e95e: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@54 (line 200)
            0x00007f0cc039e962: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 68.60%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f0cc0396c20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f0cc0396c24: movabs r12,0x800000000
            0x00007f0cc0396c2e: add    r10,r12
            0x00007f0cc0396c31: xor    r12,r12
            0x00007f0cc0396c34: cmp    rax,r10
            0x00007f0cc0396c37: jne    0x00007f0cc031dc80  ;   {runtime_call ic_miss_stub}
            0x00007f0cc0396c3d: data16 xchg ax,ax
          [Verified Entry Point]
  3.24%     0x00007f0cc0396c40: mov    DWORD PTR [rsp-0x14000],eax
  3.91%     0x00007f0cc0396c47: push   rbp
  2.08%     0x00007f0cc0396c48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  1.47%     0x00007f0cc0396c4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.77%     0x00007f0cc0396c53: mov    r8d,edx
  2.20%     0x00007f0cc0396c56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.82%     0x00007f0cc0396c5d: mov    r9d,edx
  0.67%     0x00007f0cc0396c60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.91%     0x00007f0cc0396c63: cmp    r9d,r8d
         ╭  0x00007f0cc0396c66: je     0x00007f0cc0396c78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  2.06%  │  0x00007f0cc0396c68: add    rsp,0x20
  1.00%  │  0x00007f0cc0396c6c: pop    rbp
  0.57%  │  0x00007f0cc0396c6d: mov    r10,QWORD PTR [r15+0x108]
  2.85%  │  0x00007f0cc0396c74: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.26%  │  0x00007f0cc0396c77: ret    
         ↘  0x00007f0cc0396c78: mov    rbp,rsi
            0x00007f0cc0396c7b: mov    DWORD PTR [rsp],edx
            0x00007f0cc0396c7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f0cc0396c83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f0cc0396c88: mov    esi,0xffffff4d
            0x00007f0cc0396c8d: xchg   ax,ax
            0x00007f0cc0396c8f: call   0x00007f0cc031f900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 28.81%  <total for region 2>

....[Hottest Regions]...............................................................................
 68.60%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 133 (195 bytes) 
 28.81%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 
  1.67%       kernel  [unknown] (6 bytes) 
  0.06%       kernel  [unknown] (28 bytes) 
  0.06%       kernel  [unknown] (0 bytes) 
  0.06%    libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (13 bytes) 
  0.04%       kernel  [unknown] (0 bytes) 
  0.04%  interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.41%  <...other 21 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 68.60%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 133 
 28.81%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 
  2.14%       kernel  [unknown] 
  0.08%    libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%  interpreter  method entry point (kind = zerolocals)  
  0.04%  interpreter  invokevirtual  182 invokevirtual  
  0.02%  interpreter  fast_aload_0  220 fast_aload_0  
  0.02%    libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%  interpreter  ifnull  198 ifnull  
  0.02%    libjvm.so  _ZN15ClassFileParser12parse_streamEPK15ClassFileStreamP6Thread.part.136 
  0.02%    libjvm.so  _ZN10oopFactory12new_objArrayEP5KlassiP6Thread 
  0.02%  interpreter  method entry point (kind = native)  
  0.02%    libjvm.so  _ZN20SafepointSynchronize5beginEv 
  0.02%  interpreter  iconst_1  4 iconst_1  
  0.02%  interpreter  fast_aaccess_0  222 fast_aaccess_0  
  0.02%    libjvm.so  _ZN7Monitor5IWaitEP6Threadl 
  0.02%    libjvm.so  _ZN9metaspace12SpaceManager8allocateEm 
  0.02%  interpreter  fast_igetfield  208 fast_igetfield  
  0.02%    libjvm.so  _ZNK5frame20is_interpreted_frameEv 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.41%           c2
  2.14%       kernel
  0.22%    libjvm.so
  0.22%  interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallKtBenchmark.MonomorphicKt
# Parameters: (param = 3)

# Run progress: 87.50% complete, ETA 00:00:34
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.483 ns/op
# Warmup Iteration   2: 3.218 ns/op
# Warmup Iteration   3: 2.705 ns/op
# Warmup Iteration   4: 2.677 ns/op
# Warmup Iteration   5: 2.677 ns/op
Iteration   1: 2.721 ns/op
Iteration   2: 2.677 ns/op
Iteration   3: 2.693 ns/op
Iteration   4: 2.714 ns/op
Iteration   5: 2.713 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 91.67% complete, ETA 00:00:23
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.858 ns/op
# Warmup Iteration   2: 3.578 ns/op
# Warmup Iteration   3: 2.960 ns/op
# Warmup Iteration   4: 2.974 ns/op
# Warmup Iteration   5: 2.944 ns/op
Iteration   1: 2.931 ns/op
Iteration   2: 2.594 ns/op
Iteration   3: 2.626 ns/op
Iteration   4: 2.624 ns/op
Iteration   5: 2.617 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 95.83% complete, ETA 00:00:11
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.978 ns/op
# Warmup Iteration   2: 3.691 ns/op
# Warmup Iteration   3: 3.000 ns/op
# Warmup Iteration   4: 2.996 ns/op
# Warmup Iteration   5: 2.667 ns/op
Iteration   1: 2.680 ns/op
Iteration   2: 2.690 ns/op
Iteration   3: 2.692 ns/op
Iteration   4: 2.685 ns/op
Iteration   5: 2.723 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallKtBenchmark.MonomorphicKt":
  2.692 ±(99.9%) 0.083 ns/op [Average]
  (min, avg, max) = (2.594, 2.692, 2.931), stdev = 0.078
  CI (99.9%): [2.609, 2.775] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallKtBenchmark.MonomorphicKt:·asm":
PrintAssembly processed: 49534 total address lines.
Perf output processed (skipped 6.279 seconds):
 Column 1: cycles (5146 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 130 (79 bytes) 

            0x00007ff520cdd4bc: mov    r9,QWORD PTR [rsp+0x48]
            0x00007ff520cdd4c1: movzx  r11d,BYTE PTR [r9+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007ff520cdd5ca
            0x00007ff520cdd4c9: test   r11d,r11d
            0x00007ff520cdd4cc: jne    0x00007ff520cdd576  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
            0x00007ff520cdd4d2: mov    ebp,0x1
            0x00007ff520cdd4d7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@38 (line 198)
  0.06%  ↗  0x00007ff520cdd4e0: mov    r10,QWORD PTR [rsp+0x50]
 10.26%  │  0x00007ff520cdd4e5: mov    r11d,DWORD PTR [r10+0xc]
  0.04%  │  0x00007ff520cdd4e9: movabs r10,0x71b85cee0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85cee0} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$MonomorphicKtState&apos;)}
         │  0x00007ff520cdd4f3: mov    r8d,DWORD PTR [r10+0x74]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@9 (line 54)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
         │  0x00007ff520cdd4f7: test   r11d,r11d
         │  0x00007ff520cdd4fa: je     0x00007ff520cdd566  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
 10.55%  │  0x00007ff520cdd4fc: mov    QWORD PTR [rsp+0x48],r9
         │  0x00007ff520cdd501: mov    edx,r8d
  0.02%  │  0x00007ff520cdd504: shl    edx,0x4
         │  0x00007ff520cdd507: add    edx,r8d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
 10.53%  │  0x00007ff520cdd50a: mov    rsi,QWORD PTR [rsp]
         │  0x00007ff520cdd50e: nop
  0.08%  │  0x00007ff520cdd50f: call   0x00007ff520c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
 10.96%  │  0x00007ff520cdd514: mov    r9,QWORD PTR [rsp+0x48]
  0.02%  │  0x00007ff520cdd519: movzx  r10d,BYTE PTR [r9+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
  0.06%  │  0x00007ff520cdd521: mov    r11,QWORD PTR [r15+0x108]
 10.61%  │  0x00007ff520cdd528: add    rbp,0x1            ; ImmutableOopMap{r9=Oop [64]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
         │  0x00007ff520cdd52c: test   DWORD PTR [r11],eax  ;   {poll}
  0.06%  │  0x00007ff520cdd52f: test   r10d,r10d
         ╰  0x00007ff520cdd532: je     0x00007ff520cdd4e0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@38 (line 198)
            0x00007ff520cdd534: movabs r10,0x7ff532f3da00
            0x00007ff520cdd53e: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@39 (line 198)
            0x00007ff520cdd541: mov    r10,QWORD PTR [rsp+0x40]
            0x00007ff520cdd546: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@54 (line 200)
            0x00007ff520cdd54a: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 53.25%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007ff520ce2520: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007ff520ce2524: movabs r12,0x800000000
            0x00007ff520ce252e: add    r10,r12
            0x00007ff520ce2531: xor    r12,r12
            0x00007ff520ce2534: cmp    rax,r10
            0x00007ff520ce2537: jne    0x00007ff520c68c80  ;   {runtime_call ic_miss_stub}
            0x00007ff520ce253d: data16 xchg ax,ax
          [Verified Entry Point]
 10.42%     0x00007ff520ce2540: mov    DWORD PTR [rsp-0x14000],eax
  0.02%     0x00007ff520ce2547: push   rbp
  0.12%     0x00007ff520ce2548: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
 10.77%     0x00007ff520ce254c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
            0x00007ff520ce2553: mov    r8d,edx
  0.08%     0x00007ff520ce2556: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
 10.03%     0x00007ff520ce255d: mov    r9d,edx
            0x00007ff520ce2560: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.12%     0x00007ff520ce2563: cmp    r9d,r8d
         ╭  0x00007ff520ce2566: je     0x00007ff520ce2578  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.16%  │  0x00007ff520ce2568: add    rsp,0x20
 11.10%  │  0x00007ff520ce256c: pop    rbp
  0.04%  │  0x00007ff520ce256d: mov    r10,QWORD PTR [r15+0x108]
  0.04%  │  0x00007ff520ce2574: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.21%  │  0x00007ff520ce2577: ret    
         ↘  0x00007ff520ce2578: mov    rbp,rsi
            0x00007ff520ce257b: mov    DWORD PTR [rsp],edx
            0x00007ff520ce257e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007ff520ce2583: mov    DWORD PTR [rsp+0x8],r8d
            0x00007ff520ce2588: mov    esi,0xffffff4d
            0x00007ff520ce258d: xchg   ax,ax
            0x00007ff520ce258f: call   0x00007ff520c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 43.08%  <total for region 2>

....[Hottest Regions]...............................................................................
 53.25%            c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 130 (79 bytes) 
 43.08%            c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 
  2.91%        kernel  [unknown] (6 bytes) 
  0.04%        kernel  [unknown] (28 bytes) 
  0.04%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%   interpreter  invoke return entry points  (0 bytes) 
  0.02%   interpreter  ireturn  172 ireturn  (0 bytes) 
  0.02%   interpreter  fast_igetfield  208 fast_igetfield  (0 bytes) 
  0.37%  <...other 19 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 53.25%            c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 130 
 43.08%            c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  3.23%        kernel  [unknown] 
  0.02%     libjvm.so  _ZN12CounterDecay9do_methodEP6Method 
  0.02%   interpreter  invoke return entry points  
  0.02%     libjvm.so  _ZN14AccessInternal19PostRuntimeDispatchIN12G1BarrierSet13AccessBarrierILm802934ES1_EELNS_11BarrierTypeE1ELm802934EE18oop_access_barrierEP7oopDesclS7_ 
  0.02%     libjvm.so  _ZNK9ScopeDesc6senderEv 
  0.02%     libjvm.so  _ZN8LoadNode5IdealEP8PhaseGVNb 
  0.02%     libjvm.so  _ZN12outputStream5printEPKcz 
  0.02%     libjvm.so  JVM_CurrentThread 
  0.02%  libc-2.28.so  __memmove_sse2_unaligned_erms 
  0.02%   interpreter  fast_igetfield  208 fast_igetfield  
  0.02%  libc-2.28.so  _IO_str_init_static_internal 
  0.02%     libjvm.so  _ZN8IndexSetC2EPS_ 
  0.02%     libjvm.so  _ZN4UTF819quoted_ascii_lengthEPKci 
  0.02%     libjvm.so  _ZN7Matcher5xformEP4Nodei 
  0.02%     libjvm.so  _ZN12outputStream7move_toEiii 
  0.02%     libjvm.so  _ZN14TypeArrayKlass10copy_arrayEP12arrayOopDesciS1_iiP6Thread 
  0.02%   interpreter  ireturn  172 ireturn  
  0.02%     libjvm.so  _ZN8IndexSet9lrg_unionEjjjPK8PhaseIFGRK7RegMask 
  0.10%  <...other 5 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.33%            c2
  3.23%        kernel
  0.33%     libjvm.so
  0.06%   interpreter
  0.04%  libc-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49534 total address lines.
Perf output processed (skipped 6.214 seconds):
 Column 1: cycles (5181 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 130 (79 bytes) 

            0x00007f674ccdd4bc: mov    r9,QWORD PTR [rsp+0x48]
            0x00007f674ccdd4c1: movzx  r11d,BYTE PTR [r9+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f674ccdd5ca
            0x00007f674ccdd4c9: test   r11d,r11d
            0x00007f674ccdd4cc: jne    0x00007f674ccdd576  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
            0x00007f674ccdd4d2: mov    ebp,0x1
            0x00007f674ccdd4d7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@38 (line 198)
  0.02%  ↗  0x00007f674ccdd4e0: mov    r10,QWORD PTR [rsp+0x50]
  8.92%  │  0x00007f674ccdd4e5: mov    r11d,DWORD PTR [r10+0xc]
         │  0x00007f674ccdd4e9: movabs r10,0x71b85cee0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85cee0} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$MonomorphicKtState&apos;)}
  0.06%  │  0x00007f674ccdd4f3: mov    r8d,DWORD PTR [r10+0x74]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@9 (line 54)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
  0.02%  │  0x00007f674ccdd4f7: test   r11d,r11d
         │  0x00007f674ccdd4fa: je     0x00007f674ccdd566  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
 11.45%  │  0x00007f674ccdd4fc: mov    QWORD PTR [rsp+0x48],r9
         │  0x00007f674ccdd501: mov    edx,r8d
  0.08%  │  0x00007f674ccdd504: shl    edx,0x4
  0.02%  │  0x00007f674ccdd507: add    edx,r8d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
 10.17%  │  0x00007f674ccdd50a: mov    rsi,QWORD PTR [rsp]
         │  0x00007f674ccdd50e: nop
  0.02%  │  0x00007f674ccdd50f: call   0x00007f674cc68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
 11.08%  │  0x00007f674ccdd514: mov    r9,QWORD PTR [rsp+0x48]
  0.04%  │  0x00007f674ccdd519: movzx  r10d,BYTE PTR [r9+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
         │  0x00007f674ccdd521: mov    r11,QWORD PTR [r15+0x108]
 10.46%  │  0x00007f674ccdd528: add    rbp,0x1            ; ImmutableOopMap{r9=Oop [64]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
         │  0x00007f674ccdd52c: test   DWORD PTR [r11],eax  ;   {poll}
  0.08%  │  0x00007f674ccdd52f: test   r10d,r10d
         ╰  0x00007f674ccdd532: je     0x00007f674ccdd4e0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@38 (line 198)
            0x00007f674ccdd534: movabs r10,0x7f675da8ea00
            0x00007f674ccdd53e: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@39 (line 198)
            0x00007f674ccdd541: mov    r10,QWORD PTR [rsp+0x40]
            0x00007f674ccdd546: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@54 (line 200)
            0x00007f674ccdd54a: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 52.40%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f674cce2520: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f674cce2524: movabs r12,0x800000000
            0x00007f674cce252e: add    r10,r12
            0x00007f674cce2531: xor    r12,r12
            0x00007f674cce2534: cmp    rax,r10
            0x00007f674cce2537: jne    0x00007f674cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007f674cce253d: data16 xchg ax,ax
          [Verified Entry Point]
 10.35%     0x00007f674cce2540: mov    DWORD PTR [rsp-0x14000],eax
  0.02%     0x00007f674cce2547: push   rbp
  0.12%     0x00007f674cce2548: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
 10.08%     0x00007f674cce254c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.06%     0x00007f674cce2553: mov    r8d,edx
  0.08%     0x00007f674cce2556: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
 11.41%     0x00007f674cce255d: mov    r9d,edx
            0x00007f674cce2560: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.04%     0x00007f674cce2563: cmp    r9d,r8d
         ╭  0x00007f674cce2566: je     0x00007f674cce2578  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.08%  │  0x00007f674cce2568: add    rsp,0x20
 10.87%  │  0x00007f674cce256c: pop    rbp
  0.04%  │  0x00007f674cce256d: mov    r10,QWORD PTR [r15+0x108]
  0.12%  │  0x00007f674cce2574: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.14%  │  0x00007f674cce2577: ret    
         ↘  0x00007f674cce2578: mov    rbp,rsi
            0x00007f674cce257b: mov    DWORD PTR [rsp],edx
            0x00007f674cce257e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f674cce2583: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f674cce2588: mov    esi,0xffffff4d
            0x00007f674cce258d: xchg   ax,ax
            0x00007f674cce258f: call   0x00007f674cc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 43.37%  <total for region 2>

....[Hottest Regions]...............................................................................
 52.40%              c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 130 (79 bytes) 
 43.37%              c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 
  3.13%          kernel  [unknown] (6 bytes) 
  0.06%          kernel  [unknown] (28 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (31 bytes) 
  0.04%          kernel  [unknown] (7 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%     interpreter  method entry point (kind = zerolocals)  (8 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.56%  <...other 29 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 52.40%              c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 130 
 43.37%              c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  3.69%          kernel  [unknown] 
  0.06%     interpreter  method entry point (kind = zerolocals)  
  0.04%     interpreter  invoke return entry points  
  0.02%     interpreter  iconst_0  3 iconst_0  
  0.02%       libjvm.so  _ZN7RegMask13smear_to_setsEi 
  0.02%       libjvm.so  _ZN11ConstMethod8allocateEP15ClassLoaderDataiP16InlineTableSizesNS_10MethodTypeEP6Thread 
  0.02%  hsdis-amd64.so  putop 
  0.02%       libjvm.so  _ZN14PhaseIdealLoop20split_if_with_blocksER9VectorSetR10Node_Stackb 
  0.02%       libjvm.so  _ZNK35loadBarrierWeakSlowRegXmmAndYmmNode11out_RegMaskEv 
  0.02%     interpreter  ifeq  153 ifeq  
  0.02%       libjvm.so  _ZN14PhaseIdealLoop10DominatorsEv 
  0.02%     interpreter  invokeinterface  185 invokeinterface  
  0.02%       libjvm.so  _ZN7Compile19FillExceptionTablesEjPjS0_P5Label 
  0.02%     interpreter  aload_1  43 aload_1  
  0.02%     interpreter  fast_aldc  230 fast_aldc  
  0.02%       libjvm.so  _ZN7Monitor28lock_without_safepoint_checkEv 
  0.02%       libjvm.so  _ZN4NodeC1EPS_S0_S0_ 
  0.02%     interpreter  i2b  145 i2b  
  0.14%  <...other 7 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.77%              c2
  3.69%          kernel
  0.27%       libjvm.so
  0.21%     interpreter
  0.02%    libc-2.28.so
  0.02%  hsdis-amd64.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49534 total address lines.
Perf output processed (skipped 6.266 seconds):
 Column 1: cycles (5178 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 130 (79 bytes) 

            0x00007f1b84cdd4bc: mov    r9,QWORD PTR [rsp+0x48]
            0x00007f1b84cdd4c1: movzx  r11d,BYTE PTR [r9+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f1b84cdd5ca
            0x00007f1b84cdd4c9: test   r11d,r11d
            0x00007f1b84cdd4cc: jne    0x00007f1b84cdd576  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
            0x00007f1b84cdd4d2: mov    ebp,0x1
            0x00007f1b84cdd4d7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@38 (line 198)
  0.15%  ↗  0x00007f1b84cdd4e0: mov    r10,QWORD PTR [rsp+0x50]
 10.43%  │  0x00007f1b84cdd4e5: mov    r11d,DWORD PTR [r10+0xc]
  0.06%  │  0x00007f1b84cdd4e9: movabs r10,0x71b85cee0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85cee0} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$MonomorphicKtState&apos;)}
  0.02%  │  0x00007f1b84cdd4f3: mov    r8d,DWORD PTR [r10+0x74]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@9 (line 54)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
  0.08%  │  0x00007f1b84cdd4f7: test   r11d,r11d
         │  0x00007f1b84cdd4fa: je     0x00007f1b84cdd566  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
 11.45%  │  0x00007f1b84cdd4fc: mov    QWORD PTR [rsp+0x48],r9
         │  0x00007f1b84cdd501: mov    edx,r8d
  0.02%  │  0x00007f1b84cdd504: shl    edx,0x4
  0.21%  │  0x00007f1b84cdd507: add    edx,r8d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@18 (line 162)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
 10.70%  │  0x00007f1b84cdd50a: mov    rsi,QWORD PTR [rsp]
         │  0x00007f1b84cdd50e: nop
         │  0x00007f1b84cdd50f: call   0x00007f1b84c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
 10.29%  │  0x00007f1b84cdd514: mov    r9,QWORD PTR [rsp+0x48]
  0.02%  │  0x00007f1b84cdd519: movzx  r10d,BYTE PTR [r9+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
  0.10%  │  0x00007f1b84cdd521: mov    r11,QWORD PTR [r15+0x108]
 10.78%  │  0x00007f1b84cdd528: add    rbp,0x1            ; ImmutableOopMap{r9=Oop [64]=Oop [80]=Oop [88]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
  0.02%  │  0x00007f1b84cdd52c: test   DWORD PTR [r11],eax  ;   {poll}
  0.04%  │  0x00007f1b84cdd52f: test   r10d,r10d
         ╰  0x00007f1b84cdd532: je     0x00007f1b84cdd4e0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@38 (line 198)
            0x00007f1b84cdd534: movabs r10,0x7f1b9853fa00
            0x00007f1b84cdd53e: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@39 (line 198)
            0x00007f1b84cdd541: mov    r10,QWORD PTR [rsp+0x40]
            0x00007f1b84cdd546: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@54 (line 200)
            0x00007f1b84cdd54a: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 54.36%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f1b84ce2520: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f1b84ce2524: movabs r12,0x800000000
            0x00007f1b84ce252e: add    r10,r12
            0x00007f1b84ce2531: xor    r12,r12
            0x00007f1b84ce2534: cmp    rax,r10
            0x00007f1b84ce2537: jne    0x00007f1b84c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f1b84ce253d: data16 xchg ax,ax
          [Verified Entry Point]
 10.18%     0x00007f1b84ce2540: mov    DWORD PTR [rsp-0x14000],eax
  0.06%     0x00007f1b84ce2547: push   rbp
  0.15%     0x00007f1b84ce2548: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
 10.00%     0x00007f1b84ce254c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.04%     0x00007f1b84ce2553: mov    r8d,edx
  0.12%     0x00007f1b84ce2556: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
 10.72%     0x00007f1b84ce255d: mov    r9d,edx
            0x00007f1b84ce2560: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.02%     0x00007f1b84ce2563: cmp    r9d,r8d
         ╭  0x00007f1b84ce2566: je     0x00007f1b84ce2578  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.21%  │  0x00007f1b84ce2568: add    rsp,0x20
  9.75%  │  0x00007f1b84ce256c: pop    rbp
         │  0x00007f1b84ce256d: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007f1b84ce2574: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.19%  │  0x00007f1b84ce2577: ret    
         ↘  0x00007f1b84ce2578: mov    rbp,rsi
            0x00007f1b84ce257b: mov    DWORD PTR [rsp],edx
            0x00007f1b84ce257e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f1b84ce2583: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f1b84ce2588: mov    esi,0xffffff4d
            0x00007f1b84ce258d: xchg   ax,ax
            0x00007f1b84ce258f: call   0x00007f1b84c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 41.44%  <total for region 2>

....[Hottest Regions]...............................................................................
 54.36%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 130 (79 bytes) 
 41.44%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 
  3.11%       kernel  [unknown] (6 bytes) 
  0.08%       kernel  [unknown] (1 bytes) 
  0.06%       kernel  [unknown] (0 bytes) 
  0.06%       kernel  [unknown] (0 bytes) 
  0.06%  interpreter  method entry point (kind = zerolocals)  (4 bytes) 
  0.06%  interpreter  method entry point (kind = zerolocals)  (4 bytes) 
  0.04%       kernel  [unknown] (0 bytes) 
  0.04%       kernel  [unknown] (12 bytes) 
  0.04%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.46%  <...other 24 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 54.36%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 130 
 41.44%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
  3.79%       kernel  [unknown] 
  0.12%  interpreter  method entry point (kind = zerolocals)  
  0.02%    libjvm.so  _ZN12PhaseChaitin19interfere_with_liveEjP8IndexSet 
  0.02%    libjvm.so  _ZN12PhaseChaitin16gather_lrg_masksEb 
  0.02%    libjvm.so  _ZN12PhaseIterGVN13transform_oldEP4Node 
  0.02%    libjvm.so  _ZN16BacktraceBuilder4pushEP6MethodiP6Thread 
  0.02%    libjvm.so  _ZN7nmethod19fix_oop_relocationsEPhS0_b 
  0.02%    libjvm.so  SpinPause 
  0.02%    libjvm.so  _ZN8PhaseIFG24Compute_Effective_DegreeEv 
  0.02%    libjvm.so  _ZNK10TypeAryPtr4hashEv 
  0.02%    libjvm.so  _ZN14PhaseIdealLoop16build_loop_earlyER9VectorSetR9Node_ListR10Node_Stack 
  0.02%  interpreter  fast_lgetfield  209 fast_lgetfield  
  0.02%    libjvm.so  _ZN12LinkResolver19resolve_static_callER8CallInfoRK8LinkInfobP6Thread 
  0.02%    libjvm.so  _ZN8PhaseCFG10sched_callEP5BlockjR9Node_ListR13GrowableArrayIiEP12MachCallNodeR9VectorSet 
  0.02%    libjvm.so  _ZN14PhaseIdealLoop10DominatorsEv 
  0.02%    libjvm.so  _ZN14PhaseTransformC1EN5Phase11PhaseNumberE 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.81%           c2
  3.79%       kernel
  0.25%    libjvm.so
  0.14%  interpreter
....................................................................................................
 99.98%  <totals>



# Run complete. Total time: 00:04:36

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                           (param)  Mode  Cnt   Score   Error  Units
MegamorphicCallJavaBenchmark.BimorphicJava                3  avgt   15   6.832 ± 0.549  ns/op
MegamorphicCallJavaBenchmark.BimorphicJava:·asm           3  avgt          NaN            ---
MegamorphicCallJavaBenchmark.Megamorphic3Java             3  avgt   15  48.387 ± 2.237  ns/op
MegamorphicCallJavaBenchmark.Megamorphic3Java:·asm        3  avgt          NaN            ---
MegamorphicCallJavaBenchmark.Megamorphic4Java             3  avgt   15  64.901 ± 2.784  ns/op
MegamorphicCallJavaBenchmark.Megamorphic4Java:·asm        3  avgt          NaN            ---
MegamorphicCallJavaBenchmark.MonomorphicJava              3  avgt   15   4.445 ± 0.285  ns/op
MegamorphicCallJavaBenchmark.MonomorphicJava:·asm         3  avgt          NaN            ---
MegamorphicCallKtBenchmark.BimorphicKt                    3  avgt   15   3.366 ± 0.204  ns/op
MegamorphicCallKtBenchmark.BimorphicKt:·asm               3  avgt          NaN            ---
MegamorphicCallKtBenchmark.Megamorphic3Kt                 3  avgt   15   4.078 ± 0.270  ns/op
MegamorphicCallKtBenchmark.Megamorphic3Kt:·asm            3  avgt          NaN            ---
MegamorphicCallKtBenchmark.Megamorphic4Kt                 3  avgt   15   4.645 ± 0.066  ns/op
MegamorphicCallKtBenchmark.Megamorphic4Kt:·asm            3  avgt          NaN            ---
MegamorphicCallKtBenchmark.MonomorphicKt                  3  avgt   15   2.692 ± 0.083  ns/op
MegamorphicCallKtBenchmark.MonomorphicKt:·asm             3  avgt          NaN            ---
