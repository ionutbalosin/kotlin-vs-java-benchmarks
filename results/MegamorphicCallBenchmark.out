# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallJavaBenchmark.Megamorphic3Java
# Parameters: (param = 3)

# Run progress: 0.00% complete, ETA 00:02:00
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 8.601 ns/op
# Warmup Iteration   2: 8.503 ns/op
# Warmup Iteration   3: 8.484 ns/op
# Warmup Iteration   4: 8.531 ns/op
# Warmup Iteration   5: 8.541 ns/op
Iteration   1: 8.596 ns/op
Iteration   2: 8.575 ns/op
Iteration   3: 8.595 ns/op
Iteration   4: 8.604 ns/op
Iteration   5: 8.608 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 8.33% complete, ETA 00:02:09
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 8.843 ns/op
# Warmup Iteration   2: 8.655 ns/op
# Warmup Iteration   3: 8.622 ns/op
# Warmup Iteration   4: 8.586 ns/op
# Warmup Iteration   5: 8.589 ns/op
Iteration   1: 8.605 ns/op
Iteration   2: 8.583 ns/op
Iteration   3: 8.602 ns/op
Iteration   4: 8.638 ns/op
Iteration   5: 8.687 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 16.67% complete, ETA 00:01:56
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 8.114 ns/op
# Warmup Iteration   2: 7.969 ns/op
# Warmup Iteration   3: 7.917 ns/op
# Warmup Iteration   4: 7.991 ns/op
# Warmup Iteration   5: 9.061 ns/op
Iteration   1: 7.981 ns/op
Iteration   2: 7.967 ns/op
Iteration   3: 7.963 ns/op
Iteration   4: 7.966 ns/op
Iteration   5: 7.972 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallJavaBenchmark.Megamorphic3Java":
  8.396 ±(99.9%) 0.335 ns/op [Average]
  (min, avg, max) = (7.963, 8.396, 8.687), stdev = 0.313
  CI (99.9%): [8.062, 8.731] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallJavaBenchmark.Megamorphic3Java:·asm":
PrintAssembly processed: 49722 total address lines.
Perf output processed (skipped 6.216 seconds):
 Column 1: cycles (5161 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 (201 bytes) 

                                                          ;   {optimized virtual_call}
            0x00007f9a48ce6668: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f9a48ce666d: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f9a48ce67f2
            0x00007f9a48ce6675: test   r11d,r11d
            0x00007f9a48ce6678: jne    0x00007f9a48ce6787  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
            0x00007f9a48ce667e: mov    ebp,0x1            ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
  0.64%  ↗  0x00007f9a48ce6683: mov    r10,QWORD PTR [rsp+0x50]
  0.83%  │  0x00007f9a48ce6688: mov    r11d,DWORD PTR [r10+0xc]
  0.64%  │  0x00007f9a48ce668c: movabs r10,0x71b857b90    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857b90} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
  1.34%  │  0x00007f9a48ce6696: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@4 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.68%  │  0x00007f9a48ce669a: mov    rsi,r11
  0.78%  │  0x00007f9a48ce669d: shl    rsi,0x3
  0.47%  │  0x00007f9a48ce66a1: movabs rax,0xffffffffffffffff
  1.43%  │  0x00007f9a48ce66ab: call   0x00007f9a48c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@7 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  1.45%  │  0x00007f9a48ce66b0: mov    QWORD PTR [rsp+0x10],rbp
  1.30%  │  0x00007f9a48ce66b5: mov    DWORD PTR [rsp+0x58],eax
  0.66%  │  0x00007f9a48ce66b9: mov    r10,QWORD PTR [rsp+0x50]
  1.63%  │  0x00007f9a48ce66be: mov    r10d,DWORD PTR [r10+0x10]
  0.91%  │  0x00007f9a48ce66c2: movabs r11,0x71b857b90    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857b90} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
  0.41%  │  0x00007f9a48ce66cc: mov    edx,DWORD PTR [r11+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@14 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.76%  │  0x00007f9a48ce66d0: mov    rsi,r10
  1.22%  │  0x00007f9a48ce66d3: shl    rsi,0x3            ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@11 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.89%  │  0x00007f9a48ce66d7: xchg   ax,ax
  0.27%  │  0x00007f9a48ce66d9: movabs rax,0xffffffffffffffff
  0.72%  │  0x00007f9a48ce66e3: call   0x00007f9a48c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@17 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  1.10%  │  0x00007f9a48ce66e8: mov    ebp,eax
  0.79%  │  0x00007f9a48ce66ea: add    ebp,DWORD PTR [rsp+0x58]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@20 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.32%  │  0x00007f9a48ce66ee: movabs r10,0x71b857b90    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857b90} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
  1.32%  │  0x00007f9a48ce66f8: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@25 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.74%  │  0x00007f9a48ce66fc: mov    r10,QWORD PTR [rsp+0x50]
  0.68%  │  0x00007f9a48ce6701: mov    r11d,DWORD PTR [r10+0x14]
  0.83%  │  0x00007f9a48ce6705: mov    rsi,r11
  1.10%  │  0x00007f9a48ce6708: shl    rsi,0x3            ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@22 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.79%  │  0x00007f9a48ce670c: nop
  0.72%  │  0x00007f9a48ce670d: movabs rax,0xffffffffffffffff
  0.58%  │  0x00007f9a48ce6717: call   0x00007f9a48c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@28 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  0.97%  │  0x00007f9a48ce671c: mov    edx,eax
  0.81%  │  0x00007f9a48ce671e: add    edx,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@31 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.99%  │  0x00007f9a48ce6720: mov    rsi,QWORD PTR [rsp]
  1.28%  │  0x00007f9a48ce6724: data16 xchg ax,ax
  0.68%  │  0x00007f9a48ce6727: call   0x00007f9a48c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  0.54%  │  0x00007f9a48ce672c: mov    r10,QWORD PTR [rsp+0x48]
  1.24%  │  0x00007f9a48ce6731: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  1.57%  │  0x00007f9a48ce6739: mov    r11,QWORD PTR [r15+0x108]
  0.45%  │  0x00007f9a48ce6740: mov    rbp,QWORD PTR [rsp+0x10]
  1.34%  │  0x00007f9a48ce6745: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  0.41%  │  0x00007f9a48ce6749: test   DWORD PTR [r11],eax  ;   {poll}
  1.53%  │  0x00007f9a48ce674c: test   r10d,r10d
         ╰  0x00007f9a48ce674f: je     0x00007f9a48ce6683  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
            0x00007f9a48ce6755: movabs r10,0x7f9a5bcb0a00
            0x00007f9a48ce675f: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@39 (line 198)
            0x00007f9a48ce6762: mov    r10,QWORD PTR [rsp+0x40]
            0x00007f9a48ce6767: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@54 (line 200)
            0x00007f9a48ce676b: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 38.79%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 126 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f9a48ce1920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f9a48ce1924: movabs r12,0x800000000
            0x00007f9a48ce192e: add    r10,r12
            0x00007f9a48ce1931: xor    r12,r12
            0x00007f9a48ce1934: cmp    rax,r10
            0x00007f9a48ce1937: jne    0x00007f9a48c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f9a48ce193d: data16 xchg ax,ax
          [Verified Entry Point]
  1.96%     0x00007f9a48ce1940: mov    DWORD PTR [rsp-0x14000],eax
  1.57%     0x00007f9a48ce1947: push   rbp
  1.34%     0x00007f9a48ce1948: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  1.32%     0x00007f9a48ce194c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.54%     0x00007f9a48ce1953: mov    r8d,edx
  1.28%     0x00007f9a48ce1956: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.54%     0x00007f9a48ce195d: mov    r9d,edx
  1.12%     0x00007f9a48ce1960: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.64%     0x00007f9a48ce1963: cmp    r9d,r8d
         ╭  0x00007f9a48ce1966: je     0x00007f9a48ce1978  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  1.71%  │  0x00007f9a48ce1968: add    rsp,0x20
  0.43%  │  0x00007f9a48ce196c: pop    rbp
  1.05%  │  0x00007f9a48ce196d: mov    r10,QWORD PTR [r15+0x108]
  0.45%  │  0x00007f9a48ce1974: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.40%  │  0x00007f9a48ce1977: ret    
         ↘  0x00007f9a48ce1978: mov    rbp,rsi
            0x00007f9a48ce197b: mov    DWORD PTR [rsp],edx
            0x00007f9a48ce197e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f9a48ce1983: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f9a48ce1988: mov    esi,0xffffff4d
            0x00007f9a48ce198d: xchg   ax,ax
            0x00007f9a48ce198f: call   0x00007f9a48c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 15.33%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (66 bytes) 

          scopes pcs     [0x00007f9a48cddc38,0x00007f9a48cddc78] = 64
          dependencies   [0x00007f9a48cddc78,0x00007f9a48cddc80] = 8
         ----------------------------------------------------------------------
         org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1.compute(I)I  [0x00007f9a48cddba0, 0x00007f9a48cddc18]  120 bytes
         [Entry Point]
         [Constants]
           # {method} {0x00007f9a035fe930} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;
           # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;
           # parm0:    rdx       = int
           #           [sp+0x20]  (sp of caller)
  1.34%    0x00007f9a48cddba0: mov    r10d,DWORD PTR [rsi+0x8]
  1.10%    0x00007f9a48cddba4: movabs r12,0x800000000
  1.12%    0x00007f9a48cddbae: add    r10,r12
  1.09%    0x00007f9a48cddbb1: xor    r12,r12
  0.64%    0x00007f9a48cddbb4: cmp    rax,r10
           0x00007f9a48cddbb7: jne    0x00007f9a48c68c80  ;   {runtime_call ic_miss_stub}
  1.45%    0x00007f9a48cddbbd: data16 xchg ax,ax
         [Verified Entry Point]
  0.95%    0x00007f9a48cddbc0: sub    rsp,0x18
  0.97%    0x00007f9a48cddbc7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@-1 (line 90)
  1.45%    0x00007f9a48cddbcc: mov    eax,edx
  0.70%    0x00007f9a48cddbce: shl    eax,0x4
  0.19%    0x00007f9a48cddbd1: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 90)
  0.70%    0x00007f9a48cddbd3: add    rsp,0x10
  1.49%    0x00007f9a48cddbd7: pop    rbp
  0.70%    0x00007f9a48cddbd8: mov    r10,QWORD PTR [r15+0x108]
  0.33%    0x00007f9a48cddbdf: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.72%    0x00007f9a48cddbe2: ret    
           0x00007f9a48cddbe3: hlt    
           0x00007f9a48cddbe4: hlt    
           0x00007f9a48cddbe5: hlt    
           0x00007f9a48cddbe6: hlt    
           0x00007f9a48cddbe7: hlt    
           0x00007f9a48cddbe8: hlt    
           0x00007f9a48cddbe9: hlt    
           0x00007f9a48cddbea: hlt    
           0x00007f9a48cddbeb: hlt    
           0x00007f9a48cddbec: hlt    
....................................................................................................
 14.94%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (62 bytes) 

           scopes pcs     [0x00007f9a48cdd998,0x00007f9a48cdd9d8] = 64
           dependencies   [0x00007f9a48cdd9d8,0x00007f9a48cdd9e0] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2.compute(I)I  [0x00007f9a48cdd920, 0x00007f9a48cdd978]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007f9a035fec38} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  2.21%     0x00007f9a48cdd920: mov    r10d,DWORD PTR [rsi+0x8]
  0.62%     0x00007f9a48cdd924: movabs r12,0x800000000
  0.87%     0x00007f9a48cdd92e: add    r10,r12
  1.76%     0x00007f9a48cdd931: xor    r12,r12
  0.66%     0x00007f9a48cdd934: cmp    rax,r10
            0x00007f9a48cdd937: jne    0x00007f9a48c68c80  ;   {runtime_call ic_miss_stub}
  0.83%     0x00007f9a48cdd93d: data16 xchg ax,ax
          [Verified Entry Point]
  0.72%     0x00007f9a48cdd940: sub    rsp,0x18
  1.80%     0x00007f9a48cdd947: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@-1 (line 96)
  0.72%     0x00007f9a48cdd94c: imul   eax,edx,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@3 (line 96)
  0.39%     0x00007f9a48cdd94f: add    rsp,0x10
  1.07%     0x00007f9a48cdd953: pop    rbp
  0.76%     0x00007f9a48cdd954: mov    r10,QWORD PTR [r15+0x108]
  1.07%     0x00007f9a48cdd95b: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.54%     0x00007f9a48cdd95e: ret    
            0x00007f9a48cdd95f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f9a48cdd960: jmp    0x00007f9a48c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f9a48cdd965: call   0x00007f9a48cdd96a
         ↘  0x00007f9a48cdd96a: sub    QWORD PTR [rsp],0x5
            0x00007f9a48cdd96f: jmp    0x00007f9a48c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007f9a48cdd974: hlt    
            0x00007f9a48cdd975: hlt    
....................................................................................................
 14.01%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (62 bytes) 

           scopes pcs     [0x00007f9a48cdd718,0x00007f9a48cdd758] = 64
           dependencies   [0x00007f9a48cdd758,0x00007f9a48cdd760] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3.compute(I)I  [0x00007f9a48cdd6a0, 0x00007f9a48cdd6f8]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007f9a035fef40} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  1.86%     0x00007f9a48cdd6a0: mov    r10d,DWORD PTR [rsi+0x8]
  0.91%     0x00007f9a48cdd6a4: movabs r12,0x800000000
  0.52%     0x00007f9a48cdd6ae: add    r10,r12
  1.40%     0x00007f9a48cdd6b1: xor    r12,r12
  0.58%     0x00007f9a48cdd6b4: cmp    rax,r10
            0x00007f9a48cdd6b7: jne    0x00007f9a48c68c80  ;   {runtime_call ic_miss_stub}
  1.14%     0x00007f9a48cdd6bd: data16 xchg ax,ax
          [Verified Entry Point]
  0.52%     0x00007f9a48cdd6c0: sub    rsp,0x18
  1.24%     0x00007f9a48cdd6c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@-1 (line 102)
  1.30%     0x00007f9a48cdd6cc: imul   eax,edx,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@3 (line 102)
  0.37%     0x00007f9a48cdd6cf: add    rsp,0x10
  0.95%     0x00007f9a48cdd6d3: pop    rbp
  0.64%     0x00007f9a48cdd6d4: mov    r10,QWORD PTR [r15+0x108]
  1.09%     0x00007f9a48cdd6db: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.64%     0x00007f9a48cdd6de: ret    
            0x00007f9a48cdd6df: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f9a48cdd6e0: jmp    0x00007f9a48c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f9a48cdd6e5: call   0x00007f9a48cdd6ea
         ↘  0x00007f9a48cdd6ea: sub    QWORD PTR [rsp],0x5
            0x00007f9a48cdd6ef: jmp    0x00007f9a48c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007f9a48cdd6f4: hlt    
            0x00007f9a48cdd6f5: hlt    
....................................................................................................
 13.16%  <total for region 5>

....[Hottest Regions]...............................................................................
 38.79%              c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 (201 bytes) 
 15.33%              c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (55 bytes) 
 14.94%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (66 bytes) 
 14.01%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (62 bytes) 
 13.16%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (62 bytes) 
  2.85%          kernel  [unknown] (6 bytes) 
  0.06%       libjvm.so  _ZNK7RegMask4SizeEv (43 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.56%  <...other 29 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 38.79%              c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 
 15.33%              c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
 14.94%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 
 14.01%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 
 13.16%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 
  3.35%          kernel  [unknown] 
  0.06%       libjvm.so  _ZNK7RegMask4SizeEv 
  0.02%       libjvm.so  _ZNK11PCTableNode6pinnedEv 
  0.02%    libc-2.28.so  __memmove_avx_unaligned_erms 
  0.02%       libjvm.so  _ZN12PhaseChaitin19interfere_with_liveEjP8IndexSet 
  0.02%  hsdis-amd64.so  print_insn 
  0.02%       libjvm.so  _ZN8PhaseCCP7analyzeEv 
  0.02%     interpreter  method entry point (kind = zerolocals)  
  0.02%    libc-2.28.so  __strlen_avx2 
  0.02%       libjvm.so  _ZN14PhaseIdealLoop10DominatorsEv 
  0.02%       libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%       libjvm.so  _ZNK7TypeInt9singletonEv 
  0.02%     interpreter  fast_bgetfield  204 fast_bgetfield  
  0.02%    libc-2.28.so  vfprintf 
  0.02%       libjvm.so  _ZN16IndexSetIterator16advance_and_nextEv 
  0.10%  <...other 5 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.22%              c2
  3.35%          kernel
  0.27%       libjvm.so
  0.06%    libc-2.28.so
  0.06%     interpreter
  0.02%  hsdis-amd64.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49673 total address lines.
Perf output processed (skipped 6.219 seconds):
 Column 1: cycles (5080 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 130 (201 bytes) 

                                                          ;   {optimized virtual_call}
            0x00007f18c079f668: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f18c079f66d: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f18c079f7f2
            0x00007f18c079f675: test   r11d,r11d
            0x00007f18c079f678: jne    0x00007f18c079f787  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
            0x00007f18c079f67e: mov    ebp,0x1            ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
  0.69%  ↗  0x00007f18c079f683: mov    r10,QWORD PTR [rsp+0x50]
  0.81%  │  0x00007f18c079f688: mov    r11d,DWORD PTR [r10+0xc]
  0.61%  │  0x00007f18c079f68c: movabs r10,0x71b858448    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b858448} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
  1.36%  │  0x00007f18c079f696: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@4 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.47%  │  0x00007f18c079f69a: mov    rsi,r11
  0.71%  │  0x00007f18c079f69d: shl    rsi,0x3
  0.53%  │  0x00007f18c079f6a1: movabs rax,0xffffffffffffffff
  1.40%  │  0x00007f18c079f6ab: call   0x00007f18c0722180  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@7 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  1.50%  │  0x00007f18c079f6b0: mov    QWORD PTR [rsp+0x10],rbp
  1.26%  │  0x00007f18c079f6b5: mov    DWORD PTR [rsp+0x58],eax
  0.63%  │  0x00007f18c079f6b9: mov    r10,QWORD PTR [rsp+0x50]
  1.30%  │  0x00007f18c079f6be: mov    r10d,DWORD PTR [r10+0x10]
  0.75%  │  0x00007f18c079f6c2: movabs r11,0x71b858448    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b858448} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
  0.37%  │  0x00007f18c079f6cc: mov    edx,DWORD PTR [r11+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@14 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.79%  │  0x00007f18c079f6d0: mov    rsi,r10
  1.12%  │  0x00007f18c079f6d3: shl    rsi,0x3            ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@11 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.73%  │  0x00007f18c079f6d7: xchg   ax,ax
  0.47%  │  0x00007f18c079f6d9: movabs rax,0xffffffffffffffff
  0.96%  │  0x00007f18c079f6e3: call   0x00007f18c0722180  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@17 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  1.20%  │  0x00007f18c079f6e8: mov    ebp,eax
  0.67%  │  0x00007f18c079f6ea: add    ebp,DWORD PTR [rsp+0x58]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@20 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.42%  │  0x00007f18c079f6ee: movabs r10,0x71b858448    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b858448} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
  1.20%  │  0x00007f18c079f6f8: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@25 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.83%  │  0x00007f18c079f6fc: mov    r10,QWORD PTR [rsp+0x50]
  0.75%  │  0x00007f18c079f701: mov    r11d,DWORD PTR [r10+0x14]
  0.69%  │  0x00007f18c079f705: mov    rsi,r11
  1.22%  │  0x00007f18c079f708: shl    rsi,0x3            ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@22 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.73%  │  0x00007f18c079f70c: nop
  0.93%  │  0x00007f18c079f70d: movabs rax,0xffffffffffffffff
  0.75%  │  0x00007f18c079f717: call   0x00007f18c0722180  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@28 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  1.00%  │  0x00007f18c079f71c: mov    edx,eax
  0.69%  │  0x00007f18c079f71e: add    edx,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@31 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.40%  │  0x00007f18c079f720: mov    rsi,QWORD PTR [rsp]
  1.38%  │  0x00007f18c079f724: data16 xchg ax,ax
  0.45%  │  0x00007f18c079f727: call   0x00007f18c0721f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  0.47%  │  0x00007f18c079f72c: mov    r10,QWORD PTR [rsp+0x48]
  1.44%  │  0x00007f18c079f731: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  1.16%  │  0x00007f18c079f739: mov    r11,QWORD PTR [r15+0x108]
  0.87%  │  0x00007f18c079f740: mov    rbp,QWORD PTR [rsp+0x10]
  1.00%  │  0x00007f18c079f745: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  0.55%  │  0x00007f18c079f749: test   DWORD PTR [r11],eax  ;   {poll}
  1.26%  │  0x00007f18c079f74c: test   r10d,r10d
         ╰  0x00007f18c079f74f: je     0x00007f18c079f683  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
            0x00007f18c079f755: movabs r10,0x7f18c4e1ca00
            0x00007f18c079f75f: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@39 (line 198)
            0x00007f18c079f762: mov    r10,QWORD PTR [rsp+0x40]
            0x00007f18c079f767: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@54 (line 200)
            0x00007f18c079f76b: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 38.50%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (66 bytes) 

          scopes pcs     [0x00007f18c0796c38,0x00007f18c0796c78] = 64
          dependencies   [0x00007f18c0796c78,0x00007f18c0796c80] = 8
         ----------------------------------------------------------------------
         org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1.compute(I)I  [0x00007f18c0796ba0, 0x00007f18c0796c18]  120 bytes
         [Entry Point]
         [Constants]
           # {method} {0x00007f189c61e930} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;
           # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;
           # parm0:    rdx       = int
           #           [sp+0x20]  (sp of caller)
  1.65%    0x00007f18c0796ba0: mov    r10d,DWORD PTR [rsi+0x8]
  1.02%    0x00007f18c0796ba4: movabs r12,0x800000000
  1.46%    0x00007f18c0796bae: add    r10,r12
  1.20%    0x00007f18c0796bb1: xor    r12,r12
  0.75%    0x00007f18c0796bb4: cmp    rax,r10
           0x00007f18c0796bb7: jne    0x00007f18c0721c80  ;   {runtime_call ic_miss_stub}
  1.40%    0x00007f18c0796bbd: data16 xchg ax,ax
         [Verified Entry Point]
  0.94%    0x00007f18c0796bc0: sub    rsp,0x18
  0.85%    0x00007f18c0796bc7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@-1 (line 90)
  1.40%    0x00007f18c0796bcc: mov    eax,edx
  0.85%    0x00007f18c0796bce: shl    eax,0x4
  0.47%    0x00007f18c0796bd1: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 90)
  0.59%    0x00007f18c0796bd3: add    rsp,0x10
  1.40%    0x00007f18c0796bd7: pop    rbp
  0.89%    0x00007f18c0796bd8: mov    r10,QWORD PTR [r15+0x108]
  0.24%    0x00007f18c0796bdf: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.69%    0x00007f18c0796be2: ret    
           0x00007f18c0796be3: hlt    
           0x00007f18c0796be4: hlt    
           0x00007f18c0796be5: hlt    
           0x00007f18c0796be6: hlt    
           0x00007f18c0796be7: hlt    
           0x00007f18c0796be8: hlt    
           0x00007f18c0796be9: hlt    
           0x00007f18c0796bea: hlt    
           0x00007f18c0796beb: hlt    
           0x00007f18c0796bec: hlt    
....................................................................................................
 15.79%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (62 bytes) 

           scopes pcs     [0x00007f18c0796998,0x00007f18c07969d8] = 64
           dependencies   [0x00007f18c07969d8,0x00007f18c07969e0] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2.compute(I)I  [0x00007f18c0796920, 0x00007f18c0796978]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007f189c61ec38} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  2.32%     0x00007f18c0796920: mov    r10d,DWORD PTR [rsi+0x8]
  0.41%     0x00007f18c0796924: movabs r12,0x800000000
  0.93%     0x00007f18c079692e: add    r10,r12
  1.50%     0x00007f18c0796931: xor    r12,r12
  0.73%     0x00007f18c0796934: cmp    rax,r10
            0x00007f18c0796937: jne    0x00007f18c0721c80  ;   {runtime_call ic_miss_stub}
  0.63%     0x00007f18c079693d: data16 xchg ax,ax
          [Verified Entry Point]
  0.73%     0x00007f18c0796940: sub    rsp,0x18
  2.38%     0x00007f18c0796947: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@-1 (line 96)
  0.94%     0x00007f18c079694c: imul   eax,edx,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@3 (line 96)
  0.69%     0x00007f18c079694f: add    rsp,0x10
  1.22%     0x00007f18c0796953: pop    rbp
  1.02%     0x00007f18c0796954: mov    r10,QWORD PTR [r15+0x108]
  0.65%     0x00007f18c079695b: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.69%     0x00007f18c079695e: ret    
            0x00007f18c079695f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f18c0796960: jmp    0x00007f18c0758680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f18c0796965: call   0x00007f18c079696a
         ↘  0x00007f18c079696a: sub    QWORD PTR [rsp],0x5
            0x00007f18c079696f: jmp    0x00007f18c0723520  ;   {runtime_call DeoptimizationBlob}
            0x00007f18c0796974: hlt    
            0x00007f18c0796975: hlt    
....................................................................................................
 14.84%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (62 bytes) 

           scopes pcs     [0x00007f18c0796718,0x00007f18c0796758] = 64
           dependencies   [0x00007f18c0796758,0x00007f18c0796760] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3.compute(I)I  [0x00007f18c07966a0, 0x00007f18c07966f8]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007f189c61ef40} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  2.15%     0x00007f18c07966a0: mov    r10d,DWORD PTR [rsi+0x8]
  1.18%     0x00007f18c07966a4: movabs r12,0x800000000
  0.59%     0x00007f18c07966ae: add    r10,r12
  1.56%     0x00007f18c07966b1: xor    r12,r12
  0.65%     0x00007f18c07966b4: cmp    rax,r10
            0x00007f18c07966b7: jne    0x00007f18c0721c80  ;   {runtime_call ic_miss_stub}
  1.08%     0x00007f18c07966bd: data16 xchg ax,ax
          [Verified Entry Point]
  0.37%     0x00007f18c07966c0: sub    rsp,0x18
  1.46%     0x00007f18c07966c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@-1 (line 102)
  1.42%     0x00007f18c07966cc: imul   eax,edx,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@3 (line 102)
  0.49%     0x00007f18c07966cf: add    rsp,0x10
  1.02%     0x00007f18c07966d3: pop    rbp
  0.45%     0x00007f18c07966d4: mov    r10,QWORD PTR [r15+0x108]
  1.38%     0x00007f18c07966db: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.63%     0x00007f18c07966de: ret    
            0x00007f18c07966df: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f18c07966e0: jmp    0x00007f18c0758680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f18c07966e5: call   0x00007f18c07966ea
         ↘  0x00007f18c07966ea: sub    QWORD PTR [rsp],0x5
            0x00007f18c07966ef: jmp    0x00007f18c0723520  ;   {runtime_call DeoptimizationBlob}
            0x00007f18c07966f4: hlt    
            0x00007f18c07966f5: hlt    
....................................................................................................
 14.43%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 126 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f18c079a920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f18c079a924: movabs r12,0x800000000
            0x00007f18c079a92e: add    r10,r12
            0x00007f18c079a931: xor    r12,r12
            0x00007f18c079a934: cmp    rax,r10
            0x00007f18c079a937: jne    0x00007f18c0721c80  ;   {runtime_call ic_miss_stub}
            0x00007f18c079a93d: data16 xchg ax,ax
          [Verified Entry Point]
  1.48%     0x00007f18c079a940: mov    DWORD PTR [rsp-0x14000],eax
  1.32%     0x00007f18c079a947: push   rbp
  0.89%     0x00007f18c079a948: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  1.22%     0x00007f18c079a94c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.57%     0x00007f18c079a953: mov    r8d,edx
  1.30%     0x00007f18c079a956: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.33%     0x00007f18c079a95d: mov    r9d,edx
  1.04%     0x00007f18c079a960: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.79%     0x00007f18c079a963: cmp    r9d,r8d
         ╭  0x00007f18c079a966: je     0x00007f18c079a978  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  1.26%  │  0x00007f18c079a968: add    rsp,0x20
  0.49%  │  0x00007f18c079a96c: pop    rbp
  1.30%  │  0x00007f18c079a96d: mov    r10,QWORD PTR [r15+0x108]
  0.59%  │  0x00007f18c079a974: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.30%  │  0x00007f18c079a977: ret    
         ↘  0x00007f18c079a978: mov    rbp,rsi
            0x00007f18c079a97b: mov    DWORD PTR [rsp],edx
            0x00007f18c079a97e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f18c079a983: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f18c079a988: mov    esi,0xffffff4d
            0x00007f18c079a98d: xchg   ax,ax
            0x00007f18c079a98f: call   0x00007f18c0723900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 13.88%  <total for region 5>

....[Hottest Regions]...............................................................................
 38.50%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 130 (201 bytes) 
 15.79%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (66 bytes) 
 14.84%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (62 bytes) 
 14.43%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (62 bytes) 
 13.88%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (55 bytes) 
  1.73%       kernel  [unknown] (6 bytes) 
  0.08%       kernel  [unknown] (30 bytes) 
  0.06%       kernel  [unknown] (1 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.43%  <...other 22 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 38.50%           c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 130 
 15.79%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 
 14.84%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 
 14.43%           c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 
 13.88%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
  2.13%       kernel  [unknown] 
  0.02%    libjvm.so  _ZNK5frame21interpreter_frame_bcpEv 
  0.02%    libjvm.so  jio_print 
  0.02%    libjvm.so  _ZN9PhaseLive7computeEj 
  0.02%    libjvm.so  _ZN12PhaseChaitin19interfere_with_liveEjP8IndexSet 
  0.02%  interpreter  method entry point (kind = native)  
  0.02%    libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%    libjvm.so  _ZN8PhaseCFG24schedule_node_into_blockEP4NodeP5Block 
  0.02%    libjvm.so  _ZN8LoadNode5IdealEP8PhaseGVNb 
  0.02%    libjvm.so  _ZNK10IfTrueNode6OpcodeEv 
  0.02%   ld-2.28.so  _dl_fini 
  0.02%    libjvm.so  _ZN7Monitor5IWaitEP6Threadl 
  0.02%    libjvm.so  _ZN16PhaseBlockLayout11grow_tracesEv 
  0.02%    libjvm.so  _ZN19DirectCallGenerator8generateEP8JVMState 
  0.02%    libjvm.so  _ZN12PhaseChaitin45check_for_high_pressure_transition_at_fatprojERjjR3LRGRNS_8PressureEi 
  0.14%  <...other 7 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.44%           c2
  2.13%       kernel
  0.35%    libjvm.so
  0.04%  interpreter
  0.02%   ld-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49739 total address lines.
Perf output processed (skipped 6.160 seconds):
 Column 1: cycles (5166 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 (201 bytes) 

                                                          ;   {optimized virtual_call}
            0x00007fb4a8ce65e8: mov    r10,QWORD PTR [rsp+0x48]
            0x00007fb4a8ce65ed: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007fb4a8ce6772
            0x00007fb4a8ce65f5: test   r11d,r11d
            0x00007fb4a8ce65f8: jne    0x00007fb4a8ce6707  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
            0x00007fb4a8ce65fe: mov    ebp,0x1            ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
  0.46%  ↗  0x00007fb4a8ce6603: mov    r10,QWORD PTR [rsp+0x50]
  0.89%  │  0x00007fb4a8ce6608: mov    r11d,DWORD PTR [r10+0xc]
  0.45%  │  0x00007fb4a8ce660c: movabs r10,0x71b857b90    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857b90} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
  1.26%  │  0x00007fb4a8ce6616: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@4 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.45%  │  0x00007fb4a8ce661a: mov    rsi,r11
  0.99%  │  0x00007fb4a8ce661d: shl    rsi,0x3
  0.74%  │  0x00007fb4a8ce6621: movabs rax,0xffffffffffffffff
  1.08%  │  0x00007fb4a8ce662b: call   0x00007fb4a8c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@7 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  1.32%  │  0x00007fb4a8ce6630: mov    QWORD PTR [rsp+0x10],rbp
  1.30%  │  0x00007fb4a8ce6635: mov    DWORD PTR [rsp+0x58],eax
  0.56%  │  0x00007fb4a8ce6639: mov    r10,QWORD PTR [rsp+0x50]
  1.55%  │  0x00007fb4a8ce663e: mov    r10d,DWORD PTR [r10+0x10]
  1.03%  │  0x00007fb4a8ce6642: movabs r11,0x71b857b90    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857b90} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
  0.31%  │  0x00007fb4a8ce664c: mov    edx,DWORD PTR [r11+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@14 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.52%  │  0x00007fb4a8ce6650: mov    rsi,r10
  1.59%  │  0x00007fb4a8ce6653: shl    rsi,0x3            ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@11 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.91%  │  0x00007fb4a8ce6657: xchg   ax,ax
  0.31%  │  0x00007fb4a8ce6659: movabs rax,0xffffffffffffffff
  0.77%  │  0x00007fb4a8ce6663: call   0x00007fb4a8c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@17 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  1.05%  │  0x00007fb4a8ce6668: mov    ebp,eax
  0.72%  │  0x00007fb4a8ce666a: add    ebp,DWORD PTR [rsp+0x58]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@20 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.43%  │  0x00007fb4a8ce666e: movabs r10,0x71b857b90    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857b90} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic3JavaState&apos;)}
  1.37%  │  0x00007fb4a8ce6678: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@25 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.66%  │  0x00007fb4a8ce667c: mov    r10,QWORD PTR [rsp+0x50]
  0.83%  │  0x00007fb4a8ce6681: mov    r11d,DWORD PTR [r10+0x14]
  0.62%  │  0x00007fb4a8ce6685: mov    rsi,r11
  1.05%  │  0x00007fb4a8ce6688: shl    rsi,0x3            ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@22 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.85%  │  0x00007fb4a8ce668c: nop
  0.83%  │  0x00007fb4a8ce668d: movabs rax,0xffffffffffffffff
  0.62%  │  0x00007fb4a8ce6697: call   0x00007fb4a8c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@28 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  0.95%  │  0x00007fb4a8ce669c: mov    edx,eax
  0.60%  │  0x00007fb4a8ce669e: add    edx,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic3JavaState::megamorphic3Call@31 (line 64)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic3Call@1 (line 39)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.20%  │  0x00007fb4a8ce66a0: mov    rsi,QWORD PTR [rsp]
  1.24%  │  0x00007fb4a8ce66a4: data16 xchg ax,ax
  0.77%  │  0x00007fb4a8ce66a7: call   0x00007fb4a8c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  0.62%  │  0x00007fb4a8ce66ac: mov    r10,QWORD PTR [rsp+0x48]
  1.61%  │  0x00007fb4a8ce66b1: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  1.18%  │  0x00007fb4a8ce66b9: mov    r11,QWORD PTR [r15+0x108]
  0.56%  │  0x00007fb4a8ce66c0: mov    rbp,QWORD PTR [rsp+0x10]
  1.03%  │  0x00007fb4a8ce66c5: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop [8]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  0.50%  │  0x00007fb4a8ce66c9: test   DWORD PTR [r11],eax  ;   {poll}
  1.20%  │  0x00007fb4a8ce66cc: test   r10d,r10d
         ╰  0x00007fb4a8ce66cf: je     0x00007fb4a8ce6603  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
            0x00007fb4a8ce66d5: movabs r10,0x7fb4ba7f2a00
            0x00007fb4a8ce66df: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@39 (line 198)
            0x00007fb4a8ce66e2: mov    r10,QWORD PTR [rsp+0x40]
            0x00007fb4a8ce66e7: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@54 (line 200)
            0x00007fb4a8ce66eb: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 37.96%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (66 bytes) 

          scopes pcs     [0x00007fb4a8cddbb8,0x00007fb4a8cddbf8] = 64
          dependencies   [0x00007fb4a8cddbf8,0x00007fb4a8cddc00] = 8
         ----------------------------------------------------------------------
         org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1.compute(I)I  [0x00007fb4a8cddb20, 0x00007fb4a8cddb98]  120 bytes
         [Entry Point]
         [Constants]
           # {method} {0x00007fb47a10e930} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;
           # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;
           # parm0:    rdx       = int
           #           [sp+0x20]  (sp of caller)
  1.47%    0x00007fb4a8cddb20: mov    r10d,DWORD PTR [rsi+0x8]
  0.85%    0x00007fb4a8cddb24: movabs r12,0x800000000
  1.20%    0x00007fb4a8cddb2e: add    r10,r12
  1.16%    0x00007fb4a8cddb31: xor    r12,r12
  0.74%    0x00007fb4a8cddb34: cmp    rax,r10
           0x00007fb4a8cddb37: jne    0x00007fb4a8c68c80  ;   {runtime_call ic_miss_stub}
  1.39%    0x00007fb4a8cddb3d: data16 xchg ax,ax
         [Verified Entry Point]
  1.06%    0x00007fb4a8cddb40: sub    rsp,0x18
  1.26%    0x00007fb4a8cddb47: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@-1 (line 90)
  1.24%    0x00007fb4a8cddb4c: mov    eax,edx
  0.77%    0x00007fb4a8cddb4e: shl    eax,0x4
  0.29%    0x00007fb4a8cddb51: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 90)
  0.79%    0x00007fb4a8cddb53: add    rsp,0x10
  1.32%    0x00007fb4a8cddb57: pop    rbp
  0.74%    0x00007fb4a8cddb58: mov    r10,QWORD PTR [r15+0x108]
  0.33%    0x00007fb4a8cddb5f: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.60%    0x00007fb4a8cddb62: ret    
           0x00007fb4a8cddb63: hlt    
           0x00007fb4a8cddb64: hlt    
           0x00007fb4a8cddb65: hlt    
           0x00007fb4a8cddb66: hlt    
           0x00007fb4a8cddb67: hlt    
           0x00007fb4a8cddb68: hlt    
           0x00007fb4a8cddb69: hlt    
           0x00007fb4a8cddb6a: hlt    
           0x00007fb4a8cddb6b: hlt    
           0x00007fb4a8cddb6c: hlt    
....................................................................................................
 15.21%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 126 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fb4a8ce18a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fb4a8ce18a4: movabs r12,0x800000000
            0x00007fb4a8ce18ae: add    r10,r12
            0x00007fb4a8ce18b1: xor    r12,r12
            0x00007fb4a8ce18b4: cmp    rax,r10
            0x00007fb4a8ce18b7: jne    0x00007fb4a8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fb4a8ce18bd: data16 xchg ax,ax
          [Verified Entry Point]
  1.76%     0x00007fb4a8ce18c0: mov    DWORD PTR [rsp-0x14000],eax
  1.49%     0x00007fb4a8ce18c7: push   rbp
  1.28%     0x00007fb4a8ce18c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  1.26%     0x00007fb4a8ce18cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.60%     0x00007fb4a8ce18d3: mov    r8d,edx
  1.49%     0x00007fb4a8ce18d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.41%     0x00007fb4a8ce18dd: mov    r9d,edx
  0.79%     0x00007fb4a8ce18e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.45%     0x00007fb4a8ce18e3: cmp    r9d,r8d
         ╭  0x00007fb4a8ce18e6: je     0x00007fb4a8ce18f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  1.47%  │  0x00007fb4a8ce18e8: add    rsp,0x20
  0.50%  │  0x00007fb4a8ce18ec: pop    rbp
  1.36%  │  0x00007fb4a8ce18ed: mov    r10,QWORD PTR [r15+0x108]
  0.54%  │  0x00007fb4a8ce18f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.43%  │  0x00007fb4a8ce18f7: ret    
         ↘  0x00007fb4a8ce18f8: mov    rbp,rsi
            0x00007fb4a8ce18fb: mov    DWORD PTR [rsp],edx
            0x00007fb4a8ce18fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fb4a8ce1903: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fb4a8ce1908: mov    esi,0xffffff4d
            0x00007fb4a8ce190d: xchg   ax,ax
            0x00007fb4a8ce190f: call   0x00007fb4a8c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 14.83%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (62 bytes) 

           scopes pcs     [0x00007fb4a8cdd698,0x00007fb4a8cdd6d8] = 64
           dependencies   [0x00007fb4a8cdd6d8,0x00007fb4a8cdd6e0] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3.compute(I)I  [0x00007fb4a8cdd620, 0x00007fb4a8cdd678]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007fb47a10ef40} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  1.90%     0x00007fb4a8cdd620: mov    r10d,DWORD PTR [rsi+0x8]
  1.06%     0x00007fb4a8cdd624: movabs r12,0x800000000
  0.54%     0x00007fb4a8cdd62e: add    r10,r12
  1.82%     0x00007fb4a8cdd631: xor    r12,r12
  0.46%     0x00007fb4a8cdd634: cmp    rax,r10
            0x00007fb4a8cdd637: jne    0x00007fb4a8c68c80  ;   {runtime_call ic_miss_stub}
  1.47%     0x00007fb4a8cdd63d: data16 xchg ax,ax
          [Verified Entry Point]
  0.46%     0x00007fb4a8cdd640: sub    rsp,0x18
  1.32%     0x00007fb4a8cdd647: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@-1 (line 102)
  1.30%     0x00007fb4a8cdd64c: imul   eax,edx,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@3 (line 102)
  0.35%     0x00007fb4a8cdd64f: add    rsp,0x10
  1.28%     0x00007fb4a8cdd653: pop    rbp
  0.60%     0x00007fb4a8cdd654: mov    r10,QWORD PTR [r15+0x108]
  1.24%     0x00007fb4a8cdd65b: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.54%     0x00007fb4a8cdd65e: ret    
            0x00007fb4a8cdd65f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007fb4a8cdd660: jmp    0x00007fb4a8c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007fb4a8cdd665: call   0x00007fb4a8cdd66a
         ↘  0x00007fb4a8cdd66a: sub    QWORD PTR [rsp],0x5
            0x00007fb4a8cdd66f: jmp    0x00007fb4a8c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007fb4a8cdd674: hlt    
            0x00007fb4a8cdd675: hlt    
....................................................................................................
 14.34%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (62 bytes) 

           scopes pcs     [0x00007fb4a8cdd918,0x00007fb4a8cdd958] = 64
           dependencies   [0x00007fb4a8cdd958,0x00007fb4a8cdd960] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2.compute(I)I  [0x00007fb4a8cdd8a0, 0x00007fb4a8cdd8f8]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007fb47a10ec38} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  2.05%     0x00007fb4a8cdd8a0: mov    r10d,DWORD PTR [rsi+0x8]
  0.54%     0x00007fb4a8cdd8a4: movabs r12,0x800000000
  0.74%     0x00007fb4a8cdd8ae: add    r10,r12
  1.49%     0x00007fb4a8cdd8b1: xor    r12,r12
  0.77%     0x00007fb4a8cdd8b4: cmp    rax,r10
            0x00007fb4a8cdd8b7: jne    0x00007fb4a8c68c80  ;   {runtime_call ic_miss_stub}
  0.85%     0x00007fb4a8cdd8bd: data16 xchg ax,ax
          [Verified Entry Point]
  0.43%     0x00007fb4a8cdd8c0: sub    rsp,0x18
  2.13%     0x00007fb4a8cdd8c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@-1 (line 96)
  0.72%     0x00007fb4a8cdd8cc: imul   eax,edx,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@3 (line 96)
  0.48%     0x00007fb4a8cdd8cf: add    rsp,0x10
  1.49%     0x00007fb4a8cdd8d3: pop    rbp
  0.66%     0x00007fb4a8cdd8d4: mov    r10,QWORD PTR [r15+0x108]
  0.58%     0x00007fb4a8cdd8db: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.58%     0x00007fb4a8cdd8de: ret    
            0x00007fb4a8cdd8df: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007fb4a8cdd8e0: jmp    0x00007fb4a8c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007fb4a8cdd8e5: call   0x00007fb4a8cdd8ea
         ↘  0x00007fb4a8cdd8ea: sub    QWORD PTR [rsp],0x5
            0x00007fb4a8cdd8ef: jmp    0x00007fb4a8c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007fb4a8cdd8f4: hlt    
            0x00007fb4a8cdd8f5: hlt    
....................................................................................................
 13.51%  <total for region 5>

....[Hottest Regions]...............................................................................
 37.96%            c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 (201 bytes) 
 15.21%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (66 bytes) 
 14.83%            c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 (55 bytes) 
 14.34%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (62 bytes) 
 13.51%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (62 bytes) 
  3.06%        kernel  [unknown] (6 bytes) 
  0.15%        kernel  [unknown] (27 bytes) 
  0.06%        kernel  [unknown] (0 bytes) 
  0.06%        kernel  [unknown] (14 bytes) 
  0.04%        kernel  [unknown] (0 bytes) 
  0.04%     libjvm.so  _ZN11SymbolTable6lookupEiPKcij (25 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.02%        kernel  [unknown] (0 bytes) 
  0.54%  <...other 28 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 37.96%            c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic3Java_jmhTest::megamorphic3Call_avgt_jmhStub, version 131 
 15.21%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 
 14.83%            c2  org.openjdk.jmh.infra.Blackhole::consume, version 126 
 14.34%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 
 13.51%            c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 
  3.62%        kernel  [unknown] 
  0.04%     libjvm.so  _ZN11SymbolTable6lookupEiPKcij 
  0.02%     libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%     libjvm.so  _ZNK22CallLeafNoFPDirectNode12ideal_OpcodeEv 
  0.02%     libjvm.so  _ZN12PhaseChaitin16gather_lrg_masksEb 
  0.02%     libjvm.so  _ZN14PhaseIdealLoop20split_if_with_blocksER9VectorSetR10Node_Stackb 
  0.02%   interpreter  fast_aputfield  211 fast_aputfield  
  0.02%     libjvm.so  _ZNK4Node23has_special_unique_userEv 
  0.02%   interpreter  method entry point (kind = zerolocals)  
  0.02%     libjvm.so  _ZNK7nmethod20print_nmethod_labelsEP12outputStreamPh 
  0.02%     libjvm.so  _ZNK8ConINode6OpcodeEv 
  0.02%     libjvm.so  _ZN20ThreadInVMfromNativeD1Ev 
  0.02%     libjvm.so  _ZN8PhaseCCP9transformEP4Node 
  0.02%   interpreter  invokevirtual  182 invokevirtual  
  0.02%  libc-2.28.so  _IO_vsnprintf 
  0.21%  <...other 11 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.86%            c2
  3.62%        kernel
  0.37%     libjvm.so
  0.10%   interpreter
  0.04%  libc-2.28.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallJavaBenchmark.Megamorphic4Java
# Parameters: (param = 3)

# Run progress: 25.00% complete, ETA 00:01:44
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 12.400 ns/op
# Warmup Iteration   2: 12.278 ns/op
# Warmup Iteration   3: 11.771 ns/op
# Warmup Iteration   4: 10.966 ns/op
# Warmup Iteration   5: 10.951 ns/op
Iteration   1: 10.950 ns/op
Iteration   2: 10.917 ns/op
Iteration   3: 10.907 ns/op
Iteration   4: 10.918 ns/op
Iteration   5: 10.925 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 33.33% complete, ETA 00:01:32
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 10.751 ns/op
# Warmup Iteration   2: 10.070 ns/op
# Warmup Iteration   3: 9.862 ns/op
# Warmup Iteration   4: 9.825 ns/op
# Warmup Iteration   5: 9.822 ns/op
Iteration   1: 9.869 ns/op
Iteration   2: 9.839 ns/op
Iteration   3: 9.837 ns/op
Iteration   4: 9.829 ns/op
Iteration   5: 9.848 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 41.67% complete, ETA 00:01:20
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 11.757 ns/op
# Warmup Iteration   2: 11.111 ns/op
# Warmup Iteration   3: 10.888 ns/op
# Warmup Iteration   4: 10.855 ns/op
# Warmup Iteration   5: 10.812 ns/op
Iteration   1: 10.814 ns/op
Iteration   2: 10.842 ns/op
Iteration   3: 10.811 ns/op
Iteration   4: 10.777 ns/op
Iteration   5: 10.766 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallJavaBenchmark.Megamorphic4Java":
  10.523 ±(99.9%) 0.534 ns/op [Average]
  (min, avg, max) = (9.829, 10.523, 10.950), stdev = 0.500
  CI (99.9%): [9.989, 11.058] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallJavaBenchmark.Megamorphic4Java:·asm":
PrintAssembly processed: 49858 total address lines.
Perf output processed (skipped 6.200 seconds):
 Column 1: cycles (5153 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 (252 bytes) 

            0x00007effb0ce3eb5: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007effb0ce4076
            0x00007effb0ce3ebd: test   r10d,r10d
            0x00007effb0ce3ec0: jne    0x00007effb0ce4007  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
            0x00007effb0ce3ec6: mov    ebp,0x1
            0x00007effb0ce3ecb: nop    DWORD PTR [rax+rax*1+0x0]
                                                          ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
  0.54%  ↗  0x00007effb0ce3ed0: mov    r10,QWORD PTR [rsp+0x8]
  0.54%  │  0x00007effb0ce3ed5: mov    r10d,DWORD PTR [r10+0xc]
  0.72%  │  0x00007effb0ce3ed9: movabs r11,0x71b857c58    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857c58} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  1.07%  │  0x00007effb0ce3ee3: mov    edx,DWORD PTR [r11+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@4 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.41%  │  0x00007effb0ce3ee7: mov    rsi,r10
  0.66%  │  0x00007effb0ce3eea: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@1 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.60%  │  0x00007effb0ce3eee: data16 xchg ax,ax
  1.05%  │  0x00007effb0ce3ef1: movabs rax,0xffffffffffffffff
  0.50%  │  0x00007effb0ce3efb: call   0x00007effb0c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@7 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  1.03%  │  0x00007effb0ce3f00: mov    QWORD PTR [rsp+0x50],rbp
  0.97%  │  0x00007effb0ce3f05: mov    ebp,eax
  0.62%  │  0x00007effb0ce3f07: mov    r10,QWORD PTR [rsp+0x8]
  0.74%  │  0x00007effb0ce3f0c: mov    r11d,DWORD PTR [r10+0x10]
  0.47%  │  0x00007effb0ce3f10: movabs r10,0x71b857c58    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857c58} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.50%  │  0x00007effb0ce3f1a: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@14 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.80%  │  0x00007effb0ce3f1e: mov    rsi,r11
  0.89%  │  0x00007effb0ce3f21: shl    rsi,0x3
  0.43%  │  0x00007effb0ce3f25: movabs rax,0xffffffffffffffff
  0.54%  │  0x00007effb0ce3f2f: call   0x00007effb0c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@17 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  0.72%  │  0x00007effb0ce3f34: add    eax,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@20 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.87%  │  0x00007effb0ce3f36: mov    DWORD PTR [rsp+0x10],eax
  1.40%  │  0x00007effb0ce3f3a: movabs r10,0x71b857c58    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857c58} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.60%  │  0x00007effb0ce3f44: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@25 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.22%  │  0x00007effb0ce3f48: mov    r10,QWORD PTR [rsp+0x8]
  0.60%  │  0x00007effb0ce3f4d: mov    r11d,DWORD PTR [r10+0x14]
  0.64%  │  0x00007effb0ce3f51: mov    rsi,r11
  0.76%  │  0x00007effb0ce3f54: shl    rsi,0x3            ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@22 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.83%  │  0x00007effb0ce3f58: nop
  0.47%  │  0x00007effb0ce3f59: movabs rax,0xffffffffffffffff
  0.70%  │  0x00007effb0ce3f63: call   0x00007effb0c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@28 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  0.80%  │  0x00007effb0ce3f68: mov    ebp,eax
  0.89%  │  0x00007effb0ce3f6a: add    ebp,DWORD PTR [rsp+0x10]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@31 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.99%  │  0x00007effb0ce3f6e: movabs r10,0x71b857c58    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857c58} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.56%  │  0x00007effb0ce3f78: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@36 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.70%  │  0x00007effb0ce3f7c: mov    r10,QWORD PTR [rsp+0x8]
  0.52%  │  0x00007effb0ce3f81: mov    r11d,DWORD PTR [r10+0x18]
  0.54%  │  0x00007effb0ce3f85: mov    rsi,r11
  0.72%  │  0x00007effb0ce3f88: shl    rsi,0x3            ;*getfield alg4 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@33 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.97%  │  0x00007effb0ce3f8c: nop
  0.43%  │  0x00007effb0ce3f8d: movabs rax,0xffffffffffffffff
  0.54%  │  0x00007effb0ce3f97: call   0x00007effb0c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@39 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  0.54%  │  0x00007effb0ce3f9c: mov    edx,eax
  0.70%  │  0x00007effb0ce3f9e: add    edx,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@42 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.05%  │  0x00007effb0ce3fa0: mov    rsi,QWORD PTR [rsp]
  1.22%  │  0x00007effb0ce3fa4: data16 xchg ax,ax
  0.80%  │  0x00007effb0ce3fa7: call   0x00007effb0c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  0.66%  │  0x00007effb0ce3fac: mov    r10,QWORD PTR [rsp+0x48]
  1.40%  │  0x00007effb0ce3fb1: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.85%  │  0x00007effb0ce3fb9: mov    r11,QWORD PTR [r15+0x108]
  0.58%  │  0x00007effb0ce3fc0: mov    rbp,QWORD PTR [rsp+0x50]
  0.47%  │  0x00007effb0ce3fc5: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.80%  │  0x00007effb0ce3fc9: test   DWORD PTR [r11],eax  ;   {poll}
  0.64%  │  0x00007effb0ce3fcc: test   r10d,r10d
         ╰  0x00007effb0ce3fcf: je     0x00007effb0ce3ed0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
            0x00007effb0ce3fd5: movabs r10,0x7effc2084a00
            0x00007effb0ce3fdf: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@39 (line 198)
            0x00007effb0ce3fe2: mov    r10,QWORD PTR [rsp+0x40]
            0x00007effb0ce3fe7: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@54 (line 200)
            0x00007effb0ce3feb: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 39.26%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (66 bytes) 

          scopes pcs     [0x00007effb0cdbeb8,0x00007effb0cdbef8] = 64
          dependencies   [0x00007effb0cdbef8,0x00007effb0cdbf00] = 8
         ----------------------------------------------------------------------
         org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1.compute(I)I  [0x00007effb0cdbe20, 0x00007effb0cdbe98]  120 bytes
         [Entry Point]
         [Constants]
           # {method} {0x00007eff91a4e930} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;
           # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;
           # parm0:    rdx       = int
           #           [sp+0x20]  (sp of caller)
  1.32%    0x00007effb0cdbe20: mov    r10d,DWORD PTR [rsi+0x8]
  0.95%    0x00007effb0cdbe24: movabs r12,0x800000000
  0.49%    0x00007effb0cdbe2e: add    r10,r12
  0.82%    0x00007effb0cdbe31: xor    r12,r12
  0.70%    0x00007effb0cdbe34: cmp    rax,r10
           0x00007effb0cdbe37: jne    0x00007effb0c68c80  ;   {runtime_call ic_miss_stub}
  0.87%    0x00007effb0cdbe3d: data16 xchg ax,ax
         [Verified Entry Point]
  0.45%    0x00007effb0cdbe40: sub    rsp,0x18
  1.34%    0x00007effb0cdbe47: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@-1 (line 90)
  0.99%    0x00007effb0cdbe4c: mov    eax,edx
  0.29%    0x00007effb0cdbe4e: shl    eax,0x4
  0.41%    0x00007effb0cdbe51: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 90)
  0.78%    0x00007effb0cdbe53: add    rsp,0x10
  1.09%    0x00007effb0cdbe57: pop    rbp
  0.31%    0x00007effb0cdbe58: mov    r10,QWORD PTR [r15+0x108]
  0.47%    0x00007effb0cdbe5f: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.76%    0x00007effb0cdbe62: ret    
           0x00007effb0cdbe63: hlt    
           0x00007effb0cdbe64: hlt    
           0x00007effb0cdbe65: hlt    
           0x00007effb0cdbe66: hlt    
           0x00007effb0cdbe67: hlt    
           0x00007effb0cdbe68: hlt    
           0x00007effb0cdbe69: hlt    
           0x00007effb0cdbe6a: hlt    
           0x00007effb0cdbe6b: hlt    
           0x00007effb0cdbe6c: hlt    
....................................................................................................
 12.01%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007effb0ce3220: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007effb0ce3224: movabs r12,0x800000000
            0x00007effb0ce322e: add    r10,r12
            0x00007effb0ce3231: xor    r12,r12
            0x00007effb0ce3234: cmp    rax,r10
            0x00007effb0ce3237: jne    0x00007effb0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007effb0ce323d: data16 xchg ax,ax
          [Verified Entry Point]
  1.28%     0x00007effb0ce3240: mov    DWORD PTR [rsp-0x14000],eax
  1.40%     0x00007effb0ce3247: push   rbp
  0.85%     0x00007effb0ce3248: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  0.97%     0x00007effb0ce324c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.72%     0x00007effb0ce3253: mov    r8d,edx
  0.83%     0x00007effb0ce3256: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.43%     0x00007effb0ce325d: mov    r9d,edx
  0.54%     0x00007effb0ce3260: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.74%     0x00007effb0ce3263: cmp    r9d,r8d
         ╭  0x00007effb0ce3266: je     0x00007effb0ce3278  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.87%  │  0x00007effb0ce3268: add    rsp,0x20
  0.68%  │  0x00007effb0ce326c: pop    rbp
  0.78%  │  0x00007effb0ce326d: mov    r10,QWORD PTR [r15+0x108]
  0.87%  │  0x00007effb0ce3274: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.80%  │  0x00007effb0ce3277: ret    
         ↘  0x00007effb0ce3278: mov    rbp,rsi
            0x00007effb0ce327b: mov    DWORD PTR [rsp],edx
            0x00007effb0ce327e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007effb0ce3283: mov    DWORD PTR [rsp+0x8],r8d
            0x00007effb0ce3288: mov    esi,0xffffff4d
            0x00007effb0ce328d: xchg   ax,ax
            0x00007effb0ce328f: call   0x00007effb0c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 11.76%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (62 bytes) 

           scopes pcs     [0x00007effb0cdd498,0x00007effb0cdd4d8] = 64
           dependencies   [0x00007effb0cdd4d8,0x00007effb0cdd4e0] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2.compute(I)I  [0x00007effb0cdd420, 0x00007effb0cdd478]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007eff91a4ec38} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  1.90%     0x00007effb0cdd420: mov    r10d,DWORD PTR [rsi+0x8]
  0.56%     0x00007effb0cdd424: movabs r12,0x800000000
  0.52%     0x00007effb0cdd42e: add    r10,r12
  0.99%     0x00007effb0cdd431: xor    r12,r12
  0.97%     0x00007effb0cdd434: cmp    rax,r10
            0x00007effb0cdd437: jne    0x00007effb0c68c80  ;   {runtime_call ic_miss_stub}
  0.68%     0x00007effb0cdd43d: data16 xchg ax,ax
          [Verified Entry Point]
  0.60%     0x00007effb0cdd440: sub    rsp,0x18
  1.75%     0x00007effb0cdd447: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@-1 (line 96)
  0.56%     0x00007effb0cdd44c: imul   eax,edx,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@3 (line 96)
  0.47%     0x00007effb0cdd44f: add    rsp,0x10
  0.62%     0x00007effb0cdd453: pop    rbp
  0.82%     0x00007effb0cdd454: mov    r10,QWORD PTR [r15+0x108]
  0.52%     0x00007effb0cdd45b: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.66%     0x00007effb0cdd45e: ret    
            0x00007effb0cdd45f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007effb0cdd460: jmp    0x00007effb0c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007effb0cdd465: call   0x00007effb0cdd46a
         ↘  0x00007effb0cdd46a: sub    QWORD PTR [rsp],0x5
            0x00007effb0cdd46f: jmp    0x00007effb0c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007effb0cdd474: hlt    
            0x00007effb0cdd475: hlt    
....................................................................................................
 11.62%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (62 bytes) 

           scopes pcs     [0x00007effb0ce1c18,0x00007effb0ce1c58] = 64
           dependencies   [0x00007effb0ce1c58,0x00007effb0ce1c60] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3.compute(I)I  [0x00007effb0ce1ba0, 0x00007effb0ce1bf8]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007eff91a4ef40} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  1.20%     0x00007effb0ce1ba0: mov    r10d,DWORD PTR [rsi+0x8]
  0.56%     0x00007effb0ce1ba4: movabs r12,0x800000000
  0.68%     0x00007effb0ce1bae: add    r10,r12
  0.72%     0x00007effb0ce1bb1: xor    r12,r12
  1.07%     0x00007effb0ce1bb4: cmp    rax,r10
            0x00007effb0ce1bb7: jne    0x00007effb0c68c80  ;   {runtime_call ic_miss_stub}
  0.74%     0x00007effb0ce1bbd: data16 xchg ax,ax
          [Verified Entry Point]
  0.50%     0x00007effb0ce1bc0: sub    rsp,0x18
  1.63%     0x00007effb0ce1bc7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@-1 (line 102)
  0.58%     0x00007effb0ce1bcc: imul   eax,edx,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@3 (line 102)
  0.39%     0x00007effb0ce1bcf: add    rsp,0x10
  0.66%     0x00007effb0ce1bd3: pop    rbp
  0.95%     0x00007effb0ce1bd4: mov    r10,QWORD PTR [r15+0x108]
  0.78%     0x00007effb0ce1bdb: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.58%     0x00007effb0ce1bde: ret    
            0x00007effb0ce1bdf: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007effb0ce1be0: jmp    0x00007effb0c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007effb0ce1be5: call   0x00007effb0ce1bea
         ↘  0x00007effb0ce1bea: sub    QWORD PTR [rsp],0x5
            0x00007effb0ce1bef: jmp    0x00007effb0c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007effb0ce1bf4: hlt    
            0x00007effb0ce1bf5: hlt    
....................................................................................................
 11.04%  <total for region 5>

....[Hottest Region 6]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 (62 bytes) 

           scopes pcs     [0x00007effb0ce1998,0x00007effb0ce19d8] = 64
           dependencies   [0x00007effb0ce19d8,0x00007effb0ce19e0] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4.compute(I)I  [0x00007effb0ce1920, 0x00007effb0ce1978]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007eff91a4f248} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  1.90%     0x00007effb0ce1920: mov    r10d,DWORD PTR [rsi+0x8]
  0.56%     0x00007effb0ce1924: movabs r12,0x800000000
  0.49%     0x00007effb0ce192e: add    r10,r12
  0.85%     0x00007effb0ce1931: xor    r12,r12
  0.64%     0x00007effb0ce1934: cmp    rax,r10
            0x00007effb0ce1937: jne    0x00007effb0c68c80  ;   {runtime_call ic_miss_stub}
  0.70%     0x00007effb0ce193d: data16 xchg ax,ax
          [Verified Entry Point]
  0.50%     0x00007effb0ce1940: sub    rsp,0x18
  1.30%     0x00007effb0ce1947: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute@-1 (line 108)
  0.58%     0x00007effb0ce194c: imul   eax,edx,0x1d       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute@3 (line 108)
  0.60%     0x00007effb0ce194f: add    rsp,0x10
  0.47%     0x00007effb0ce1953: pop    rbp
  0.85%     0x00007effb0ce1954: mov    r10,QWORD PTR [r15+0x108]
  0.82%     0x00007effb0ce195b: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.45%     0x00007effb0ce195e: ret    
            0x00007effb0ce195f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007effb0ce1960: jmp    0x00007effb0c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007effb0ce1965: call   0x00007effb0ce196a
         ↘  0x00007effb0ce196a: sub    QWORD PTR [rsp],0x5
            0x00007effb0ce196f: jmp    0x00007effb0c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007effb0ce1974: hlt    
            0x00007effb0ce1975: hlt    
....................................................................................................
 10.71%  <total for region 6>

....[Hottest Regions]...............................................................................
 39.26%                  c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 (252 bytes) 
 12.01%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (66 bytes) 
 11.76%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 
 11.62%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (62 bytes) 
 11.04%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (62 bytes) 
 10.71%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 (62 bytes) 
  2.81%              kernel  [unknown] (6 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.04%          ld-2.28.so  __tls_get_addr (21 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.43%  <...other 22 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 39.26%                  c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 
 12.01%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 
 11.76%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
 11.62%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 
 11.04%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 
 10.71%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 
  3.05%              kernel  [unknown] 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.04%          ld-2.28.so  __tls_get_addr 
  0.04%         interpreter  invokestatic  184 invokestatic  
  0.02%           libjvm.so  _ZN24DebugInformationRecorder27find_sharable_decode_offsetEi 
  0.02%           libjvm.so  _ZN9PhaseLive7computeEj 
  0.02%           libjvm.so  _ZN12PhaseChaitin5SplitEjP12ResourceArea 
  0.02%           libjvm.so  _ZN4Type3cmpEPKS_S1_ 
  0.02%           libjvm.so  _ZN11StringTable9do_internE6HandlePtimP6Thread 
  0.02%      hsdis-amd64.so  print_insn 
  0.02%           libjvm.so  _ZN8IndexSet22alloc_block_containingEj 
  0.02%           libjvm.so  _ZNK10jmpConNode15oper_input_baseEv 
  0.02%           libjvm.so  _ZNK11ConstMethod31localvariable_table_length_addrEv 
  0.02%  libpthread-2.28.so  __pthread_disable_asynccancel 
  0.19%  <...other 10 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.41%                  c2
  3.05%              kernel
  0.31%           libjvm.so
  0.14%         interpreter
  0.04%          ld-2.28.so
  0.02%      hsdis-amd64.so
  0.02%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49858 total address lines.
Perf output processed (skipped 6.294 seconds):
 Column 1: cycles (5139 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 (252 bytes) 

            0x00007f55e8802235: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f55e88023f6
            0x00007f55e880223d: test   r10d,r10d
            0x00007f55e8802240: jne    0x00007f55e8802387  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
            0x00007f55e8802246: mov    ebp,0x1
            0x00007f55e880224b: nop    DWORD PTR [rax+rax*1+0x0]
                                                          ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
  0.72%  ↗  0x00007f55e8802250: mov    r10,QWORD PTR [rsp+0x8]
  0.58%  │  0x00007f55e8802255: mov    r10d,DWORD PTR [r10+0xc]
  0.64%  │  0x00007f55e8802259: movabs r11,0x71b857cd0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857cd0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.86%  │  0x00007f55e8802263: mov    edx,DWORD PTR [r11+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@4 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.58%  │  0x00007f55e8802267: mov    rsi,r10
  0.64%  │  0x00007f55e880226a: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@1 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.72%  │  0x00007f55e880226e: data16 xchg ax,ax
  0.74%  │  0x00007f55e8802271: movabs rax,0xffffffffffffffff
  0.62%  │  0x00007f55e880227b: call   0x00007f55e8787180  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@7 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  0.84%  │  0x00007f55e8802280: mov    QWORD PTR [rsp+0x50],rbp
  1.15%  │  0x00007f55e8802285: mov    ebp,eax
  0.86%  │  0x00007f55e8802287: mov    r10,QWORD PTR [rsp+0x8]
  1.11%  │  0x00007f55e880228c: mov    r11d,DWORD PTR [r10+0x10]
  0.41%  │  0x00007f55e8802290: movabs r10,0x71b857cd0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857cd0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.66%  │  0x00007f55e880229a: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@14 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.78%  │  0x00007f55e880229e: mov    rsi,r11
  0.95%  │  0x00007f55e88022a1: shl    rsi,0x3
  0.54%  │  0x00007f55e88022a5: movabs rax,0xffffffffffffffff
  0.58%  │  0x00007f55e88022af: call   0x00007f55e8787180  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@17 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  0.70%  │  0x00007f55e88022b4: add    eax,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@20 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.01%  │  0x00007f55e88022b6: mov    DWORD PTR [rsp+0x10],eax
  1.26%  │  0x00007f55e88022ba: movabs r10,0x71b857cd0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857cd0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.74%  │  0x00007f55e88022c4: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@25 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.66%  │  0x00007f55e88022c8: mov    r10,QWORD PTR [rsp+0x8]
  0.43%  │  0x00007f55e88022cd: mov    r11d,DWORD PTR [r10+0x14]
  0.62%  │  0x00007f55e88022d1: mov    rsi,r11
  0.66%  │  0x00007f55e88022d4: shl    rsi,0x3            ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@22 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.88%  │  0x00007f55e88022d8: nop
  0.84%  │  0x00007f55e88022d9: movabs rax,0xffffffffffffffff
  0.54%  │  0x00007f55e88022e3: call   0x00007f55e8787180  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@28 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  0.82%  │  0x00007f55e88022e8: mov    ebp,eax
  0.64%  │  0x00007f55e88022ea: add    ebp,DWORD PTR [rsp+0x10]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@31 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.46%  │  0x00007f55e88022ee: movabs r10,0x71b857cd0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b857cd0} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.76%  │  0x00007f55e88022f8: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@36 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.01%  │  0x00007f55e88022fc: mov    r10,QWORD PTR [rsp+0x8]
  0.70%  │  0x00007f55e8802301: mov    r11d,DWORD PTR [r10+0x18]
  0.39%  │  0x00007f55e8802305: mov    rsi,r11
  0.53%  │  0x00007f55e8802308: shl    rsi,0x3            ;*getfield alg4 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@33 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.88%  │  0x00007f55e880230c: nop
  0.58%  │  0x00007f55e880230d: movabs rax,0xffffffffffffffff
  0.62%  │  0x00007f55e8802317: call   0x00007f55e8787180  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@39 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  0.68%  │  0x00007f55e880231c: mov    edx,eax
  0.62%  │  0x00007f55e880231e: add    edx,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@42 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.91%  │  0x00007f55e8802320: mov    rsi,QWORD PTR [rsp]
  1.03%  │  0x00007f55e8802324: data16 xchg ax,ax
  0.74%  │  0x00007f55e8802327: call   0x00007f55e8786f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  0.53%  │  0x00007f55e880232c: mov    r10,QWORD PTR [rsp+0x48]
  1.42%  │  0x00007f55e8802331: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.56%  │  0x00007f55e8802339: mov    r11,QWORD PTR [r15+0x108]
  0.41%  │  0x00007f55e8802340: mov    rbp,QWORD PTR [rsp+0x50]
  0.66%  │  0x00007f55e8802345: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.76%  │  0x00007f55e8802349: test   DWORD PTR [r11],eax  ;   {poll}
  0.66%  │  0x00007f55e880234c: test   r10d,r10d
         ╰  0x00007f55e880234f: je     0x00007f55e8802250  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
            0x00007f55e8802355: movabs r10,0x7f55ece81a00
            0x00007f55e880235f: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@39 (line 198)
            0x00007f55e8802362: mov    r10,QWORD PTR [rsp+0x40]
            0x00007f55e8802367: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@54 (line 200)
            0x00007f55e880236b: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 39.72%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (66 bytes) 

          scopes pcs     [0x00007f55e87fa238,0x00007f55e87fa278] = 64
          dependencies   [0x00007f55e87fa278,0x00007f55e87fa280] = 8
         ----------------------------------------------------------------------
         org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1.compute(I)I  [0x00007f55e87fa1a0, 0x00007f55e87fa218]  120 bytes
         [Entry Point]
         [Constants]
           # {method} {0x00007f55c483e930} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;
           # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;
           # parm0:    rdx       = int
           #           [sp+0x20]  (sp of caller)
  1.48%    0x00007f55e87fa1a0: mov    r10d,DWORD PTR [rsi+0x8]
  0.80%    0x00007f55e87fa1a4: movabs r12,0x800000000
  0.49%    0x00007f55e87fa1ae: add    r10,r12
  0.78%    0x00007f55e87fa1b1: xor    r12,r12
  0.76%    0x00007f55e87fa1b4: cmp    rax,r10
           0x00007f55e87fa1b7: jne    0x00007f55e8786c80  ;   {runtime_call ic_miss_stub}
  0.88%    0x00007f55e87fa1bd: data16 xchg ax,ax
         [Verified Entry Point]
  0.39%    0x00007f55e87fa1c0: sub    rsp,0x18
  1.05%    0x00007f55e87fa1c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@-1 (line 90)
  0.93%    0x00007f55e87fa1cc: mov    eax,edx
  0.43%    0x00007f55e87fa1ce: shl    eax,0x4
  0.68%    0x00007f55e87fa1d1: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 90)
  0.80%    0x00007f55e87fa1d3: add    rsp,0x10
  0.97%    0x00007f55e87fa1d7: pop    rbp
  0.37%    0x00007f55e87fa1d8: mov    r10,QWORD PTR [r15+0x108]
  0.53%    0x00007f55e87fa1df: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.64%    0x00007f55e87fa1e2: ret    
           0x00007f55e87fa1e3: hlt    
           0x00007f55e87fa1e4: hlt    
           0x00007f55e87fa1e5: hlt    
           0x00007f55e87fa1e6: hlt    
           0x00007f55e87fa1e7: hlt    
           0x00007f55e87fa1e8: hlt    
           0x00007f55e87fa1e9: hlt    
           0x00007f55e87fa1ea: hlt    
           0x00007f55e87fa1eb: hlt    
           0x00007f55e87fa1ec: hlt    
....................................................................................................
 11.97%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 (62 bytes) 

           scopes pcs     [0x00007f55e87ffd18,0x00007f55e87ffd58] = 64
           dependencies   [0x00007f55e87ffd58,0x00007f55e87ffd60] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4.compute(I)I  [0x00007f55e87ffca0, 0x00007f55e87ffcf8]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007f55c483f248} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  1.73%     0x00007f55e87ffca0: mov    r10d,DWORD PTR [rsi+0x8]
  0.84%     0x00007f55e87ffca4: movabs r12,0x800000000
  0.53%     0x00007f55e87ffcae: add    r10,r12
  0.72%     0x00007f55e87ffcb1: xor    r12,r12
  1.05%     0x00007f55e87ffcb4: cmp    rax,r10
            0x00007f55e87ffcb7: jne    0x00007f55e8786c80  ;   {runtime_call ic_miss_stub}
  0.84%     0x00007f55e87ffcbd: data16 xchg ax,ax
          [Verified Entry Point]
  0.49%     0x00007f55e87ffcc0: sub    rsp,0x18
  1.48%     0x00007f55e87ffcc7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute@-1 (line 108)
  0.90%     0x00007f55e87ffccc: imul   eax,edx,0x1d       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute@3 (line 108)
  0.43%     0x00007f55e87ffccf: add    rsp,0x10
  0.64%     0x00007f55e87ffcd3: pop    rbp
  1.03%     0x00007f55e87ffcd4: mov    r10,QWORD PTR [r15+0x108]
  0.82%     0x00007f55e87ffcdb: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.23%     0x00007f55e87ffcde: ret    
            0x00007f55e87ffcdf: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f55e87ffce0: jmp    0x00007f55e87bd680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f55e87ffce5: call   0x00007f55e87ffcea
         ↘  0x00007f55e87ffcea: sub    QWORD PTR [rsp],0x5
            0x00007f55e87ffcef: jmp    0x00007f55e8788520  ;   {runtime_call DeoptimizationBlob}
            0x00007f55e87ffcf4: hlt    
            0x00007f55e87ffcf5: hlt    
....................................................................................................
 11.71%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (62 bytes) 

           scopes pcs     [0x00007f55e87fff98,0x00007f55e87fffd8] = 64
           dependencies   [0x00007f55e87fffd8,0x00007f55e87fffe0] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3.compute(I)I  [0x00007f55e87fff20, 0x00007f55e87fff78]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007f55c483ef40} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  1.71%     0x00007f55e87fff20: mov    r10d,DWORD PTR [rsi+0x8]
  0.72%     0x00007f55e87fff24: movabs r12,0x800000000
  0.66%     0x00007f55e87fff2e: add    r10,r12
  0.82%     0x00007f55e87fff31: xor    r12,r12
  0.80%     0x00007f55e87fff34: cmp    rax,r10
            0x00007f55e87fff37: jne    0x00007f55e8786c80  ;   {runtime_call ic_miss_stub}
  0.72%     0x00007f55e87fff3d: data16 xchg ax,ax
          [Verified Entry Point]
  0.70%     0x00007f55e87fff40: sub    rsp,0x18
  1.62%     0x00007f55e87fff47: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@-1 (line 102)
  0.51%     0x00007f55e87fff4c: imul   eax,edx,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@3 (line 102)
  0.62%     0x00007f55e87fff4f: add    rsp,0x10
  0.68%     0x00007f55e87fff53: pop    rbp
  0.84%     0x00007f55e87fff54: mov    r10,QWORD PTR [r15+0x108]
  0.64%     0x00007f55e87fff5b: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.43%     0x00007f55e87fff5e: ret    
            0x00007f55e87fff5f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f55e87fff60: jmp    0x00007f55e87bd680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f55e87fff65: call   0x00007f55e87fff6a
         ↘  0x00007f55e87fff6a: sub    QWORD PTR [rsp],0x5
            0x00007f55e87fff6f: jmp    0x00007f55e8788520  ;   {runtime_call DeoptimizationBlob}
            0x00007f55e87fff74: hlt    
            0x00007f55e87fff75: hlt    
....................................................................................................
 11.46%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f55e88015a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f55e88015a4: movabs r12,0x800000000
            0x00007f55e88015ae: add    r10,r12
            0x00007f55e88015b1: xor    r12,r12
            0x00007f55e88015b4: cmp    rax,r10
            0x00007f55e88015b7: jne    0x00007f55e8786c80  ;   {runtime_call ic_miss_stub}
            0x00007f55e88015bd: data16 xchg ax,ax
          [Verified Entry Point]
  1.11%     0x00007f55e88015c0: mov    DWORD PTR [rsp-0x14000],eax
  1.28%     0x00007f55e88015c7: push   rbp
  0.80%     0x00007f55e88015c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  1.05%     0x00007f55e88015cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.82%     0x00007f55e88015d3: mov    r8d,edx
  0.80%     0x00007f55e88015d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.47%     0x00007f55e88015dd: mov    r9d,edx
  0.43%     0x00007f55e88015e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.78%     0x00007f55e88015e3: cmp    r9d,r8d
         ╭  0x00007f55e88015e6: je     0x00007f55e88015f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.84%  │  0x00007f55e88015e8: add    rsp,0x20
  0.45%  │  0x00007f55e88015ec: pop    rbp
  0.70%  │  0x00007f55e88015ed: mov    r10,QWORD PTR [r15+0x108]
  0.72%  │  0x00007f55e88015f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.70%  │  0x00007f55e88015f7: ret    
         ↘  0x00007f55e88015f8: mov    rbp,rsi
            0x00007f55e88015fb: mov    DWORD PTR [rsp],edx
            0x00007f55e88015fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f55e8801603: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f55e8801608: mov    esi,0xffffff4d
            0x00007f55e880160d: xchg   ax,ax
            0x00007f55e880160f: call   0x00007f55e8788900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 10.94%  <total for region 5>

....[Hottest Region 6]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (62 bytes) 

           scopes pcs     [0x00007f55e87fb818,0x00007f55e87fb858] = 64
           dependencies   [0x00007f55e87fb858,0x00007f55e87fb860] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2.compute(I)I  [0x00007f55e87fb7a0, 0x00007f55e87fb7f8]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007f55c483ec38} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  1.65%     0x00007f55e87fb7a0: mov    r10d,DWORD PTR [rsi+0x8]
  0.35%     0x00007f55e87fb7a4: movabs r12,0x800000000
  0.66%     0x00007f55e87fb7ae: add    r10,r12
  0.90%     0x00007f55e87fb7b1: xor    r12,r12
  0.88%     0x00007f55e87fb7b4: cmp    rax,r10
            0x00007f55e87fb7b7: jne    0x00007f55e8786c80  ;   {runtime_call ic_miss_stub}
  0.64%     0x00007f55e87fb7bd: data16 xchg ax,ax
          [Verified Entry Point]
  0.56%     0x00007f55e87fb7c0: sub    rsp,0x18
  1.50%     0x00007f55e87fb7c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@-1 (line 96)
  0.47%     0x00007f55e87fb7cc: imul   eax,edx,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@3 (line 96)
  0.53%     0x00007f55e87fb7cf: add    rsp,0x10
  0.84%     0x00007f55e87fb7d3: pop    rbp
  0.88%     0x00007f55e87fb7d4: mov    r10,QWORD PTR [r15+0x108]
  0.53%     0x00007f55e87fb7db: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.41%     0x00007f55e87fb7de: ret    
            0x00007f55e87fb7df: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f55e87fb7e0: jmp    0x00007f55e87bd680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f55e87fb7e5: call   0x00007f55e87fb7ea
         ↘  0x00007f55e87fb7ea: sub    QWORD PTR [rsp],0x5
            0x00007f55e87fb7ef: jmp    0x00007f55e8788520  ;   {runtime_call DeoptimizationBlob}
            0x00007f55e87fb7f4: hlt    
            0x00007f55e87fb7f5: hlt    
....................................................................................................
 10.78%  <total for region 6>

....[Hottest Regions]...............................................................................
 39.72%              c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 (252 bytes) 
 11.97%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (66 bytes) 
 11.71%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 (62 bytes) 
 11.46%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (62 bytes) 
 10.94%              c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 
 10.78%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (62 bytes) 
  2.53%          kernel  [unknown] (6 bytes) 
  0.06%          kernel  [unknown] (27 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (30 bytes) 
  0.04%          kernel  [unknown] (11 bytes) 
  0.04%          kernel  [unknown] (28 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.49%  <...other 25 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 39.72%              c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 
 11.97%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 
 11.71%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 
 11.46%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 
 10.94%              c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
 10.78%              c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 
  2.92%          kernel  [unknown] 
  0.04%       libjvm.so  _ZN20ThreadInVMfromNativeD1Ev 
  0.02%       libjvm.so  _ZN12CounterDecay9do_methodEP6Method 
  0.02%       libjvm.so  _ZN14PhaseIdealLoop14get_early_ctrlEP4Node 
  0.02%       libjvm.so  _ZN9PhaseLive7computeEj 
  0.02%       libjvm.so  _ZN12PhaseChaitin16gather_lrg_masksEb 
  0.02%       libjvm.so  _ZNK8CmpINode6OpcodeEv 
  0.02%       libjvm.so  _ZN8PhaseCCP7analyzeEv 
  0.02%       libjvm.so  _ZN15PerfLongVariant6sampleEv 
  0.02%  hsdis-amd64.so  OP_E_memory 
  0.02%     interpreter  method entry point (kind = zerolocals)  
  0.02%       libjvm.so  _ZN13InstanceKlass10methods_doEPFvP6MethodE 
  0.02%     interpreter  invokevirtual  182 invokevirtual  
  0.02%     interpreter  fast_lputfield  218 fast_lputfield  
  0.21%  <...other 11 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.58%              c2
  2.92%          kernel
  0.35%       libjvm.so
  0.10%     interpreter
  0.02%    libc-2.28.so
  0.02%  hsdis-amd64.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49875 total address lines.
Perf output processed (skipped 6.154 seconds):
 Column 1: cycles (5118 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 (252 bytes) 

            0x00007fb024ce3e35: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007fb024ce3ff6
            0x00007fb024ce3e3d: test   r10d,r10d
            0x00007fb024ce3e40: jne    0x00007fb024ce3f87  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
            0x00007fb024ce3e46: mov    ebp,0x1
            0x00007fb024ce3e4b: nop    DWORD PTR [rax+rax*1+0x0]
                                                          ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
  0.45%  ↗  0x00007fb024ce3e50: mov    r10,QWORD PTR [rsp+0x8]
  0.47%  │  0x00007fb024ce3e55: mov    r10d,DWORD PTR [r10+0xc]
  0.68%  │  0x00007fb024ce3e59: movabs r11,0x71b8583e8    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b8583e8} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.64%  │  0x00007fb024ce3e63: mov    edx,DWORD PTR [r11+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@4 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.57%  │  0x00007fb024ce3e67: mov    rsi,r10
  0.57%  │  0x00007fb024ce3e6a: shl    rsi,0x3            ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@1 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.66%  │  0x00007fb024ce3e6e: data16 xchg ax,ax
  0.66%  │  0x00007fb024ce3e71: movabs rax,0xffffffffffffffff
  0.55%  │  0x00007fb024ce3e7b: call   0x00007fb024c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@7 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  0.88%  │  0x00007fb024ce3e80: mov    QWORD PTR [rsp+0x50],rbp
  1.07%  │  0x00007fb024ce3e85: mov    ebp,eax
  0.72%  │  0x00007fb024ce3e87: mov    r10,QWORD PTR [rsp+0x8]
  1.02%  │  0x00007fb024ce3e8c: mov    r11d,DWORD PTR [r10+0x10]
  0.43%  │  0x00007fb024ce3e90: movabs r10,0x71b8583e8    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b8583e8} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.59%  │  0x00007fb024ce3e9a: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@14 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.74%  │  0x00007fb024ce3e9e: mov    rsi,r11
  0.64%  │  0x00007fb024ce3ea1: shl    rsi,0x3
  0.57%  │  0x00007fb024ce3ea5: movabs rax,0xffffffffffffffff
  0.57%  │  0x00007fb024ce3eaf: call   0x00007fb024c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@17 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  0.68%  │  0x00007fb024ce3eb4: add    eax,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@20 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.98%  │  0x00007fb024ce3eb6: mov    DWORD PTR [rsp+0x10],eax
  1.06%  │  0x00007fb024ce3eba: movabs r10,0x71b8583e8    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b8583e8} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.68%  │  0x00007fb024ce3ec4: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@25 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.92%  │  0x00007fb024ce3ec8: mov    r10,QWORD PTR [rsp+0x8]
  0.63%  │  0x00007fb024ce3ecd: mov    r11d,DWORD PTR [r10+0x14]
  0.82%  │  0x00007fb024ce3ed1: mov    rsi,r11
  0.72%  │  0x00007fb024ce3ed4: shl    rsi,0x3            ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@22 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.84%  │  0x00007fb024ce3ed8: nop
  0.59%  │  0x00007fb024ce3ed9: movabs rax,0xffffffffffffffff
  0.61%  │  0x00007fb024ce3ee3: call   0x00007fb024c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@28 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  0.59%  │  0x00007fb024ce3ee8: mov    ebp,eax
  1.00%  │  0x00007fb024ce3eea: add    ebp,DWORD PTR [rsp+0x10]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@31 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.35%  │  0x00007fb024ce3eee: movabs r10,0x71b8583e8    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b8583e8} = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$Megamorphic4JavaState&apos;)}
  0.78%  │  0x00007fb024ce3ef8: mov    edx,DWORD PTR [r10+0x70]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@36 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.90%  │  0x00007fb024ce3efc: mov    r10,QWORD PTR [rsp+0x8]
  0.74%  │  0x00007fb024ce3f01: mov    r11d,DWORD PTR [r10+0x18]
  0.51%  │  0x00007fb024ce3f05: mov    rsi,r11
  0.86%  │  0x00007fb024ce3f08: shl    rsi,0x3            ;*getfield alg4 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@33 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.92%  │  0x00007fb024ce3f0c: nop
  0.47%  │  0x00007fb024ce3f0d: movabs rax,0xffffffffffffffff
  0.64%  │  0x00007fb024ce3f17: call   0x00007fb024c69180  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::compute@2 (line 50)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@39 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │                                                ;   {virtual_call}
  0.80%  │  0x00007fb024ce3f1c: mov    edx,eax
  0.80%  │  0x00007fb024ce3f1e: add    edx,ebp            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$Megamorphic4JavaState::megamorphic4Call@42 (line 80)
         │                                                ; - org.ib.benchmark.MegamorphicCallJavaBenchmark::megamorphic4Call@1 (line 45)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.86%  │  0x00007fb024ce3f20: mov    rsi,QWORD PTR [rsp]
  0.86%  │  0x00007fb024ce3f24: data16 xchg ax,ax
  0.86%  │  0x00007fb024ce3f27: call   0x00007fb024c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  0.53%  │  0x00007fb024ce3f2c: mov    r10,QWORD PTR [rsp+0x48]
  1.27%  │  0x00007fb024ce3f31: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.96%  │  0x00007fb024ce3f39: mov    r11,QWORD PTR [r15+0x108]
  0.53%  │  0x00007fb024ce3f40: mov    rbp,QWORD PTR [rsp+0x50]
  0.68%  │  0x00007fb024ce3f45: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [88]=Oop [0]=Oop [8]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.84%  │  0x00007fb024ce3f49: test   DWORD PTR [r11],eax  ;   {poll}
  1.11%  │  0x00007fb024ce3f4c: test   r10d,r10d
         ╰  0x00007fb024ce3f4f: je     0x00007fb024ce3e50  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
            0x00007fb024ce3f55: movabs r10,0x7fb038262a00
            0x00007fb024ce3f5f: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@39 (line 198)
            0x00007fb024ce3f62: mov    r10,QWORD PTR [rsp+0x40]
            0x00007fb024ce3f67: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@54 (line 200)
            0x00007fb024ce3f6b: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 39.86%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (66 bytes) 

          scopes pcs     [0x00007fb024cdbe38,0x00007fb024cdbe78] = 64
          dependencies   [0x00007fb024cdbe78,0x00007fb024cdbe80] = 8
         ----------------------------------------------------------------------
         org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1.compute(I)I  [0x00007fb024cdbda0, 0x00007fb024cdbe18]  120 bytes
         [Entry Point]
         [Constants]
           # {method} {0x00007fafdfa1e930} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;
           # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1&apos;
           # parm0:    rdx       = int
           #           [sp+0x20]  (sp of caller)
  1.52%    0x00007fb024cdbda0: mov    r10d,DWORD PTR [rsi+0x8]
  0.78%    0x00007fb024cdbda4: movabs r12,0x800000000
  0.41%    0x00007fb024cdbdae: add    r10,r12
  0.78%    0x00007fb024cdbdb1: xor    r12,r12
  0.68%    0x00007fb024cdbdb4: cmp    rax,r10
           0x00007fb024cdbdb7: jne    0x00007fb024c68c80  ;   {runtime_call ic_miss_stub}
  1.02%    0x00007fb024cdbdbd: data16 xchg ax,ax
         [Verified Entry Point]
  0.39%    0x00007fb024cdbdc0: sub    rsp,0x18
  1.31%    0x00007fb024cdbdc7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@-1 (line 90)
  0.94%    0x00007fb024cdbdcc: mov    eax,edx
  0.31%    0x00007fb024cdbdce: shl    eax,0x4
  0.61%    0x00007fb024cdbdd1: add    eax,edx            ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute@3 (line 90)
  0.86%    0x00007fb024cdbdd3: add    rsp,0x10
  1.15%    0x00007fb024cdbdd7: pop    rbp
  0.35%    0x00007fb024cdbdd8: mov    r10,QWORD PTR [r15+0x108]
  0.61%    0x00007fb024cdbddf: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.59%    0x00007fb024cdbde2: ret    
           0x00007fb024cdbde3: hlt    
           0x00007fb024cdbde4: hlt    
           0x00007fb024cdbde5: hlt    
           0x00007fb024cdbde6: hlt    
           0x00007fb024cdbde7: hlt    
           0x00007fb024cdbde8: hlt    
           0x00007fb024cdbde9: hlt    
           0x00007fb024cdbdea: hlt    
           0x00007fb024cdbdeb: hlt    
           0x00007fb024cdbdec: hlt    
....................................................................................................
 12.31%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fb024ce31a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fb024ce31a4: movabs r12,0x800000000
            0x00007fb024ce31ae: add    r10,r12
            0x00007fb024ce31b1: xor    r12,r12
            0x00007fb024ce31b4: cmp    rax,r10
            0x00007fb024ce31b7: jne    0x00007fb024c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fb024ce31bd: data16 xchg ax,ax
          [Verified Entry Point]
  1.43%     0x00007fb024ce31c0: mov    DWORD PTR [rsp-0x14000],eax
  1.33%     0x00007fb024ce31c7: push   rbp
  0.76%     0x00007fb024ce31c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  0.98%     0x00007fb024ce31cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.78%     0x00007fb024ce31d3: mov    r8d,edx
  0.57%     0x00007fb024ce31d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.43%     0x00007fb024ce31dd: mov    r9d,edx
  0.74%     0x00007fb024ce31e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.80%     0x00007fb024ce31e3: cmp    r9d,r8d
         ╭  0x00007fb024ce31e6: je     0x00007fb024ce31f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.74%  │  0x00007fb024ce31e8: add    rsp,0x20
  0.53%  │  0x00007fb024ce31ec: pop    rbp
  0.70%  │  0x00007fb024ce31ed: mov    r10,QWORD PTR [r15+0x108]
  0.84%  │  0x00007fb024ce31f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.98%  │  0x00007fb024ce31f7: ret    
         ↘  0x00007fb024ce31f8: mov    rbp,rsi
            0x00007fb024ce31fb: mov    DWORD PTR [rsp],edx
            0x00007fb024ce31fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fb024ce3203: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fb024ce3208: mov    esi,0xffffff4d
            0x00007fb024ce320d: xchg   ax,ax
            0x00007fb024ce320f: call   0x00007fb024c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 11.61%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 (62 bytes) 

           scopes pcs     [0x00007fb024ce1918,0x00007fb024ce1958] = 64
           dependencies   [0x00007fb024ce1958,0x00007fb024ce1960] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4.compute(I)I  [0x00007fb024ce18a0, 0x00007fb024ce18f8]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007fafdfa1f248} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  1.39%     0x00007fb024ce18a0: mov    r10d,DWORD PTR [rsi+0x8]
  0.68%     0x00007fb024ce18a4: movabs r12,0x800000000
  0.47%     0x00007fb024ce18ae: add    r10,r12
  0.94%     0x00007fb024ce18b1: xor    r12,r12
  0.88%     0x00007fb024ce18b4: cmp    rax,r10
            0x00007fb024ce18b7: jne    0x00007fb024c68c80  ;   {runtime_call ic_miss_stub}
  0.72%     0x00007fb024ce18bd: data16 xchg ax,ax
          [Verified Entry Point]
  0.57%     0x00007fb024ce18c0: sub    rsp,0x18
  1.50%     0x00007fb024ce18c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute@-1 (line 108)
  0.88%     0x00007fb024ce18cc: imul   eax,edx,0x1d       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute@3 (line 108)
  0.41%     0x00007fb024ce18cf: add    rsp,0x10
  0.74%     0x00007fb024ce18d3: pop    rbp
  0.72%     0x00007fb024ce18d4: mov    r10,QWORD PTR [r15+0x108]
  0.84%     0x00007fb024ce18db: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.68%     0x00007fb024ce18de: ret    
            0x00007fb024ce18df: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007fb024ce18e0: jmp    0x00007fb024c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007fb024ce18e5: call   0x00007fb024ce18ea
         ↘  0x00007fb024ce18ea: sub    QWORD PTR [rsp],0x5
            0x00007fb024ce18ef: jmp    0x00007fb024c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007fb024ce18f4: hlt    
            0x00007fb024ce18f5: hlt    
....................................................................................................
 11.43%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (62 bytes) 

           scopes pcs     [0x00007fb024cdd418,0x00007fb024cdd458] = 64
           dependencies   [0x00007fb024cdd458,0x00007fb024cdd460] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2.compute(I)I  [0x00007fb024cdd3a0, 0x00007fb024cdd3f8]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007fafdfa1ec38} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  1.88%     0x00007fb024cdd3a0: mov    r10d,DWORD PTR [rsi+0x8]
  0.45%     0x00007fb024cdd3a4: movabs r12,0x800000000
  0.43%     0x00007fb024cdd3ae: add    r10,r12
  0.92%     0x00007fb024cdd3b1: xor    r12,r12
  0.76%     0x00007fb024cdd3b4: cmp    rax,r10
            0x00007fb024cdd3b7: jne    0x00007fb024c68c80  ;   {runtime_call ic_miss_stub}
  0.68%     0x00007fb024cdd3bd: data16 xchg ax,ax
          [Verified Entry Point]
  0.49%     0x00007fb024cdd3c0: sub    rsp,0x18
  1.47%     0x00007fb024cdd3c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@-1 (line 96)
  0.51%     0x00007fb024cdd3cc: imul   eax,edx,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute@3 (line 96)
  0.61%     0x00007fb024cdd3cf: add    rsp,0x10
  0.64%     0x00007fb024cdd3d3: pop    rbp
  0.90%     0x00007fb024cdd3d4: mov    r10,QWORD PTR [r15+0x108]
  0.72%     0x00007fb024cdd3db: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.57%     0x00007fb024cdd3de: ret    
            0x00007fb024cdd3df: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007fb024cdd3e0: jmp    0x00007fb024c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007fb024cdd3e5: call   0x00007fb024cdd3ea
         ↘  0x00007fb024cdd3ea: sub    QWORD PTR [rsp],0x5
            0x00007fb024cdd3ef: jmp    0x00007fb024c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007fb024cdd3f4: hlt    
            0x00007fb024cdd3f5: hlt    
....................................................................................................
 11.02%  <total for region 5>

....[Hottest Region 6]..............................................................................
c2, org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (62 bytes) 

           scopes pcs     [0x00007fb024ce1b98,0x00007fb024ce1bd8] = 64
           dependencies   [0x00007fb024ce1bd8,0x00007fb024ce1be0] = 8
          ----------------------------------------------------------------------
          org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3.compute(I)I  [0x00007fb024ce1b20, 0x00007fb024ce1b78]  88 bytes
          [Entry Point]
          [Constants]
            # {method} {0x00007fafdfa1ef40} &apos;compute&apos; &apos;(I)I&apos; in &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3&apos;
            # this:     rsi:rsi   = &apos;org/ib/benchmark/MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3&apos;
            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
  1.60%     0x00007fb024ce1b20: mov    r10d,DWORD PTR [rsi+0x8]
  0.51%     0x00007fb024ce1b24: movabs r12,0x800000000
  0.53%     0x00007fb024ce1b2e: add    r10,r12
  0.57%     0x00007fb024ce1b31: xor    r12,r12
  1.11%     0x00007fb024ce1b34: cmp    rax,r10
            0x00007fb024ce1b37: jne    0x00007fb024c68c80  ;   {runtime_call ic_miss_stub}
  0.70%     0x00007fb024ce1b3d: data16 xchg ax,ax
          [Verified Entry Point]
  0.78%     0x00007fb024ce1b40: sub    rsp,0x18
  1.56%     0x00007fb024ce1b47: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@-1 (line 102)
  0.70%     0x00007fb024ce1b4c: imul   eax,edx,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute@3 (line 102)
  0.37%     0x00007fb024ce1b4f: add    rsp,0x10
  0.51%     0x00007fb024ce1b53: pop    rbp
  0.84%     0x00007fb024ce1b54: mov    r10,QWORD PTR [r15+0x108]
  0.53%     0x00007fb024ce1b5b: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.51%     0x00007fb024ce1b5e: ret    
            0x00007fb024ce1b5f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007fb024ce1b60: jmp    0x00007fb024c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007fb024ce1b65: call   0x00007fb024ce1b6a
         ↘  0x00007fb024ce1b6a: sub    QWORD PTR [rsp],0x5
            0x00007fb024ce1b6f: jmp    0x00007fb024c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007fb024ce1b74: hlt    
            0x00007fb024ce1b75: hlt    
....................................................................................................
 10.82%  <total for region 6>

....[Hottest Regions]...............................................................................
 39.86%                  c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 (252 bytes) 
 12.31%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 (66 bytes) 
 11.61%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 (55 bytes) 
 11.43%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 (62 bytes) 
 11.02%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 (62 bytes) 
 10.82%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 (62 bytes) 
  1.04%              kernel  [unknown] (6 bytes) 
  0.10%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (26 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN15StatSamplerTask4taskEv (0 bytes) 
  0.04%           libjvm.so  _ZN6Thread10muxAcquireEPVlPKc (0 bytes) 
  0.04%           libjvm.so  _ZN7VMError17is_error_reportedEv (0 bytes) 
  0.04%  libpthread-2.28.so  pthread_cond_timedwait@@GLIBC_2.3.2 (0 bytes) 
  0.04%  libpthread-2.28.so  __pthread_disable_asynccancel (8 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.41%  <...other 72 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 39.86%                  c2  org.ib.benchmark.generated.MegamorphicCallJavaBenchmark_Megamorphic4Java_jmhTest::megamorphic4Call_avgt_jmhStub, version 132 
 12.31%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg1::compute, version 123 
 11.61%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 127 
 11.43%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg4::compute, version 126 
 11.02%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg2::compute, version 124 
 10.82%                  c2  org.ib.benchmark.MegamorphicCallJavaBenchmark$VirtualCallJavaAlg3::compute, version 125 
  2.09%              kernel  [unknown] 
  0.08%  libpthread-2.28.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.04%           libjvm.so  _ZN7VMError17is_error_reportedEv 
  0.04%  libpthread-2.28.so  __pthread_disable_asynccancel 
  0.04%        libc-2.28.so  _IO_fwrite 
  0.04%           libjvm.so  _ZN6Thread10muxAcquireEPVlPKc 
  0.04%           libjvm.so  _ZN15StatSamplerTask4taskEv 
  0.02%           libjvm.so  _ZN12PhaseChaitin19interfere_with_liveEjP8IndexSet 
  0.02%  libpthread-2.28.so  __lll_unlock_wake 
  0.02%           libjvm.so  _ZN4Dict6InsertEPvS0_b 
  0.02%           libjvm.so  _ZN8PhaseCFG24schedule_node_into_blockEP4NodeP5Block 
  0.02%         interpreter  if_icmple  164 if_icmple  
  0.02%        libc-2.28.so  __GI___printf_fp_l 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.43%  <...other 22 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.07%                  c2
  2.09%              kernel
  0.45%           libjvm.so
  0.16%         interpreter
  0.14%  libpthread-2.28.so
  0.08%        libc-2.28.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic3Kt
# Parameters: (param = 3)

# Run progress: 50.00% complete, ETA 00:01:09
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.065 ns/op
# Warmup Iteration   2: 3.944 ns/op
# Warmup Iteration   3: 3.568 ns/op
# Warmup Iteration   4: 3.579 ns/op
# Warmup Iteration   5: 3.583 ns/op
Iteration   1: 3.576 ns/op
Iteration   2: 3.573 ns/op
Iteration   3: 3.587 ns/op
Iteration   4: 3.590 ns/op
Iteration   5: 3.580 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 58.33% complete, ETA 00:00:57
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.519 ns/op
# Warmup Iteration   2: 4.354 ns/op
# Warmup Iteration   3: 3.940 ns/op
# Warmup Iteration   4: 3.940 ns/op
# Warmup Iteration   5: 3.923 ns/op
Iteration   1: 3.922 ns/op
Iteration   2: 3.921 ns/op
Iteration   3: 3.915 ns/op
Iteration   4: 3.908 ns/op
Iteration   5: 3.904 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 66.67% complete, ETA 00:00:45
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.484 ns/op
# Warmup Iteration   2: 4.337 ns/op
# Warmup Iteration   3: 3.922 ns/op
# Warmup Iteration   4: 3.916 ns/op
# Warmup Iteration   5: 3.911 ns/op
Iteration   1: 3.912 ns/op
Iteration   2: 3.902 ns/op
Iteration   3: 3.911 ns/op
Iteration   4: 3.907 ns/op
Iteration   5: 3.899 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic3Kt":
  3.801 ±(99.9%) 0.172 ns/op [Average]
  (min, avg, max) = (3.573, 3.801, 3.922), stdev = 0.161
  CI (99.9%): [3.629, 3.972] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic3Kt:·asm":
PrintAssembly processed: 49904 total address lines.
Perf output processed (skipped 6.192 seconds):
 Column 1: cycles (5128 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 (159 bytes) 

            0x00007f94f848334c: mov    rcx,QWORD PTR [rsp+0x50]
            0x00007f94f8483351: movzx  r11d,BYTE PTR [rcx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f94f84835be
            0x00007f94f8483359: test   r11d,r11d
            0x00007f94f848335c: jne    0x00007f94f84834a6  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
            0x00007f94f8483362: mov    ebp,0x1
            0x00007f94f8483367: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
  3.69%  ↗  0x00007f94f8483370: mov    r10,QWORD PTR [rsp+0x60]
  2.54%  │  0x00007f94f8483375: mov    r8d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@5 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.51%  │  0x00007f94f8483379: movabs r10,0x71b859ab0    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b859ab0} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic3KtState&apos;)}
  0.86%  │  0x00007f94f8483383: mov    r11d,DWORD PTR [r10+0x74]
         │                                                ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@9 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.61%  │  0x00007f94f8483387: mov    r9d,DWORD PTR [r12+r8*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f94f848353a
  4.74%  │  0x00007f94f848338c: cmp    r9d,0xf3018        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007f94f8483393: jne    0x00007f94f848344a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 118)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  4.52%  │  0x00007f94f8483399: mov    r10,QWORD PTR [rsp+0x60]
  0.45%  │  0x00007f94f848339e: mov    r10d,DWORD PTR [r10+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@26 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.07%  │  0x00007f94f84833a2: mov    ebx,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f94f848354a
  3.37%  │  0x00007f94f84833a7: mov    r8d,r11d
  2.81%  │  0x00007f94f84833aa: shl    r8d,0x4
  0.47%  │  0x00007f94f84833ae: add    r8d,r11d           ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 77)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 118)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.05%  │  0x00007f94f84833b1: cmp    ebx,0xf3228        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007f94f84833b7: jne    0x00007f94f8483466  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@41 (line 119)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.47%  │  0x00007f94f84833bd: mov    r10,QWORD PTR [rsp+0x60]
  2.40%  │  0x00007f94f84833c2: mov    r10d,DWORD PTR [r10+0x14]
         │                                                ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@56 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.49%  │  0x00007f94f84833c6: mov    edi,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f94f848355a
  1.37%  │  0x00007f94f84833cb: imul   r9d,r11d,0x13
  3.53%  │  0x00007f94f84833cf: add    r9d,r8d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@50 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  2.67%  │  0x00007f94f84833d2: cmp    edi,0xf3438        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
         │  0x00007f94f84833d8: jne    0x00007f94f8483486  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@71 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.51%  │  0x00007f94f84833de: mov    QWORD PTR [rsp+0x50],rcx
  1.07%  │  0x00007f94f84833e3: imul   edx,r11d,0x17
  3.14%  │  0x00007f94f84833e7: add    edx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@80 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  2.05%  │  0x00007f94f84833ea: mov    rsi,QWORD PTR [rsp]
  0.53%  │  0x00007f94f84833ee: nop
  1.03%  │  0x00007f94f84833ef: call   0x00007f94f8408f00  ; ImmutableOopMap{[80]=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  2.77%  │  0x00007f94f84833f4: mov    rcx,QWORD PTR [rsp+0x50]
  1.64%  │  0x00007f94f84833f9: movzx  r10d,BYTE PTR [rcx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  3.24%  │  0x00007f94f8483401: mov    r11,QWORD PTR [r15+0x108]
  2.67%  │  0x00007f94f8483408: add    rbp,0x1            ; ImmutableOopMap{rcx=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  0.49%  │  0x00007f94f848340c: test   DWORD PTR [r11],eax  ;   {poll}
  1.15%  │  0x00007f94f848340f: test   r10d,r10d
         ╰  0x00007f94f8483412: je     0x00007f94f8483370  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
            0x00007f94f8483418: movabs r10,0x7f9509040a00
            0x00007f94f8483422: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@39 (line 198)
            0x00007f94f8483425: mov    r10,QWORD PTR [rsp+0x58]
            0x00007f94f848342a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@54 (line 200)
            0x00007f94f848342e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 63.88%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f94f8481920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f94f8481924: movabs r12,0x800000000
            0x00007f94f848192e: add    r10,r12
            0x00007f94f8481931: xor    r12,r12
            0x00007f94f8481934: cmp    rax,r10
            0x00007f94f8481937: jne    0x00007f94f8408c80  ;   {runtime_call ic_miss_stub}
            0x00007f94f848193d: data16 xchg ax,ax
          [Verified Entry Point]
  5.77%     0x00007f94f8481940: mov    DWORD PTR [rsp-0x14000],eax
  1.81%     0x00007f94f8481947: push   rbp
  3.30%     0x00007f94f8481948: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  2.48%     0x00007f94f848194c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.96%     0x00007f94f8481953: mov    r8d,edx
  3.57%     0x00007f94f8481956: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.97%     0x00007f94f848195d: mov    r9d,edx
  0.64%     0x00007f94f8481960: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.15%     0x00007f94f8481963: cmp    r9d,r8d
         ╭  0x00007f94f8481966: je     0x00007f94f8481978  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.45%  │  0x00007f94f8481968: add    rsp,0x20
  2.59%  │  0x00007f94f848196c: pop    rbp
  0.47%  │  0x00007f94f848196d: mov    r10,QWORD PTR [r15+0x108]
  0.86%  │  0x00007f94f8481974: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.00%  │  0x00007f94f8481977: ret    
         ↘  0x00007f94f8481978: mov    rbp,rsi
            0x00007f94f848197b: mov    DWORD PTR [rsp],edx
            0x00007f94f848197e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f94f8481983: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f94f8481988: mov    esi,0xffffff4d
            0x00007f94f848198d: xchg   ax,ax
            0x00007f94f848198f: call   0x00007f94f840a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 33.01%  <total for region 2>

....[Hottest Regions]...............................................................................
 63.88%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 (159 bytes) 
 33.01%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 
  2.71%       kernel  [unknown] (6 bytes) 
  0.06%       kernel  [unknown] (1 bytes) 
  0.06%       kernel  [unknown] (0 bytes) 
  0.04%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%  interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%  interpreter  pop  87 pop  (0 bytes) 
  0.02%  interpreter  ifge  156 ifge  (0 bytes) 
  0.02%  interpreter  areturn  176 areturn  (0 bytes) 
  0.02%  interpreter  fast_aaccess_0  222 fast_aaccess_0  (0 bytes) 
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 63.88%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 
 33.01%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 
  2.98%       kernel  [unknown] 
  0.02%  interpreter  areturn  176 areturn  
  0.02%  interpreter  method entry point (kind = zerolocals)  
  0.02%  interpreter  fast_aaccess_0  222 fast_aaccess_0  
  0.02%  interpreter  ifge  156 ifge  
  0.02%  interpreter  pop  87 pop  
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.90%           c2
  2.98%       kernel
  0.10%  interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49904 total address lines.
Perf output processed (skipped 6.175 seconds):
 Column 1: cycles (5101 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 (159 bytes) 

            0x00007ff724ce334c: mov    rcx,QWORD PTR [rsp+0x50]
            0x00007ff724ce3351: movzx  r11d,BYTE PTR [rcx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007ff724ce35be
            0x00007ff724ce3359: test   r11d,r11d
            0x00007ff724ce335c: jne    0x00007ff724ce34a6  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
            0x00007ff724ce3362: mov    ebp,0x1
            0x00007ff724ce3367: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
  3.69%  ↗  0x00007ff724ce3370: mov    r10,QWORD PTR [rsp+0x60]
  2.45%  │  0x00007ff724ce3375: mov    r8d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@5 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.41%  │  0x00007ff724ce3379: movabs r10,0x71b85a128    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85a128} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic3KtState&apos;)}
  1.25%  │  0x00007ff724ce3383: mov    r11d,DWORD PTR [r10+0x74]
         │                                                ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@9 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.71%  │  0x00007ff724ce3387: mov    r9d,DWORD PTR [r12+r8*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007ff724ce353a
  4.23%  │  0x00007ff724ce338c: cmp    r9d,0xf3018        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007ff724ce3393: jne    0x00007ff724ce344a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 118)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.98%  │  0x00007ff724ce3399: mov    r10,QWORD PTR [rsp+0x60]
  0.53%  │  0x00007ff724ce339e: mov    r10d,DWORD PTR [r10+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@26 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.06%  │  0x00007ff724ce33a2: mov    ebx,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007ff724ce354a
  3.78%  │  0x00007ff724ce33a7: mov    r8d,r11d
  2.31%  │  0x00007ff724ce33aa: shl    r8d,0x4
  0.55%  │  0x00007ff724ce33ae: add    r8d,r11d           ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 77)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 118)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.20%  │  0x00007ff724ce33b1: cmp    ebx,0xf3228        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007ff724ce33b7: jne    0x00007ff724ce3466  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@41 (line 119)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.20%  │  0x00007ff724ce33bd: mov    r10,QWORD PTR [rsp+0x60]
  2.20%  │  0x00007ff724ce33c2: mov    r10d,DWORD PTR [r10+0x14]
         │                                                ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@56 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.61%  │  0x00007ff724ce33c6: mov    edi,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007ff724ce355a
  1.12%  │  0x00007ff724ce33cb: imul   r9d,r11d,0x13
  3.69%  │  0x00007ff724ce33cf: add    r9d,r8d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@50 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  2.29%  │  0x00007ff724ce33d2: cmp    edi,0xf3438        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
         │  0x00007ff724ce33d8: jne    0x00007ff724ce3486  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@71 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.47%  │  0x00007ff724ce33de: mov    QWORD PTR [rsp+0x50],rcx
  1.47%  │  0x00007ff724ce33e3: imul   edx,r11d,0x17
  3.33%  │  0x00007ff724ce33e7: add    edx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@80 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  2.10%  │  0x00007ff724ce33ea: mov    rsi,QWORD PTR [rsp]
  0.63%  │  0x00007ff724ce33ee: nop
  1.06%  │  0x00007ff724ce33ef: call   0x00007ff724c68f00  ; ImmutableOopMap{[80]=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  2.82%  │  0x00007ff724ce33f4: mov    rcx,QWORD PTR [rsp+0x50]
  1.63%  │  0x00007ff724ce33f9: movzx  r10d,BYTE PTR [rcx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  3.72%  │  0x00007ff724ce3401: mov    r11,QWORD PTR [r15+0x108]
  2.20%  │  0x00007ff724ce3408: add    rbp,0x1            ; ImmutableOopMap{rcx=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  0.65%  │  0x00007ff724ce340c: test   DWORD PTR [r11],eax  ;   {poll}
  1.24%  │  0x00007ff724ce340f: test   r10d,r10d
         ╰  0x00007ff724ce3412: je     0x00007ff724ce3370  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
            0x00007ff724ce3418: movabs r10,0x7ff73578ea00
            0x00007ff724ce3422: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@39 (line 198)
            0x00007ff724ce3425: mov    r10,QWORD PTR [rsp+0x58]
            0x00007ff724ce342a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@54 (line 200)
            0x00007ff724ce342e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 63.56%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007ff724ce1920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007ff724ce1924: movabs r12,0x800000000
            0x00007ff724ce192e: add    r10,r12
            0x00007ff724ce1931: xor    r12,r12
            0x00007ff724ce1934: cmp    rax,r10
            0x00007ff724ce1937: jne    0x00007ff724c68c80  ;   {runtime_call ic_miss_stub}
            0x00007ff724ce193d: data16 xchg ax,ax
          [Verified Entry Point]
  5.33%     0x00007ff724ce1940: mov    DWORD PTR [rsp-0x14000],eax
  1.92%     0x00007ff724ce1947: push   rbp
  3.47%     0x00007ff724ce1948: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.14%     0x00007ff724ce194c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.86%     0x00007ff724ce1953: mov    r8d,edx
  3.14%     0x00007ff724ce1956: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.51%     0x00007ff724ce195d: mov    r9d,edx
  0.51%     0x00007ff724ce1960: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.33%     0x00007ff724ce1963: cmp    r9d,r8d
         ╭  0x00007ff724ce1966: je     0x00007ff724ce1978  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.92%  │  0x00007ff724ce1968: add    rsp,0x20
  2.39%  │  0x00007ff724ce196c: pop    rbp
  0.49%  │  0x00007ff724ce196d: mov    r10,QWORD PTR [r15+0x108]
  1.47%  │  0x00007ff724ce1974: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.27%  │  0x00007ff724ce1977: ret    
         ↘  0x00007ff724ce1978: mov    rbp,rsi
            0x00007ff724ce197b: mov    DWORD PTR [rsp],edx
            0x00007ff724ce197e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007ff724ce1983: mov    DWORD PTR [rsp+0x8],r8d
            0x00007ff724ce1988: mov    esi,0xffffff4d
            0x00007ff724ce198d: xchg   ax,ax
            0x00007ff724ce198f: call   0x00007ff724c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 33.76%  <total for region 2>

....[Hottest Regions]...............................................................................
 63.56%                  c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 (159 bytes) 
 33.76%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 
  2.14%              kernel  [unknown] (6 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (3 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%         interpreter  iload_2  28 iload_2  (0 bytes) 
  0.02%         interpreter  aaload  50 aaload  (0 bytes) 
  0.02%         interpreter  goto  167 goto  (0 bytes) 
  0.02%         interpreter  invokevirtual  182 invokevirtual  (0 bytes) 
  0.02%         interpreter  fast_aload_0  220 fast_aload_0  (0 bytes) 
  0.02%                  c2  java.util.concurrent.ConcurrentHashMap::tabAt, version 121 (0 bytes) 
  0.18%  <...other 9 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 63.56%                  c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 
 33.76%                  c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 
  2.33%              kernel  [unknown] 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%           libjvm.so  _ZN15JavaFieldStreamC2EPK13InstanceKlass 
  0.02%           libjvm.so  _ZN14JNIHandleBlock13release_blockEPS_P6Thread 
  0.02%         interpreter  fast_aload_0  220 fast_aload_0  
  0.02%         interpreter  aaload  50 aaload  
  0.02%           libjvm.so  _ZN7Monitor28lock_without_safepoint_checkEv 
  0.02%          ld-2.28.so  __tls_get_addr 
  0.02%         interpreter  iload_2  28 iload_2  
  0.02%        libc-2.28.so  __clock_gettime 
  0.02%         interpreter  goto  167 goto  
  0.02%                  c2  java.util.concurrent.ConcurrentHashMap::tabAt, version 121 
  0.02%           libjvm.so  _ZN7Monitor5IWaitEP6Threadl 
  0.02%           libjvm.so  _ZN7Monitor4waitEblb 
  0.02%           libjvm.so  _ZN15StatSamplerTask4taskEv 
  0.02%  libpthread-2.28.so  pthread_cond_timedwait@@GLIBC_2.3.2 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.33%                  c2
  2.33%              kernel
  0.14%         interpreter
  0.12%           libjvm.so
  0.02%        libc-2.28.so
  0.02%  libpthread-2.28.so
  0.02%          ld-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 49921 total address lines.
Perf output processed (skipped 6.203 seconds):
 Column 1: cycles (5091 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 (159 bytes) 

            0x00007fb6e8ce32cc: mov    rcx,QWORD PTR [rsp+0x50]
            0x00007fb6e8ce32d1: movzx  r11d,BYTE PTR [rcx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007fb6e8ce353e
            0x00007fb6e8ce32d9: test   r11d,r11d
            0x00007fb6e8ce32dc: jne    0x00007fb6e8ce3426  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
            0x00007fb6e8ce32e2: mov    ebp,0x1
            0x00007fb6e8ce32e7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
  3.83%  ↗  0x00007fb6e8ce32f0: mov    r10,QWORD PTR [rsp+0x60]
  2.46%  │  0x00007fb6e8ce32f5: mov    r8d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@5 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.45%  │  0x00007fb6e8ce32f9: movabs r10,0x71b859a38    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b859a38} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic3KtState&apos;)}
  1.36%  │  0x00007fb6e8ce3303: mov    r11d,DWORD PTR [r10+0x74]
         │                                                ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@9 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.26%  │  0x00007fb6e8ce3307: mov    r9d,DWORD PTR [r12+r8*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007fb6e8ce34ba
  4.01%  │  0x00007fb6e8ce330c: cmp    r9d,0xf3018        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007fb6e8ce3313: jne    0x00007fb6e8ce33ca  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 118)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  4.66%  │  0x00007fb6e8ce3319: mov    r10,QWORD PTR [rsp+0x60]
  0.71%  │  0x00007fb6e8ce331e: mov    r10d,DWORD PTR [r10+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@26 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.32%  │  0x00007fb6e8ce3322: mov    ebx,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007fb6e8ce34ca
  3.95%  │  0x00007fb6e8ce3327: mov    r8d,r11d
  2.63%  │  0x00007fb6e8ce332a: shl    r8d,0x4
  0.41%  │  0x00007fb6e8ce332e: add    r8d,r11d           ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 77)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 118)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.24%  │  0x00007fb6e8ce3331: cmp    ebx,0xf3228        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007fb6e8ce3337: jne    0x00007fb6e8ce33e6  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@41 (line 119)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  3.40%  │  0x00007fb6e8ce333d: mov    r10,QWORD PTR [rsp+0x60]
  2.22%  │  0x00007fb6e8ce3342: mov    r10d,DWORD PTR [r10+0x14]
         │                                                ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@56 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.39%  │  0x00007fb6e8ce3346: mov    edi,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007fb6e8ce34da
  1.00%  │  0x00007fb6e8ce334b: imul   r9d,r11d,0x13
  3.95%  │  0x00007fb6e8ce334f: add    r9d,r8d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@50 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  2.02%  │  0x00007fb6e8ce3352: cmp    edi,0xf3438        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
         │  0x00007fb6e8ce3358: jne    0x00007fb6e8ce3406  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@71 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.41%  │  0x00007fb6e8ce335e: mov    QWORD PTR [rsp+0x50],rcx
  1.45%  │  0x00007fb6e8ce3363: imul   edx,r11d,0x17
  3.44%  │  0x00007fb6e8ce3367: add    edx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@80 (line 44)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 27)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  2.73%  │  0x00007fb6e8ce336a: mov    rsi,QWORD PTR [rsp]
  0.35%  │  0x00007fb6e8ce336e: nop
  0.98%  │  0x00007fb6e8ce336f: call   0x00007fb6e8c68f00  ; ImmutableOopMap{[80]=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  2.40%  │  0x00007fb6e8ce3374: mov    rcx,QWORD PTR [rsp+0x50]
  1.47%  │  0x00007fb6e8ce3379: movzx  r10d,BYTE PTR [rcx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  3.24%  │  0x00007fb6e8ce3381: mov    r11,QWORD PTR [r15+0x108]
  2.49%  │  0x00007fb6e8ce3388: add    rbp,0x1            ; ImmutableOopMap{rcx=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  0.61%  │  0x00007fb6e8ce338c: test   DWORD PTR [r11],eax  ;   {poll}
  1.16%  │  0x00007fb6e8ce338f: test   r10d,r10d
         ╰  0x00007fb6e8ce3392: je     0x00007fb6e8ce32f0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@38 (line 198)
            0x00007fb6e8ce3398: movabs r10,0x7fb6fa80aa00
            0x00007fb6e8ce33a2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@39 (line 198)
            0x00007fb6e8ce33a5: mov    r10,QWORD PTR [rsp+0x58]
            0x00007fb6e8ce33aa: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@54 (line 200)
            0x00007fb6e8ce33ae: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 64.00%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fb6e8ce18a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fb6e8ce18a4: movabs r12,0x800000000
            0x00007fb6e8ce18ae: add    r10,r12
            0x00007fb6e8ce18b1: xor    r12,r12
            0x00007fb6e8ce18b4: cmp    rax,r10
            0x00007fb6e8ce18b7: jne    0x00007fb6e8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fb6e8ce18bd: data16 xchg ax,ax
          [Verified Entry Point]
  5.77%     0x00007fb6e8ce18c0: mov    DWORD PTR [rsp-0x14000],eax
  1.71%     0x00007fb6e8ce18c7: push   rbp
  3.34%     0x00007fb6e8ce18c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  2.71%     0x00007fb6e8ce18cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.14%     0x00007fb6e8ce18d3: mov    r8d,edx
  3.16%     0x00007fb6e8ce18d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.24%     0x00007fb6e8ce18dd: mov    r9d,edx
  0.41%     0x00007fb6e8ce18e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.08%     0x00007fb6e8ce18e3: cmp    r9d,r8d
         ╭  0x00007fb6e8ce18e6: je     0x00007fb6e8ce18f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.81%  │  0x00007fb6e8ce18e8: add    rsp,0x20
  2.63%  │  0x00007fb6e8ce18ec: pop    rbp
  0.65%  │  0x00007fb6e8ce18ed: mov    r10,QWORD PTR [r15+0x108]
  0.92%  │  0x00007fb6e8ce18f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.83%  │  0x00007fb6e8ce18f7: ret    
         ↘  0x00007fb6e8ce18f8: mov    rbp,rsi
            0x00007fb6e8ce18fb: mov    DWORD PTR [rsp],edx
            0x00007fb6e8ce18fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fb6e8ce1903: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fb6e8ce1908: mov    esi,0xffffff4d
            0x00007fb6e8ce190d: xchg   ax,ax
            0x00007fb6e8ce190f: call   0x00007fb6e8c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 33.41%  <total for region 2>

....[Hottest Regions]...............................................................................
 64.00%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 (159 bytes) 
 33.41%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 
  2.30%       kernel  [unknown] (6 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%  interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%  interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%  interpreter  iload_3  29 iload_3  (0 bytes) 
  0.02%  interpreter  aload_1  43 aload_1  (0 bytes) 
  0.02%  interpreter  invokevirtual  182 invokevirtual  (0 bytes) 
  0.02%    libjvm.so  _ZN14AccessInternal19PostRuntimeDispatchIN12G1BarrierSet13AccessBarrierILm1097844ES1_EELNS_11BarrierTypeE2ELm1097844EE18oop_access_barrierEPv (0 bytes) 
  0.02%    libjvm.so  _ZN10fileStream5writeEPKcm (0 bytes) 
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 64.00%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 133 
 33.41%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 
  2.44%       kernel  [unknown] 
  0.04%  interpreter  method entry point (kind = zerolocals)  
  0.02%  interpreter  invokevirtual  182 invokevirtual  
  0.02%    libjvm.so  _ZN14AccessInternal19PostRuntimeDispatchIN12G1BarrierSet13AccessBarrierILm1097844ES1_EELNS_11BarrierTypeE2ELm1097844EE18oop_access_barrierEPv 
  0.02%  interpreter  aload_1  43 aload_1  
  0.02%  interpreter  iload_3  29 iload_3  
  0.02%    libjvm.so  _ZN10fileStream5writeEPKcm 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.41%           c2
  2.44%       kernel
  0.10%  interpreter
  0.04%    libjvm.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic4Kt
# Parameters: (param = 3)

# Run progress: 75.00% complete, ETA 00:00:34
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5.038 ns/op
# Warmup Iteration   2: 4.831 ns/op
# Warmup Iteration   3: 4.351 ns/op
# Warmup Iteration   4: 4.354 ns/op
# Warmup Iteration   5: 4.338 ns/op
Iteration   1: 4.340 ns/op
Iteration   2: 4.338 ns/op
Iteration   3: 4.329 ns/op
Iteration   4: 4.328 ns/op
Iteration   5: 4.343 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 83.33% complete, ETA 00:00:22
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5.121 ns/op
# Warmup Iteration   2: 4.863 ns/op
# Warmup Iteration   3: 4.613 ns/op
# Warmup Iteration   4: 4.480 ns/op
# Warmup Iteration   5: 4.410 ns/op
Iteration   1: 4.403 ns/op
Iteration   2: 4.400 ns/op
Iteration   3: 4.403 ns/op
Iteration   4: 4.403 ns/op
Iteration   5: 4.405 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 91.67% complete, ETA 00:00:11
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.521 ns/op
# Warmup Iteration   2: 4.383 ns/op
# Warmup Iteration   3: 3.966 ns/op
# Warmup Iteration   4: 3.962 ns/op
# Warmup Iteration   5: 3.960 ns/op
Iteration   1: 3.961 ns/op
Iteration   2: 3.961 ns/op
Iteration   3: 3.963 ns/op
Iteration   4: 3.963 ns/op
Iteration   5: 3.962 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic4Kt":
  4.234 ±(99.9%) 0.214 ns/op [Average]
  (min, avg, max) = (3.961, 4.234, 4.405), stdev = 0.201
  CI (99.9%): [4.019, 4.448] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic4Kt:·asm":
PrintAssembly processed: 50073 total address lines.
Perf output processed (skipped 6.227 seconds):
 Column 1: cycles (5114 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 134 (195 bytes) 

            0x00007efefcce9e64: mov    rbx,QWORD PTR [rsp+0x50]
            0x00007efefcce9e69: movzx  r10d,BYTE PTR [rbx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007efefccea15e
            0x00007efefcce9e71: test   r10d,r10d
            0x00007efefcce9e74: jne    0x00007efefcce9ffa  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
            0x00007efefcce9e7a: mov    ebp,0x1
            0x00007efefcce9e7f: nop                       ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
  2.01%  ↗  0x00007efefcce9e80: mov    r10,QWORD PTR [rsp+0x60]
  0.92%  │  0x00007efefcce9e85: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@5 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.65%  │  0x00007efefcce9e89: movabs r11,0x71b85a4b8    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b85a4b8} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic4KtState&apos;)}
  2.68%  │  0x00007efefcce9e93: mov    r9d,DWORD PTR [r11+0x74]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@9 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.15%  │  0x00007efefcce9e97: mov    r11d,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007efefccea0ba
  4.40%  │  0x00007efefcce9e9c: cmp    r11d,0xf3018       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007efefcce9ea3: jne    0x00007efefcce9f7e  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 118)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  3.09%  │  0x00007efefcce9ea9: mov    r10,QWORD PTR [rsp+0x60]
  2.62%  │  0x00007efefcce9eae: mov    r10d,DWORD PTR [r10+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@26 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.84%  │  0x00007efefcce9eb2: mov    r11d,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007efefccea0ca
  0.66%  │  0x00007efefcce9eb7: mov    r8d,r9d
  3.03%  │  0x00007efefcce9eba: shl    r8d,0x4
  2.19%  │  0x00007efefcce9ebe: add    r8d,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 77)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 118)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.90%  │  0x00007efefcce9ec1: cmp    r11d,0xf3228       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007efefcce9ec8: jne    0x00007efefcce9f9a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@41 (line 119)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.08%  │  0x00007efefcce9ece: mov    r10,QWORD PTR [rsp+0x60]
  2.99%  │  0x00007efefcce9ed3: mov    ecx,DWORD PTR [r10+0x14]  ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@56 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.39%  │  0x00007efefcce9ed7: mov    r11d,DWORD PTR [r12+rcx*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007efefccea0da
  0.96%  │  0x00007efefcce9edc: imul   r10d,r9d,0x13
  0.90%  │  0x00007efefcce9ee0: add    r10d,r8d           ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@50 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.95%  │  0x00007efefcce9ee3: cmp    r11d,0xf3438       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
         │  0x00007efefcce9eea: jne    0x00007efefcce9fba  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@71 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.94%  │  0x00007efefcce9ef0: mov    r11,QWORD PTR [rsp+0x60]
  0.90%  │  0x00007efefcce9ef5: mov    r11d,DWORD PTR [r11+0x18]
         │                                                ;*getfield alg4 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@86 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.84%  │  0x00007efefcce9ef9: mov    ecx,DWORD PTR [r12+r11*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007efefccea0ea
  2.89%  │  0x00007efefcce9efe: imul   r8d,r9d,0x17
  2.33%  │  0x00007efefcce9f02: add    r8d,r10d           ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@80 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.06%  │  0x00007efefcce9f05: cmp    ecx,0xf3648        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg4&apos;)}
         │  0x00007efefcce9f0b: jne    0x00007efefcce9fda  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@101 (line 121)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.74%  │  0x00007efefcce9f11: mov    QWORD PTR [rsp+0x50],rbx
  2.54%  │  0x00007efefcce9f16: imul   edx,r9d,0x1d
  2.60%  │  0x00007efefcce9f1a: add    edx,r8d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@110 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.90%  │  0x00007efefcce9f1d: mov    rsi,QWORD PTR [rsp]
  0.82%  │  0x00007efefcce9f21: xchg   ax,ax
  2.87%  │  0x00007efefcce9f23: call   0x00007efefcc68f00  ; ImmutableOopMap{[80]=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  1.15%  │  0x00007efefcce9f28: mov    rbx,QWORD PTR [rsp+0x50]
  3.42%  │  0x00007efefcce9f2d: movzx  r11d,BYTE PTR [rbx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  2.25%  │  0x00007efefcce9f35: mov    r10,QWORD PTR [r15+0x108]
  0.86%  │  0x00007efefcce9f3c: add    rbp,0x1            ; ImmutableOopMap{rbx=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.74%  │  0x00007efefcce9f40: test   DWORD PTR [r10],eax  ;   {poll}
  3.09%  │  0x00007efefcce9f43: test   r11d,r11d
         ╰  0x00007efefcce9f46: je     0x00007efefcce9e80  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
            0x00007efefcce9f4c: movabs r10,0x7eff0f943a00
            0x00007efefcce9f56: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@39 (line 198)
            0x00007efefcce9f59: mov    r10,QWORD PTR [rsp+0x58]
            0x00007efefcce9f5e: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@54 (line 200)
            0x00007efefcce9f62: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 69.36%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 130 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007efefcce4aa0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007efefcce4aa4: movabs r12,0x800000000
            0x00007efefcce4aae: add    r10,r12
            0x00007efefcce4ab1: xor    r12,r12
            0x00007efefcce4ab4: cmp    rax,r10
            0x00007efefcce4ab7: jne    0x00007efefcc68c80  ;   {runtime_call ic_miss_stub}
            0x00007efefcce4abd: data16 xchg ax,ax
          [Verified Entry Point]
  3.30%     0x00007efefcce4ac0: mov    DWORD PTR [rsp-0x14000],eax
  3.07%     0x00007efefcce4ac7: push   rbp
  1.99%     0x00007efefcce4ac8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  1.49%     0x00007efefcce4acc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.89%     0x00007efefcce4ad3: mov    r8d,edx
  2.11%     0x00007efefcce4ad6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.80%     0x00007efefcce4add: mov    r9d,edx
  0.72%     0x00007efefcce4ae0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.76%     0x00007efefcce4ae3: cmp    r9d,r8d
         ╭  0x00007efefcce4ae6: je     0x00007efefcce4af8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  1.97%  │  0x00007efefcce4ae8: add    rsp,0x20
  0.96%  │  0x00007efefcce4aec: pop    rbp
  0.68%  │  0x00007efefcce4aed: mov    r10,QWORD PTR [r15+0x108]
  2.76%  │  0x00007efefcce4af4: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.13%  │  0x00007efefcce4af7: ret    
         ↘  0x00007efefcce4af8: mov    rbp,rsi
            0x00007efefcce4afb: mov    DWORD PTR [rsp],edx
            0x00007efefcce4afe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007efefcce4b03: mov    DWORD PTR [rsp+0x8],r8d
            0x00007efefcce4b08: mov    esi,0xffffff4d
            0x00007efefcce4b0d: xchg   ax,ax
            0x00007efefcce4b0f: call   0x00007efefcc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 27.65%  <total for region 2>

....[Hottest Regions]...............................................................................
 69.36%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 134 (195 bytes) 
 27.65%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 130 (55 bytes) 
  2.74%       kernel  [unknown] (6 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%  interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.02%    libjvm.so  _ZN14HandshakeState12cancel_innerEP10JavaThread (0 bytes) 
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 69.36%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 134 
 27.65%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 130 
  2.93%       kernel  [unknown] 
  0.02%  interpreter  method entry point (kind = zerolocals)  
  0.02%    libjvm.so  _ZN14HandshakeState12cancel_innerEP10JavaThread 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.01%           c2
  2.93%       kernel
  0.02%    libjvm.so
  0.02%  interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 50073 total address lines.
Perf output processed (skipped 6.187 seconds):
 Column 1: cycles (5100 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 134 (195 bytes) 

            0x00007f5448ce9e64: mov    rbx,QWORD PTR [rsp+0x50]
            0x00007f5448ce9e69: movzx  r10d,BYTE PTR [rbx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f5448cea15e
            0x00007f5448ce9e71: test   r10d,r10d
            0x00007f5448ce9e74: jne    0x00007f5448ce9ffa  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
            0x00007f5448ce9e7a: mov    ebp,0x1
            0x00007f5448ce9e7f: nop                       ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
  1.90%  ↗  0x00007f5448ce9e80: mov    r10,QWORD PTR [rsp+0x60]
  1.04%  │  0x00007f5448ce9e85: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@5 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.65%  │  0x00007f5448ce9e89: movabs r11,0x71b859e90    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b859e90} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic4KtState&apos;)}
  3.29%  │  0x00007f5448ce9e93: mov    r9d,DWORD PTR [r11+0x74]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@9 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.02%  │  0x00007f5448ce9e97: mov    r11d,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f5448cea0ba
  4.08%  │  0x00007f5448ce9e9c: cmp    r11d,0xf3018       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007f5448ce9ea3: jne    0x00007f5448ce9f7e  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 118)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.80%  │  0x00007f5448ce9ea9: mov    r10,QWORD PTR [rsp+0x60]
  2.08%  │  0x00007f5448ce9eae: mov    r10d,DWORD PTR [r10+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@26 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.04%  │  0x00007f5448ce9eb2: mov    r11d,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f5448cea0ca
  0.65%  │  0x00007f5448ce9eb7: mov    r8d,r9d
  3.33%  │  0x00007f5448ce9eba: shl    r8d,0x4
  1.98%  │  0x00007f5448ce9ebe: add    r8d,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 77)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 118)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.73%  │  0x00007f5448ce9ec1: cmp    r11d,0xf3228       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007f5448ce9ec8: jne    0x00007f5448ce9f9a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@41 (line 119)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.69%  │  0x00007f5448ce9ece: mov    r10,QWORD PTR [rsp+0x60]
  3.08%  │  0x00007f5448ce9ed3: mov    ecx,DWORD PTR [r10+0x14]  ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@56 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.16%  │  0x00007f5448ce9ed7: mov    r11d,DWORD PTR [r12+rcx*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f5448cea0da
  1.02%  │  0x00007f5448ce9edc: imul   r10d,r9d,0x13
  0.86%  │  0x00007f5448ce9ee0: add    r10d,r8d           ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@50 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  3.27%  │  0x00007f5448ce9ee3: cmp    r11d,0xf3438       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
         │  0x00007f5448ce9eea: jne    0x00007f5448ce9fba  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@71 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.10%  │  0x00007f5448ce9ef0: mov    r11,QWORD PTR [rsp+0x60]
  1.08%  │  0x00007f5448ce9ef5: mov    r11d,DWORD PTR [r11+0x18]
         │                                                ;*getfield alg4 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@86 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.78%  │  0x00007f5448ce9ef9: mov    ecx,DWORD PTR [r12+r11*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f5448cea0ea
  2.73%  │  0x00007f5448ce9efe: imul   r8d,r9d,0x17
  2.22%  │  0x00007f5448ce9f02: add    r8d,r10d           ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@80 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.02%  │  0x00007f5448ce9f05: cmp    ecx,0xf3648        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg4&apos;)}
         │  0x00007f5448ce9f0b: jne    0x00007f5448ce9fda  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@101 (line 121)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.51%  │  0x00007f5448ce9f11: mov    QWORD PTR [rsp+0x50],rbx
  2.92%  │  0x00007f5448ce9f16: imul   edx,r9d,0x1d
  2.22%  │  0x00007f5448ce9f1a: add    edx,r8d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@110 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.98%  │  0x00007f5448ce9f1d: mov    rsi,QWORD PTR [rsp]
  0.76%  │  0x00007f5448ce9f21: xchg   ax,ax
  2.49%  │  0x00007f5448ce9f23: call   0x00007f5448c68f00  ; ImmutableOopMap{[80]=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  1.43%  │  0x00007f5448ce9f28: mov    rbx,QWORD PTR [rsp+0x50]
  3.47%  │  0x00007f5448ce9f2d: movzx  r11d,BYTE PTR [rbx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  1.86%  │  0x00007f5448ce9f35: mov    r10,QWORD PTR [r15+0x108]
  0.88%  │  0x00007f5448ce9f3c: add    rbp,0x1            ; ImmutableOopMap{rbx=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.80%  │  0x00007f5448ce9f40: test   DWORD PTR [r10],eax  ;   {poll}
  3.10%  │  0x00007f5448ce9f43: test   r11d,r11d
         ╰  0x00007f5448ce9f46: je     0x00007f5448ce9e80  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
            0x00007f5448ce9f4c: movabs r10,0x7f545c018a00
            0x00007f5448ce9f56: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@39 (line 198)
            0x00007f5448ce9f59: mov    r10,QWORD PTR [rsp+0x58]
            0x00007f5448ce9f5e: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@54 (line 200)
            0x00007f5448ce9f62: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 68.02%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 130 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f5448ce4aa0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f5448ce4aa4: movabs r12,0x800000000
            0x00007f5448ce4aae: add    r10,r12
            0x00007f5448ce4ab1: xor    r12,r12
            0x00007f5448ce4ab4: cmp    rax,r10
            0x00007f5448ce4ab7: jne    0x00007f5448c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f5448ce4abd: data16 xchg ax,ax
          [Verified Entry Point]
  3.14%     0x00007f5448ce4ac0: mov    DWORD PTR [rsp-0x14000],eax
  3.86%     0x00007f5448ce4ac7: push   rbp
  2.31%     0x00007f5448ce4ac8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  1.57%     0x00007f5448ce4acc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.84%     0x00007f5448ce4ad3: mov    r8d,edx
  2.27%     0x00007f5448ce4ad6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.22%     0x00007f5448ce4add: mov    r9d,edx
  0.88%     0x00007f5448ce4ae0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.76%     0x00007f5448ce4ae3: cmp    r9d,r8d
         ╭  0x00007f5448ce4ae6: je     0x00007f5448ce4af8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  1.96%  │  0x00007f5448ce4ae8: add    rsp,0x20
  0.90%  │  0x00007f5448ce4aec: pop    rbp
  0.80%  │  0x00007f5448ce4aed: mov    r10,QWORD PTR [r15+0x108]
  2.51%  │  0x00007f5448ce4af4: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.20%  │  0x00007f5448ce4af7: ret    
         ↘  0x00007f5448ce4af8: mov    rbp,rsi
            0x00007f5448ce4afb: mov    DWORD PTR [rsp],edx
            0x00007f5448ce4afe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f5448ce4b03: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f5448ce4b08: mov    esi,0xffffff4d
            0x00007f5448ce4b0d: xchg   ax,ax
            0x00007f5448ce4b0f: call   0x00007f5448c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 29.24%  <total for region 2>

....[Hottest Regions]...............................................................................
 68.02%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 134 (195 bytes) 
 29.24%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 130 (55 bytes) 
  2.20%       kernel  [unknown] (6 bytes) 
  0.08%       kernel  [unknown] (16 bytes) 
  0.04%       kernel  [unknown] (30 bytes) 
  0.04%  interpreter  method entry point (kind = zerolocals)  (1 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%  interpreter  iconst_3  6 iconst_3  (0 bytes) 
  0.02%  interpreter  dup  89 dup  (0 bytes) 
  0.10%  <...other 5 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 68.02%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 134 
 29.24%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 130 
  2.55%       kernel  [unknown] 
  0.04%  interpreter  method entry point (kind = zerolocals)  
  0.02%      Unknown  java.lang.System::arraycopy, version 92 
  0.02%  interpreter  iconst_3  6 iconst_3  
  0.02%    libjvm.so  _ZN6Thread10muxReleaseEPVl 
  0.02%  interpreter  dup  89 dup  
  0.02%  interpreter  lcmp  148 lcmp  
  0.02%    libjvm.so  _ZN14AccessInternal19PostRuntimeDispatchIN12G1BarrierSet13AccessBarrierILm804918ES1_EELNS_11BarrierTypeE5ELm804918EE18oop_access_barrierEP7oopDescS7_lS7_ 
  0.02%    libjvm.so  _ZN7Monitor5IWaitEP6Threadl 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.25%           c2
  2.55%       kernel
  0.10%  interpreter
  0.06%    libjvm.so
  0.02%      Unknown
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 50073 total address lines.
Perf output processed (skipped 6.145 seconds):
 Column 1: cycles (5128 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 133 (195 bytes) 

            0x00007f95a0ce9864: mov    rbx,QWORD PTR [rsp+0x50]
            0x00007f95a0ce9869: movzx  r10d,BYTE PTR [rbx+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
                                                          ; implicit exception: dispatches to 0x00007f95a0ce9b5e
            0x00007f95a0ce9871: test   r10d,r10d
            0x00007f95a0ce9874: jne    0x00007f95a0ce99fa  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
            0x00007f95a0ce987a: mov    ebp,0x1
            0x00007f95a0ce987f: nop                       ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
  2.52%  ↗  0x00007f95a0ce9880: mov    r10,QWORD PTR [rsp+0x60]
  1.23%  │  0x00007f95a0ce9885: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield alg1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@5 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.72%  │  0x00007f95a0ce9889: movabs r11,0x71b859e18    ;   {oop(a &apos;java/lang/Class&apos;{0x000000071b859e18} = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic4KtState&apos;)}
  3.04%  │  0x00007f95a0ce9893: mov    r9d,DWORD PTR [r11+0x74]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@9 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.66%  │  0x00007f95a0ce9897: mov    r11d,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f95a0ce9aba
  4.29%  │  0x00007f95a0ce989c: cmp    r11d,0xf3018       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
         │  0x00007f95a0ce98a3: jne    0x00007f95a0ce997e  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 118)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.69%  │  0x00007f95a0ce98a9: mov    r10,QWORD PTR [rsp+0x60]
  2.05%  │  0x00007f95a0ce98ae: mov    r10d,DWORD PTR [r10+0x10]
         │                                                ;*getfield alg2 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@26 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.86%  │  0x00007f95a0ce98b2: mov    r11d,DWORD PTR [r12+r10*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f95a0ce9aca
  0.74%  │  0x00007f95a0ce98b7: mov    r8d,r9d
  3.02%  │  0x00007f95a0ce98ba: shl    r8d,0x4
  2.07%  │  0x00007f95a0ce98be: add    r8d,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 77)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 118)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.15%  │  0x00007f95a0ce98c1: cmp    r11d,0xf3228       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
         │  0x00007f95a0ce98c8: jne    0x00007f95a0ce999a  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@41 (line 119)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.66%  │  0x00007f95a0ce98ce: mov    r10,QWORD PTR [rsp+0x60]
  3.22%  │  0x00007f95a0ce98d3: mov    ecx,DWORD PTR [r10+0x14]  ;*getfield alg3 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@56 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.05%  │  0x00007f95a0ce98d7: mov    r11d,DWORD PTR [r12+rcx*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f95a0ce9ada
  0.94%  │  0x00007f95a0ce98dc: imul   r10d,r9d,0x13
  0.78%  │  0x00007f95a0ce98e0: add    r10d,r8d           ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@50 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  3.14%  │  0x00007f95a0ce98e3: cmp    r11d,0xf3438       ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
         │  0x00007f95a0ce98ea: jne    0x00007f95a0ce99ba  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@71 (line 120)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.20%  │  0x00007f95a0ce98f0: mov    r11,QWORD PTR [rsp+0x60]
  1.01%  │  0x00007f95a0ce98f5: mov    r11d,DWORD PTR [r11+0x18]
         │                                                ;*getfield alg4 {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@86 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.74%  │  0x00007f95a0ce98f9: mov    ecx,DWORD PTR [r12+r11*8+0x8]
         │                                                ; implicit exception: dispatches to 0x00007f95a0ce9aea
  3.14%  │  0x00007f95a0ce98fe: imul   r8d,r9d,0x17
  2.15%  │  0x00007f95a0ce9902: add    r8d,r10d           ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@80 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.05%  │  0x00007f95a0ce9905: cmp    ecx,0xf3648        ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg4&apos;)}
         │  0x00007f95a0ce990b: jne    0x00007f95a0ce99da  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@101 (line 121)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.68%  │  0x00007f95a0ce9911: mov    QWORD PTR [rsp+0x50],rbx
  3.24%  │  0x00007f95a0ce9916: imul   edx,r9d,0x1d
  2.03%  │  0x00007f95a0ce991a: add    edx,r8d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@110 (line 62)
         │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 33)
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.74%  │  0x00007f95a0ce991d: mov    rsi,QWORD PTR [rsp]
  0.82%  │  0x00007f95a0ce9921: xchg   ax,ax
  2.79%  │  0x00007f95a0ce9923: call   0x00007f95a0c68f00  ; ImmutableOopMap{[80]=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │                                                ;   {optimized virtual_call}
  0.98%  │  0x00007f95a0ce9928: mov    rbx,QWORD PTR [rsp+0x50]
  3.30%  │  0x00007f95a0ce992d: movzx  r11d,BYTE PTR [rbx+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  2.03%  │  0x00007f95a0ce9935: mov    r10,QWORD PTR [r15+0x108]
  0.82%  │  0x00007f95a0ce993c: add    rbp,0x1            ; ImmutableOopMap{rbx=Oop [88]=Oop [96]=Oop [104]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.55%  │  0x00007f95a0ce9940: test   DWORD PTR [r10],eax  ;   {poll}
  2.69%  │  0x00007f95a0ce9943: test   r11d,r11d
         ╰  0x00007f95a0ce9946: je     0x00007f95a0ce9880  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@38 (line 198)
            0x00007f95a0ce994c: movabs r10,0x7f95b21d4a00
            0x00007f95a0ce9956: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@39 (line 198)
            0x00007f95a0ce9959: mov    r10,QWORD PTR [rsp+0x58]
            0x00007f95a0ce995e: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@54 (line 200)
            0x00007f95a0ce9962: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@42 (line 198)
....................................................................................................
 67.77%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f95a0ce1c20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f95a0ce1c24: movabs r12,0x800000000
            0x00007f95a0ce1c2e: add    r10,r12
            0x00007f95a0ce1c31: xor    r12,r12
            0x00007f95a0ce1c34: cmp    rax,r10
            0x00007f95a0ce1c37: jne    0x00007f95a0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f95a0ce1c3d: data16 xchg ax,ax
          [Verified Entry Point]
  3.16%     0x00007f95a0ce1c40: mov    DWORD PTR [rsp-0x14000],eax
  3.41%     0x00007f95a0ce1c47: push   rbp
  2.48%     0x00007f95a0ce1c48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  1.81%     0x00007f95a0ce1c4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.87%     0x00007f95a0ce1c53: mov    r8d,edx
  2.20%     0x00007f95a0ce1c56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.84%     0x00007f95a0ce1c5d: mov    r9d,edx
  0.66%     0x00007f95a0ce1c60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.93%     0x00007f95a0ce1c63: cmp    r9d,r8d
         ╭  0x00007f95a0ce1c66: je     0x00007f95a0ce1c78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  2.03%  │  0x00007f95a0ce1c68: add    rsp,0x20
  1.23%  │  0x00007f95a0ce1c6c: pop    rbp
  0.94%  │  0x00007f95a0ce1c6d: mov    r10,QWORD PTR [r15+0x108]
  2.67%  │  0x00007f95a0ce1c74: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.89%  │  0x00007f95a0ce1c77: ret    
         ↘  0x00007f95a0ce1c78: mov    rbp,rsi
            0x00007f95a0ce1c7b: mov    DWORD PTR [rsp],edx
            0x00007f95a0ce1c7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f95a0ce1c83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f95a0ce1c88: mov    esi,0xffffff4d
            0x00007f95a0ce1c8d: xchg   ax,ax
            0x00007f95a0ce1c8f: call   0x00007f95a0c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 29.11%  <total for region 2>

....[Hottest Regions]...............................................................................
 67.77%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 133 (195 bytes) 
 29.11%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 (55 bytes) 
  2.50%       kernel  [unknown] (6 bytes) 
  0.08%       kernel  [unknown] (29 bytes) 
  0.08%       kernel  [unknown] (13 bytes) 
  0.08%       kernel  [unknown] (0 bytes) 
  0.06%  interpreter  method entry point (kind = zerolocals)  (11 bytes) 
  0.04%    libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (32 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%       kernel  [unknown] (0 bytes) 
  0.02%  interpreter  if_icmpge  162 if_icmpge  (0 bytes) 
  0.02%  interpreter  fast_aload_0  220 fast_aload_0  (0 bytes) 
  0.04%  <...other 2 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 67.77%           c2  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 133 
 29.11%           c2  org.openjdk.jmh.infra.Blackhole::consume, version 129 
  2.93%       kernel  [unknown] 
  0.06%  interpreter  method entry point (kind = zerolocals)  
  0.04%    libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.02%    libjvm.so  SpinPause 
  0.02%  interpreter  fast_aload_0  220 fast_aload_0  
  0.02%  interpreter  if_icmpge  162 if_icmpge  
  0.02%    libjvm.so  _ZN8Rewriter21rewrite_invokespecialEPhibPb 
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.88%           c2
  2.93%       kernel
  0.10%  interpreter
  0.08%    libjvm.so
....................................................................................................
 99.98%  <totals>



# Run complete. Total time: 00:02:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                           (param)  Mode  Cnt   Score   Error  Units
MegamorphicCallJavaBenchmark.Megamorphic3Java             3  avgt   15   8.396 ± 0.335  ns/op
MegamorphicCallJavaBenchmark.Megamorphic3Java:·asm        3  avgt          NaN            ---
MegamorphicCallJavaBenchmark.Megamorphic4Java             3  avgt   15  10.523 ± 0.534  ns/op
MegamorphicCallJavaBenchmark.Megamorphic4Java:·asm        3  avgt          NaN            ---
MegamorphicCallKtBenchmark.Megamorphic3Kt                 3  avgt   15   3.801 ± 0.172  ns/op
MegamorphicCallKtBenchmark.Megamorphic3Kt:·asm            3  avgt          NaN            ---
MegamorphicCallKtBenchmark.Megamorphic4Kt                 3  avgt   15   4.234 ± 0.214  ns/op
MegamorphicCallKtBenchmark.Megamorphic4Kt:·asm            3  avgt          NaN            ---

Few thoughts:
    - Inlining megamorphic compile() function saves the overhead and transforms the calls into monomorphic calls which basically explains the performance difference!

        public final int megamorphic3Call() {                       <<-- Kotlin
            MegamorphicCallKtBenchmark.Companion var1 = MegamorphicCallKtBenchmark.Companion;

            MegamorphicCallKtBenchmark.VirtualCallKtCMath cmath$iv = this.alg1;
            int i$iv = param;
            int $i$f$compute$kotlin_vs_java_benchmarks = false;
            int var10000 = cmath$iv.compute(i$iv);                  <<-- monomorphic call
            var1 = MegamorphicCallKtBenchmark.Companion;

            cmath$iv = this.alg2;
            i$iv = param;
            int var5 = var10000;
            $i$f$compute$kotlin_vs_java_benchmarks = false;
            int var6 = cmath$iv.compute(i$iv);                      <<-- monomorphic call
            var10000 = var5 + var6;
            var1 = MegamorphicCallKtBenchmark.Companion;

            cmath$iv = this.alg3;
            i$iv = param;
            var5 = var10000;
            $i$f$compute$kotlin_vs_java_benchmarks = false;
            var6 = cmath$iv.compute(i$iv);                          <<-- monomorphic call
            return var5 + var6;
        }

        int megamorphic3Call() {                                    <<-- Java
            return MegamorphicCallJavaBenchmark.compute(this.alg1, param) +
                MegamorphicCallJavaBenchmark.compute(this.alg2, param) +
                MegamorphicCallJavaBenchmark.compute(this.alg3, param);
        }

    - Except of megamorphic functions I would not recommand using inlining since it might be dangerous!
        - @see http://www.cs.technion.ac.il/users/yechiel/c++-faq/inline-and-perf.html
