# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsJavaBenchmark.defaultArguments
# Parameters: (param = 8, shift = 2)

# Run progress: 0.00% complete, ETA 00:02:00
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.303 ns/op
# Warmup Iteration   2: 2.386 ns/op
# Warmup Iteration   3: 2.295 ns/op
# Warmup Iteration   4: 2.227 ns/op
# Warmup Iteration   5: 2.134 ns/op
Iteration   1: 2.161 ns/op
Iteration   2: 2.139 ns/op
Iteration   3: 2.158 ns/op
Iteration   4: 2.142 ns/op
Iteration   5: 2.176 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 8.33% complete, ETA 00:02:23
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.808 ns/op
# Warmup Iteration   2: 2.607 ns/op
# Warmup Iteration   3: 2.455 ns/op
# Warmup Iteration   4: 2.304 ns/op
# Warmup Iteration   5: 2.282 ns/op
Iteration   1: 2.403 ns/op
Iteration   2: 2.543 ns/op
Iteration   3: 2.529 ns/op
Iteration   4: 2.399 ns/op
Iteration   5: 2.369 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 16.67% complete, ETA 00:02:10
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.541 ns/op
# Warmup Iteration   2: 2.459 ns/op
# Warmup Iteration   3: 2.261 ns/op
# Warmup Iteration   4: 2.227 ns/op
# Warmup Iteration   5: 2.312 ns/op
Iteration   1: 2.632 ns/op
Iteration   2: 2.654 ns/op
Iteration   3: 2.632 ns/op
Iteration   4: 2.610 ns/op
Iteration   5: 2.762 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.defaultArguments":
  2.421 ±(99.9%) 0.236 ns/op [Average]
  (min, avg, max) = (2.139, 2.421, 2.762), stdev = 0.220
  CI (99.9%): [2.185, 2.656] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.defaultArguments:·asm":
PrintAssembly processed: 140166 total address lines.
Perf output processed (skipped 6.987 seconds):
 Column 1: cycles (5281 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 489 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f14747387a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f14747387a4: movabs r12,0x800000000
            0x00007f14747387ae: add    r10,r12
            0x00007f14747387b1: xor    r12,r12
            0x00007f14747387b4: cmp    rax,r10
            0x00007f14747387b7: jne    0x00007f146cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007f14747387bd: data16 xchg ax,ax
          [Verified Entry Point]
  7.69%     0x00007f14747387c0: mov    DWORD PTR [rsp-0x14000],eax
  4.58%     0x00007f14747387c7: push   rbp
  3.41%     0x00007f14747387c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.21%     0x00007f14747387cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  3.43%     0x00007f14747387d3: mov    r8d,edx
  3.18%     0x00007f14747387d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  3.73%     0x00007f14747387dd: mov    r9d,edx
  2.03%     0x00007f14747387e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  3.14%     0x00007f14747387e3: cmp    r9d,r8d
         ╭  0x00007f14747387e6: je     0x00007f14747387f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.60%  │  0x00007f14747387e8: add    rsp,0x20
  3.31%  │  0x00007f14747387ec: pop    rbp
  2.10%  │  0x00007f14747387ed: mov    r10,QWORD PTR [r15+0x108]
  2.71%  │  0x00007f14747387f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.77%  │  0x00007f14747387f7: ret    
         ↘  0x00007f14747387f8: mov    rbp,rsi
            0x00007f14747387fb: mov    DWORD PTR [rsp],edx
            0x00007f14747387fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f1474738803: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f1474738808: mov    esi,0xffffff4d
            0x00007f147473880d: xchg   ax,ax
            0x00007f147473880f: call   0x00007f146cc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 51.88%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 520 (46 bytes) 

             0x00007f147473c998: mov    r10,QWORD PTR [rsp]
             0x00007f147473c99c: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f147473ca56
             0x00007f147473c9a4: mov    ebp,0x1
             0x00007f147473c9a9: test   r11d,r11d
         ╭   0x00007f147473c9ac: jne    0x00007f147473c9e3  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
         │   0x00007f147473c9ae: xchg   ax,ax              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
  4.20%  │↗  0x00007f147473c9b0: mov    r10,QWORD PTR [rsp+0x40]
  4.15%  ││  0x00007f147473c9b5: mov    edx,DWORD PTR [r10+0xc]  ;*getfield param {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments@2 (line 44)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@17 (line 190)
  5.30%  ││  0x00007f147473c9b9: mov    rsi,QWORD PTR [rsp+0x38]
  1.80%  ││  0x00007f147473c9be: nop
  2.71%  ││  0x00007f147473c9bf: call   0x00007f146cc68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  5.49%  ││  0x00007f147473c9c4: mov    r10,QWORD PTR [rsp]
  4.34%  ││  0x00007f147473c9c8: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  5.38%  ││  0x00007f147473c9d0: mov    r11,QWORD PTR [r15+0x108]
  4.15%  ││  0x00007f147473c9d7: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  1.67%  ││  0x00007f147473c9db: test   DWORD PTR [r11],eax  ;   {poll}
  2.90%  ││  0x00007f147473c9de: test   r10d,r10d
         │╰  0x00007f147473c9e1: je     0x00007f147473c9b0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f147473c9e3: movabs r10,0x7f148c98ca00
             0x00007f147473c9ed: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@37 (line 193)
             0x00007f147473c9f0: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f147473c9f5: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@52 (line 195)
             0x00007f147473c9f9: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 42.08%  <total for region 2>

....[Hottest Regions]...............................................................................
 51.88%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 489 (55 bytes) 
 42.08%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 520 (46 bytes) 
  2.56%              kernel  [unknown] (6 bytes) 
  0.21%              kernel  [unknown] (15 bytes) 
  0.15%              kernel  [unknown] (0 bytes) 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (43 bytes) 
  0.09%              kernel  [unknown] (1 bytes) 
  0.09%              kernel  [unknown] (53 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm (38 bytes) 
  0.06%           libjvm.so  _ZN13defaultStream5writeEPKcm (0 bytes) 
  0.04%              kernel  [unknown] (7 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  0.04%              kernel  [unknown] (25 bytes) 
  0.04%              kernel  [unknown] (30 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  2.16%  <...other 106 warm regions...>
....................................................................................................
 99.96%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 51.88%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 489 
 42.08%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 520 
  4.60%              kernel  [unknown] 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%        libc-2.28.so  vfprintf 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.04%      hsdis-amd64.so  putop 
  0.04%        libc-2.28.so  _IO_fwrite 
  0.04%        libc-2.28.so  syscall 
  0.04%         interpreter  invokespecial  183 invokespecial  
  0.04%      hsdis-amd64.so  print_insn 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%        libc-2.28.so  __stpcpy_sse2_unaligned 
  0.04%        libc-2.28.so  _IO_padn 
  0.02%           libjvm.so  _ZN11LIR_OprFact8intConstEi 
  0.02%           libjvm.so  _ZN7VMError17is_error_reportedEv 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%           libjvm.so  d_make_comp 
  0.62%  <...other 33 warm methods...>
....................................................................................................
 99.96%  <totals>

....[Distribution by Source]........................................................................
 93.98%         c2, level 4
  4.60%              kernel
  0.70%           libjvm.so
  0.36%        libc-2.28.so
  0.15%         interpreter
  0.13%      hsdis-amd64.so
  0.02%  libpthread-2.28.so
  0.02%         c1, level 3
....................................................................................................
 99.96%  <totals>

PrintAssembly processed: 142556 total address lines.
Perf output processed (skipped 7.157 seconds):
 Column 1: cycles (5247 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 489 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f7bec738a20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f7bec738a24: movabs r12,0x800000000
            0x00007f7bec738a2e: add    r10,r12
            0x00007f7bec738a31: xor    r12,r12
            0x00007f7bec738a34: cmp    rax,r10
            0x00007f7bec738a37: jne    0x00007f7be4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f7bec738a3d: data16 xchg ax,ax
          [Verified Entry Point]
  7.05%     0x00007f7bec738a40: mov    DWORD PTR [rsp-0x14000],eax
  4.55%     0x00007f7bec738a47: push   rbp
  3.43%     0x00007f7bec738a48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.32%     0x00007f7bec738a4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  3.01%     0x00007f7bec738a53: mov    r8d,edx
  3.28%     0x00007f7bec738a56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  3.75%     0x00007f7bec738a5d: mov    r9d,edx
  1.33%     0x00007f7bec738a60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.82%     0x00007f7bec738a63: cmp    r9d,r8d
         ╭  0x00007f7bec738a66: je     0x00007f7bec738a78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.33%  │  0x00007f7bec738a68: add    rsp,0x20
  3.47%  │  0x00007f7bec738a6c: pop    rbp
  2.00%  │  0x00007f7bec738a6d: mov    r10,QWORD PTR [r15+0x108]
  2.73%  │  0x00007f7bec738a74: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.90%  │  0x00007f7bec738a77: ret    
         ↘  0x00007f7bec738a78: mov    rbp,rsi
            0x00007f7bec738a7b: mov    DWORD PTR [rsp],edx
            0x00007f7bec738a7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f7bec738a83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f7bec738a88: mov    esi,0xffffff4d
            0x00007f7bec738a8d: xchg   ax,ax
            0x00007f7bec738a8f: call   0x00007f7be4c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 51.97%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 522 (49 bytes) 

             0x00007f7bec73c298: mov    r10,QWORD PTR [rsp]
             0x00007f7bec73c29c: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f7bec73c356
             0x00007f7bec73c2a4: mov    ebp,0x1
             0x00007f7bec73c2a9: test   r11d,r11d
         ╭   0x00007f7bec73c2ac: jne    0x00007f7bec73c2e3  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
         │   0x00007f7bec73c2ae: xchg   ax,ax              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
  3.60%  │↗  0x00007f7bec73c2b0: mov    r10,QWORD PTR [rsp+0x40]
  4.27%  ││  0x00007f7bec73c2b5: mov    edx,DWORD PTR [r10+0xc]  ;*getfield param {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments@2 (line 44)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@17 (line 190)
  5.22%  ││  0x00007f7bec73c2b9: mov    rsi,QWORD PTR [rsp+0x38]
  1.62%  ││  0x00007f7bec73c2be: nop
  2.86%  ││  0x00007f7bec73c2bf: call   0x00007f7be4c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  7.07%  ││  0x00007f7bec73c2c4: mov    r10,QWORD PTR [rsp]
  3.60%  ││  0x00007f7bec73c2c8: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  4.52%  ││  0x00007f7bec73c2d0: mov    r11,QWORD PTR [r15+0x108]
  4.65%  ││  0x00007f7bec73c2d7: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  1.11%  ││  0x00007f7bec73c2db: test   DWORD PTR [r11],eax  ;   {poll}
  2.97%  ││  0x00007f7bec73c2de: test   r10d,r10d
  0.02%  │╰  0x00007f7bec73c2e1: je     0x00007f7bec73c2b0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f7bec73c2e3: movabs r10,0x7f7c02a3ea00
             0x00007f7bec73c2ed: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@37 (line 193)
             0x00007f7bec73c2f0: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f7bec73c2f5: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@52 (line 195)
             0x00007f7bec73c2f9: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@40 (line 193)
             0x00007f7bec73c2fd: mov    QWORD PTR [r10+0x20],0x0  ;*invokevirtual defaultArguments {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 41.51%  <total for region 2>

....[Hottest Regions]...............................................................................
 51.97%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 489 (55 bytes) 
 41.51%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 522 (49 bytes) 
  2.80%              kernel  [unknown] (6 bytes) 
  0.30%              kernel  [unknown] (39 bytes) 
  0.21%              kernel  [unknown] (3 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (6 bytes) 
  0.08%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (23 bytes) 
  0.06%              kernel  [unknown] (6 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (3 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (27 bytes) 
  0.04%              kernel  [unknown] (5 bytes) 
  0.04%              kernel  [unknown] (31 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  2.46%  <...other 126 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 51.97%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 489 
 41.51%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 522 
  5.28%              kernel  [unknown] 
  0.08%      hsdis-amd64.so  print_insn 
  0.08%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%        libc-2.28.so  vfprintf 
  0.06%           libjvm.so  _ZN12stringStream5writeEPKcm 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.04%        libc-2.28.so  _itoa_word 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.04%        libc-2.28.so  syscall 
  0.04%        libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.04%         interpreter  invokevirtual  182 invokevirtual  
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%           libjvm.so  _ZN16UseCountComputer5visitEPP11Instruction 
  0.02%           libjvm.so  _ZNK6Thread12is_VM_threadEv 
  0.02%        libc-2.28.so  _IO_fwrite 
  0.02%           libjvm.so  _ZNK6PcDesc7real_pcEPK14CompiledMethod 
  0.59%  <...other 31 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 93.48%         c2, level 4
  5.28%              kernel
  0.65%           libjvm.so
  0.32%        libc-2.28.so
  0.10%      hsdis-amd64.so
  0.10%         interpreter
  0.04%          ld-2.28.so
  0.02%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 138892 total address lines.
Perf output processed (skipped 7.691 seconds):
 Column 1: cycles (5300 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 497 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f5d00739220: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f5d00739224: movabs r12,0x800000000
            0x00007f5d0073922e: add    r10,r12
            0x00007f5d00739231: xor    r12,r12
            0x00007f5d00739234: cmp    rax,r10
            0x00007f5d00739237: jne    0x00007f5cf8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f5d0073923d: data16 xchg ax,ax
          [Verified Entry Point]
  7.09%     0x00007f5d00739240: mov    DWORD PTR [rsp-0x14000],eax
  4.36%     0x00007f5d00739247: push   rbp
  3.32%     0x00007f5d00739248: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.57%     0x00007f5d0073924c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  3.02%     0x00007f5d00739253: mov    r8d,edx
  3.43%     0x00007f5d00739256: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  4.00%     0x00007f5d0073925d: mov    r9d,edx
  1.38%     0x00007f5d00739260: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.87%     0x00007f5d00739263: cmp    r9d,r8d
         ╭  0x00007f5d00739266: je     0x00007f5d00739278  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.13%  │  0x00007f5d00739268: add    rsp,0x20
  3.58%  │  0x00007f5d0073926c: pop    rbp
  2.38%  │  0x00007f5d0073926d: mov    r10,QWORD PTR [r15+0x108]
  2.85%  │  0x00007f5d00739274: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.77%  │  0x00007f5d00739277: ret    
         ↘  0x00007f5d00739278: mov    rbp,rsi
            0x00007f5d0073927b: mov    DWORD PTR [rsp],edx
            0x00007f5d0073927e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f5d00739283: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f5d00739288: mov    esi,0xffffff4d
            0x00007f5d0073928d: xchg   ax,ax
            0x00007f5d0073928f: call   0x00007f5cf8c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 52.75%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 527 (46 bytes) 

             0x00007f5d0073c418: mov    r10,QWORD PTR [rsp]
             0x00007f5d0073c41c: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f5d0073c4d6
             0x00007f5d0073c424: mov    ebp,0x1
             0x00007f5d0073c429: test   r11d,r11d
         ╭   0x00007f5d0073c42c: jne    0x00007f5d0073c463  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
         │   0x00007f5d0073c42e: xchg   ax,ax              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
  3.91%  │↗  0x00007f5d0073c430: mov    r10,QWORD PTR [rsp+0x40]
  3.55%  ││  0x00007f5d0073c435: mov    edx,DWORD PTR [r10+0xc]  ;*getfield param {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments@2 (line 44)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@17 (line 190)
  5.23%  ││  0x00007f5d0073c439: mov    rsi,QWORD PTR [rsp+0x38]
  1.36%  ││  0x00007f5d0073c43e: nop
  2.74%  ││  0x00007f5d0073c43f: call   0x00007f5cf8c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  6.85%  ││  0x00007f5d0073c444: mov    r10,QWORD PTR [rsp]
  3.45%  ││  0x00007f5d0073c448: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  4.94%  ││  0x00007f5d0073c450: mov    r11,QWORD PTR [r15+0x108]
  4.25%  ││  0x00007f5d0073c457: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  1.17%  ││  0x00007f5d0073c45b: test   DWORD PTR [r11],eax  ;   {poll}
  2.38%  ││  0x00007f5d0073c45e: test   r10d,r10d
         │╰  0x00007f5d0073c461: je     0x00007f5d0073c430  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f5d0073c463: movabs r10,0x7f5d166d7a00
             0x00007f5d0073c46d: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@37 (line 193)
             0x00007f5d0073c470: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f5d0073c475: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@52 (line 195)
             0x00007f5d0073c479: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 39.81%  <total for region 2>

....[Hottest Regions]...............................................................................
 52.75%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 497 (55 bytes) 
 39.81%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 527 (46 bytes) 
  2.60%              kernel  [unknown] (6 bytes) 
  0.36%              kernel  [unknown] (39 bytes) 
  0.25%              kernel  [unknown] (3 bytes) 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (32 bytes) 
  0.08%              kernel  [unknown] (30 bytes) 
  0.06%              kernel  [unknown] (5 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (21 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%        libc-2.28.so  __strchr_avx2 (33 bytes) 
  0.04%              kernel  [unknown] (15 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (20 bytes) 
  0.04%              kernel  [unknown] (26 bytes) 
  3.28%  <...other 154 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 52.75%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 497 
 39.81%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 527 
  5.72%              kernel  [unknown] 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%        libc-2.28.so  __strchr_avx2 
  0.08%        libc-2.28.so  vfprintf 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%        libc-2.28.so  _IO_default_xsputn 
  0.04%      hsdis-amd64.so  putop 
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%           libjvm.so  _ZN2os17current_thread_idEv 
  0.04%        libc-2.28.so  _IO_fflush 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%  libpthread-2.28.so  __pthread_enable_asynccancel 
  0.04%        libc-2.28.so  _IO_str_init_static_internal 
  0.02%         interpreter  invoke return entry points  
  0.02%      hsdis-amd64.so  oappend 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.85%  <...other 45 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 92.57%         c2, level 4
  5.72%              kernel
  0.83%           libjvm.so
  0.47%        libc-2.28.so
  0.17%      hsdis-amd64.so
  0.11%         interpreter
  0.09%  libpthread-2.28.so
  0.02%      perf-29130.map
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsJavaBenchmark.namedArguments
# Parameters: (param = 8, shift = 2)

# Run progress: 25.00% complete, ETA 00:01:58
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.196 ns/op
# Warmup Iteration   2: 2.775 ns/op
# Warmup Iteration   3: 3.715 ns/op
# Warmup Iteration   4: 3.404 ns/op
# Warmup Iteration   5: 3.113 ns/op
Iteration   1: 2.942 ns/op
Iteration   2: 2.779 ns/op
Iteration   3: 2.743 ns/op
Iteration   4: 2.933 ns/op
Iteration   5: 2.721 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 33.33% complete, ETA 00:01:44
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.050 ns/op
# Warmup Iteration   2: 2.748 ns/op
# Warmup Iteration   3: 3.211 ns/op
# Warmup Iteration   4: 2.741 ns/op
# Warmup Iteration   5: 2.817 ns/op
Iteration   1: 2.936 ns/op
Iteration   2: 3.154 ns/op
Iteration   3: 3.066 ns/op
Iteration   4: 2.809 ns/op
Iteration   5: 2.713 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 41.67% complete, ETA 00:01:30
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.706 ns/op
# Warmup Iteration   2: 2.884 ns/op
# Warmup Iteration   3: 2.685 ns/op
# Warmup Iteration   4: 2.724 ns/op
# Warmup Iteration   5: 2.780 ns/op
Iteration   1: 2.397 ns/op
Iteration   2: 2.567 ns/op
Iteration   3: 2.452 ns/op
Iteration   4: 2.494 ns/op
Iteration   5: 2.546 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.namedArguments":
  2.750 ±(99.9%) 0.244 ns/op [Average]
  (min, avg, max) = (2.397, 2.750, 3.154), stdev = 0.228
  CI (99.9%): [2.506, 2.994] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.namedArguments:·asm":
PrintAssembly processed: 143436 total address lines.
Perf output processed (skipped 7.185 seconds):
 Column 1: cycles (5258 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 532 (54 bytes) 

             0x00007fb42873d6a4: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fb42873d76e
             0x00007fb42873d6ac: mov    ebp,0x1
             0x00007fb42873d6b1: test   r11d,r11d
         ╭   0x00007fb42873d6b4: jne    0x00007fb42873d6fb  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
         │   0x00007fb42873d6b6: data16 nop WORD PTR [rax+rax*1+0x0]
         │                                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@36 (line 193)
  3.25%  │↗  0x00007fb42873d6c0: mov    r10,QWORD PTR [rsp+0x40]
  3.92%  ││  0x00007fb42873d6c5: mov    edx,DWORD PTR [r10+0xc]
  2.15%  ││  0x00007fb42873d6c9: mov    ecx,DWORD PTR [r10+0x10]
  2.07%  ││  0x00007fb42873d6cd: shl    edx,cl             ;*ishl {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@4 (line 53)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::namedArguments@11 (line 49)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@17 (line 190)
  9.68%  ││  0x00007fb42873d6cf: mov    rsi,QWORD PTR [rsp+0x38]
  2.07%  ││  0x00007fb42873d6d4: data16 xchg ax,ax
  2.11%  ││  0x00007fb42873d6d7: call   0x00007fb420c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  6.45%  ││  0x00007fb42873d6dc: mov    r10,QWORD PTR [rsp]
  4.47%  ││  0x00007fb42873d6e0: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
  3.14%  ││  0x00007fb42873d6e8: mov    r10,QWORD PTR [r15+0x108]
  4.26%  ││  0x00007fb42873d6ef: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
  1.75%  ││  0x00007fb42873d6f3: test   DWORD PTR [r10],eax  ;   {poll}
  1.96%  ││  0x00007fb42873d6f6: test   r11d,r11d
         │╰  0x00007fb42873d6f9: je     0x00007fb42873d6c0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007fb42873d6fb: movabs r10,0x7fb43ebbea00
             0x00007fb42873d705: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@37 (line 193)
             0x00007fb42873d708: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fb42873d70d: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@52 (line 195)
             0x00007fb42873d711: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 47.28%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 500 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fb428739ea0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fb428739ea4: movabs r12,0x800000000
            0x00007fb428739eae: add    r10,r12
            0x00007fb428739eb1: xor    r12,r12
            0x00007fb428739eb4: cmp    rax,r10
            0x00007fb428739eb7: jne    0x00007fb420c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fb428739ebd: data16 xchg ax,ax
          [Verified Entry Point]
  5.76%     0x00007fb428739ec0: mov    DWORD PTR [rsp-0x14000],eax
  4.60%     0x00007fb428739ec7: push   rbp
  3.82%     0x00007fb428739ec8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.07%     0x00007fb428739ecc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.72%     0x00007fb428739ed3: mov    r8d,edx
  4.03%     0x00007fb428739ed6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.59%     0x00007fb428739edd: mov    r9d,edx
  1.84%     0x00007fb428739ee0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.47%     0x00007fb428739ee3: cmp    r9d,r8d
         ╭  0x00007fb428739ee6: je     0x00007fb428739ef8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.11%  │  0x00007fb428739ee8: add    rsp,0x20
  2.17%  │  0x00007fb428739eec: pop    rbp
  2.30%  │  0x00007fb428739eed: mov    r10,QWORD PTR [r15+0x108]
  2.53%  │  0x00007fb428739ef4: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.78%  │  0x00007fb428739ef7: ret    
         ↘  0x00007fb428739ef8: mov    rbp,rsi
            0x00007fb428739efb: mov    DWORD PTR [rsp],edx
            0x00007fb428739efe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fb428739f03: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fb428739f08: mov    esi,0xffffff4d
            0x00007fb428739f0d: xchg   ax,ax
            0x00007fb428739f0f: call   0x00007fb420c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 46.80%  <total for region 2>

....[Hottest Regions]...............................................................................
 47.28%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 532 (54 bytes) 
 46.80%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 500 (55 bytes) 
  2.03%              kernel  [unknown] (6 bytes) 
  0.29%              kernel  [unknown] (0 bytes) 
  0.23%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (49 bytes) 
  0.15%              kernel  [unknown] (30 bytes) 
  0.11%              kernel  [unknown] (0 bytes) 
  0.10%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (28 bytes) 
  0.06%              kernel  [unknown] (30 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (57 bytes) 
  0.06%              kernel  [unknown] (37 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (17 bytes) 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (48 bytes) 
  0.06%        libc-2.28.so  __strchr_avx2 (4 bytes) 
  0.04%              kernel  [unknown] (26 bytes) 
  0.04%              kernel  [unknown] (6 bytes) 
  0.04%              kernel  [unknown] (3 bytes) 
  2.34%  <...other 114 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 47.28%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 532 
 46.80%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 500 
  4.43%              kernel  [unknown] 
  0.23%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.08%        libc-2.28.so  __strchr_avx2 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%        libc-2.28.so  _IO_fwrite 
  0.06%        libc-2.28.so  vfprintf 
  0.06%        libc-2.28.so  _IO_str_init_static_internal 
  0.04%      hsdis-amd64.so  putop 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%  libpthread-2.28.so  __pthread_disable_asynccancel 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.04%           libjvm.so  _Z23resource_allocate_bytesmN17AllocFailStrategy13AllocFailEnumE 
  0.02%           libjvm.so  _ZN17InlineCacheBuffer8containsEPh 
  0.02%           libjvm.so  _ZN5Arena7AmallocEmN17AllocFailStrategy13AllocFailEnumE.constprop.263 
  0.02%           libjvm.so  _ZNK8G1Policy30predict_region_elapsed_time_msEP10HeapRegionb 
  0.02%      hsdis-amd64.so  print_displacement 
  0.55%  <...other 29 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.09%         c2, level 4
  4.43%              kernel
  0.86%           libjvm.so
  0.32%        libc-2.28.so
  0.11%      hsdis-amd64.so
  0.08%         interpreter
  0.06%  libpthread-2.28.so
  0.02%                    
  0.02%         c1, level 1
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 138803 total address lines.
Perf output processed (skipped 7.142 seconds):
 Column 1: cycles (5260 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 484 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fc8b07395a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fc8b07395a4: movabs r12,0x800000000
            0x00007fc8b07395ae: add    r10,r12
            0x00007fc8b07395b1: xor    r12,r12
            0x00007fc8b07395b4: cmp    rax,r10
            0x00007fc8b07395b7: jne    0x00007fc8a8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fc8b07395bd: data16 xchg ax,ax
          [Verified Entry Point]
  6.29%     0x00007fc8b07395c0: mov    DWORD PTR [rsp-0x14000],eax
  4.89%     0x00007fc8b07395c7: push   rbp
  3.65%     0x00007fc8b07395c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.49%     0x00007fc8b07395cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.36%     0x00007fc8b07395d3: mov    r8d,edx
  3.73%     0x00007fc8b07395d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.38%     0x00007fc8b07395dd: mov    r9d,edx
  1.81%     0x00007fc8b07395e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.47%     0x00007fc8b07395e3: cmp    r9d,r8d
         ╭  0x00007fc8b07395e6: je     0x00007fc8b07395f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.97%  │  0x00007fc8b07395e8: add    rsp,0x20
  2.36%  │  0x00007fc8b07395ec: pop    rbp
  2.83%  │  0x00007fc8b07395ed: mov    r10,QWORD PTR [r15+0x108]
  2.30%  │  0x00007fc8b07395f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.22%  │  0x00007fc8b07395f7: ret    
         ↘  0x00007fc8b07395f8: mov    rbp,rsi
            0x00007fc8b07395fb: mov    DWORD PTR [rsp],edx
            0x00007fc8b07395fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fc8b0739603: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fc8b0739608: mov    esi,0xffffff4d
            0x00007fc8b073960d: xchg   ax,ax
            0x00007fc8b073960f: call   0x00007fc8a8c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 47.74%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 511 (54 bytes) 

             0x00007fc8b073cea4: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fc8b073cf6e
             0x00007fc8b073ceac: mov    ebp,0x1
             0x00007fc8b073ceb1: test   r11d,r11d
         ╭   0x00007fc8b073ceb4: jne    0x00007fc8b073cefb  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
         │   0x00007fc8b073ceb6: data16 nop WORD PTR [rax+rax*1+0x0]
         │                                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@36 (line 193)
  3.40%  │↗  0x00007fc8b073cec0: mov    r10,QWORD PTR [rsp+0x40]
  4.26%  ││  0x00007fc8b073cec5: mov    edx,DWORD PTR [r10+0xc]
  1.52%  ││  0x00007fc8b073cec9: mov    ecx,DWORD PTR [r10+0x10]
  1.94%  ││  0x00007fc8b073cecd: shl    edx,cl             ;*ishl {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@4 (line 53)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::namedArguments@11 (line 49)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@17 (line 190)
  9.45%  ││  0x00007fc8b073cecf: mov    rsi,QWORD PTR [rsp+0x38]
  1.94%  ││  0x00007fc8b073ced4: data16 xchg ax,ax
  2.55%  ││  0x00007fc8b073ced7: call   0x00007fc8a8c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  7.47%  ││  0x00007fc8b073cedc: mov    r10,QWORD PTR [rsp]
  3.44%  ││  0x00007fc8b073cee0: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
  3.25%  ││  0x00007fc8b073cee8: mov    r10,QWORD PTR [r15+0x108]
  3.69%  ││  0x00007fc8b073ceef: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
  1.79%  ││  0x00007fc8b073cef3: test   DWORD PTR [r10],eax  ;   {poll}
  2.00%  ││  0x00007fc8b073cef6: test   r11d,r11d
         │╰  0x00007fc8b073cef9: je     0x00007fc8b073cec0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007fc8b073cefb: movabs r10,0x7fc8c8987a00
             0x00007fc8b073cf05: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@37 (line 193)
             0x00007fc8b073cf08: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fc8b073cf0d: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@52 (line 195)
             0x00007fc8b073cf11: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 46.69%  <total for region 2>

....[Hottest Regions]...............................................................................
 47.74%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 484 (55 bytes) 
 46.69%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 511 (54 bytes) 
  1.94%              kernel  [unknown] (6 bytes) 
  0.32%              kernel  [unknown] (37 bytes) 
  0.17%              kernel  [unknown] (6 bytes) 
  0.11%              kernel  [unknown] (13 bytes) 
  0.10%              kernel  [unknown] (25 bytes) 
  0.10%              kernel  [unknown] (1 bytes) 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (36 bytes) 
  0.08%              kernel  [unknown] (1 bytes) 
  0.06%              kernel  [unknown] (16 bytes) 
  0.04%              kernel  [unknown] (9 bytes) 
  0.04%              kernel  [unknown] (13 bytes) 
  0.04%              kernel  [unknown] (27 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  0.04%              kernel  [unknown] (9 bytes) 
  0.04%              kernel  [unknown] (17 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (5 bytes) 
  0.04%              kernel  [unknown] (18 bytes) 
  2.22%  <...other 113 warm regions...>
....................................................................................................
 99.96%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 47.74%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 484 
 46.69%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 511 
  4.26%              kernel  [unknown] 
  0.10%      hsdis-amd64.so  print_insn 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%        libc-2.28.so  vfprintf 
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%           libjvm.so  _ZN12stringStream5writeEPKcm 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%      hsdis-amd64.so  get_valid_dis386 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.02%      hsdis-amd64.so  oappend 
  0.02%           libjvm.so  _ZN7Monitor10notify_allEv 
  0.02%        libc-2.28.so  __strchrnul_avx2 
  0.02%           libjvm.so  _ZNK13SafePointNode14next_exceptionEv 
  0.02%           libjvm.so  _ZN11SymbolTable6lookupEiPKcij.part.47 
  0.02%           libjvm.so  _ZN11Instruction15state_values_doEP12ValueVisitor 
  0.02%           libjvm.so  _ZN15ciObjectFactoryC1EP5Arenai 
  0.02%      hsdis-amd64.so  hsdis_read_memory_func 
  0.63%  <...other 33 warm methods...>
....................................................................................................
 99.96%  <totals>

....[Distribution by Source]........................................................................
 94.43%         c2, level 4
  4.26%              kernel
  0.65%           libjvm.so
  0.30%        libc-2.28.so
  0.17%      hsdis-amd64.so
  0.08%         interpreter
  0.06%  libpthread-2.28.so
  0.02%         c1, level 3
....................................................................................................
 99.96%  <totals>

PrintAssembly processed: 146744 total address lines.
Perf output processed (skipped 7.132 seconds):
 Column 1: cycles (5244 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 514 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fdbe47399a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fdbe47399a4: movabs r12,0x800000000
            0x00007fdbe47399ae: add    r10,r12
            0x00007fdbe47399b1: xor    r12,r12
            0x00007fdbe47399b4: cmp    rax,r10
            0x00007fdbe47399b7: jne    0x00007fdbdcc68c80  ;   {runtime_call ic_miss_stub}
            0x00007fdbe47399bd: data16 xchg ax,ax
          [Verified Entry Point]
  6.45%     0x00007fdbe47399c0: mov    DWORD PTR [rsp-0x14000],eax
  4.48%     0x00007fdbe47399c7: push   rbp
  3.89%     0x00007fdbe47399c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.39%     0x00007fdbe47399cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.73%     0x00007fdbe47399d3: mov    r8d,edx
  4.41%     0x00007fdbe47399d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.36%     0x00007fdbe47399dd: mov    r9d,edx
  2.04%     0x00007fdbe47399e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.73%     0x00007fdbe47399e3: cmp    r9d,r8d
         ╭  0x00007fdbe47399e6: je     0x00007fdbe47399f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.20%  │  0x00007fdbe47399e8: add    rsp,0x20
  2.35%  │  0x00007fdbe47399ec: pop    rbp
  2.99%  │  0x00007fdbe47399ed: mov    r10,QWORD PTR [r15+0x108]
  2.50%  │  0x00007fdbe47399f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.33%  │  0x00007fdbe47399f7: ret    
         ↘  0x00007fdbe47399f8: mov    rbp,rsi
            0x00007fdbe47399fb: mov    DWORD PTR [rsp],edx
            0x00007fdbe47399fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fdbe4739a03: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fdbe4739a08: mov    esi,0xffffff4d
            0x00007fdbe4739a0d: xchg   ax,ax
            0x00007fdbe4739a0f: call   0x00007fdbdcc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 49.83%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 539 (54 bytes) 

             0x00007fdbe473c1a4: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fdbe473c26e
             0x00007fdbe473c1ac: mov    ebp,0x1
             0x00007fdbe473c1b1: test   r11d,r11d
         ╭   0x00007fdbe473c1b4: jne    0x00007fdbe473c1fb  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
         │   0x00007fdbe473c1b6: data16 nop WORD PTR [rax+rax*1+0x0]
         │                                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@36 (line 193)
  2.71%  │↗  0x00007fdbe473c1c0: mov    r10,QWORD PTR [rsp+0x40]
  3.83%  ││  0x00007fdbe473c1c5: mov    edx,DWORD PTR [r10+0xc]
  2.08%  ││  0x00007fdbe473c1c9: mov    ecx,DWORD PTR [r10+0x10]
  1.75%  ││  0x00007fdbe473c1cd: shl    edx,cl             ;*ishl {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@4 (line 53)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::namedArguments@11 (line 49)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@17 (line 190)
  9.12%  ││  0x00007fdbe473c1cf: mov    rsi,QWORD PTR [rsp+0x38]
  1.77%  ││  0x00007fdbe473c1d4: data16 xchg ax,ax
  2.71%  ││  0x00007fdbe473c1d7: call   0x00007fdbdcc68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  5.53%  ││  0x00007fdbe473c1dc: mov    r10,QWORD PTR [rsp]
  3.72%  ││  0x00007fdbe473c1e0: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
  3.22%  ││  0x00007fdbe473c1e8: mov    r10,QWORD PTR [r15+0x108]
  4.42%  ││  0x00007fdbe473c1ef: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
  1.85%  ││  0x00007fdbe473c1f3: test   DWORD PTR [r10],eax  ;   {poll}
  1.89%  ││  0x00007fdbe473c1f6: test   r11d,r11d
         │╰  0x00007fdbe473c1f9: je     0x00007fdbe473c1c0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007fdbe473c1fb: movabs r10,0x7fdbfc44ca00
             0x00007fdbe473c205: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@37 (line 193)
             0x00007fdbe473c208: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fdbe473c20d: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@52 (line 195)
             0x00007fdbe473c211: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 44.60%  <total for region 2>

....[Hottest Regions]...............................................................................
 49.83%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 514 (55 bytes) 
 44.60%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 539 (54 bytes) 
  2.38%              kernel  [unknown] (6 bytes) 
  0.29%              kernel  [unknown] (30 bytes) 
  0.23%              kernel  [unknown] (1 bytes) 
  0.10%        libc-2.28.so  syscall (25 bytes) 
  0.08%              kernel  [unknown] (29 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (3 bytes) 
  0.06%              kernel  [unknown] (27 bytes) 
  0.04%              kernel  [unknown] (3 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (5 bytes) 
  0.04%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (0 bytes) 
  1.95%  <...other 99 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 49.83%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 514 
 44.60%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 539 
  4.41%              kernel  [unknown] 
  0.10%        libc-2.28.so  syscall 
  0.08%        libc-2.28.so  _IO_fwrite 
  0.04%          ld-2.28.so  __tls_get_addr 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%        libc-2.28.so  _IO_str_init_static_internal 
  0.04%           libjvm.so  _ZN7nmethod21print_code_comment_onEP12outputStreamiPhS2_ 
  0.04%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.02%           libjvm.so  _ZN14MethodLiveness15get_liveness_atEi 
  0.02%         c1, level 3  java.util.zip.InflaterInputStream::read, version 521 
  0.02%      hsdis-amd64.so  putop 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%         interpreter  putfield  181 putfield  
  0.02%  libpthread-2.28.so  __pthread_mutex_lock 
  0.02%                      <unknown> 
  0.02%           libjvm.so  _ZN12GraphBuilder27iterate_bytecodes_for_blockEi 
  0.02%           libjvm.so  _ZNK11G1Analytics16predict_card_numEmb 
  0.59%  <...other 31 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 94.43%         c2, level 4
  4.41%              kernel
  0.51%           libjvm.so
  0.36%        libc-2.28.so
  0.11%         interpreter
  0.06%      hsdis-amd64.so
  0.04%         c1, level 3
  0.04%          ld-2.28.so
  0.02%                    
  0.02%  libpthread-2.28.so
....................................................................................................
100.00%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsKtBenchmark.defaultArguments
# Parameters: (param = 8, shift = 2)

# Run progress: 50.00% complete, ETA 00:01:17
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.516 ns/op
# Warmup Iteration   2: 2.414 ns/op
# Warmup Iteration   3: 2.323 ns/op
# Warmup Iteration   4: 2.291 ns/op
# Warmup Iteration   5: 2.339 ns/op
Iteration   1: 2.376 ns/op
Iteration   2: 2.308 ns/op
Iteration   3: 2.242 ns/op
Iteration   4: 2.241 ns/op
Iteration   5: 2.258 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 58.33% complete, ETA 00:01:04
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.772 ns/op
# Warmup Iteration   2: 2.710 ns/op
# Warmup Iteration   3: 2.505 ns/op
# Warmup Iteration   4: 2.465 ns/op
# Warmup Iteration   5: 2.173 ns/op
Iteration   1: 2.234 ns/op
Iteration   2: 2.436 ns/op
Iteration   3: 2.580 ns/op
Iteration   4: 2.576 ns/op
Iteration   5: 2.989 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 66.67% complete, ETA 00:00:51
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.553 ns/op
# Warmup Iteration   2: 2.466 ns/op
# Warmup Iteration   3: 2.512 ns/op
# Warmup Iteration   4: 2.515 ns/op
# Warmup Iteration   5: 2.450 ns/op
Iteration   1: 2.540 ns/op
Iteration   2: 2.374 ns/op
Iteration   3: 2.263 ns/op
Iteration   4: 2.244 ns/op
Iteration   5: 2.341 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsKtBenchmark.defaultArguments":
  2.400 ±(99.9%) 0.219 ns/op [Average]
  (min, avg, max) = (2.234, 2.400, 2.989), stdev = 0.205
  CI (99.9%): [2.182, 2.619] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsKtBenchmark.defaultArguments:·asm":
PrintAssembly processed: 141642 total address lines.
Perf output processed (skipped 7.279 seconds):
 Column 1: cycles (5200 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 500 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f32887395a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f32887395a4: movabs r12,0x800000000
            0x00007f32887395ae: add    r10,r12
            0x00007f32887395b1: xor    r12,r12
            0x00007f32887395b4: cmp    rax,r10
            0x00007f32887395b7: jne    0x00007f3280c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f32887395bd: data16 xchg ax,ax
          [Verified Entry Point]
  7.44%     0x00007f32887395c0: mov    DWORD PTR [rsp-0x14000],eax
  4.10%     0x00007f32887395c7: push   rbp
  4.19%     0x00007f32887395c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.52%     0x00007f32887395cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.96%     0x00007f32887395d3: mov    r8d,edx
  3.87%     0x00007f32887395d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  3.96%     0x00007f32887395dd: mov    r9d,edx
  1.67%     0x00007f32887395e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  3.06%     0x00007f32887395e3: cmp    r9d,r8d
         ╭  0x00007f32887395e6: je     0x00007f32887395f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.56%  │  0x00007f32887395e8: add    rsp,0x20
  3.40%  │  0x00007f32887395ec: pop    rbp
  2.33%  │  0x00007f32887395ed: mov    r10,QWORD PTR [r15+0x108]
  2.65%  │  0x00007f32887395f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.08%  │  0x00007f32887395f7: ret    
         ↘  0x00007f32887395f8: mov    rbp,rsi
            0x00007f32887395fb: mov    DWORD PTR [rsp],edx
            0x00007f32887395fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f3288739603: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f3288739608: mov    esi,0xffffff4d
            0x00007f328873960d: xchg   ax,ax
            0x00007f328873960f: call   0x00007f3280c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 52.79%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 523 (46 bytes) 

             0x00007f328873b898: mov    r10,QWORD PTR [rsp]
             0x00007f328873b89c: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f328873b956
             0x00007f328873b8a4: mov    ebp,0x1
             0x00007f328873b8a9: test   r11d,r11d
         ╭   0x00007f328873b8ac: jne    0x00007f328873b8e3  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
         │   0x00007f328873b8ae: xchg   ax,ax              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
  3.62%  │↗  0x00007f328873b8b0: mov    r10,QWORD PTR [rsp+0x40]
  3.96%  ││  0x00007f328873b8b5: mov    edx,DWORD PTR [r10+0xc]  ;*getfield param {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments@2 (line 46)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@17 (line 190)
  5.29%  ││  0x00007f328873b8b9: mov    rsi,QWORD PTR [rsp+0x38]
  1.56%  ││  0x00007f328873b8be: nop
  3.31%  ││  0x00007f328873b8bf: call   0x00007f3280c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  6.02%  ││  0x00007f328873b8c4: mov    r10,QWORD PTR [rsp]
  4.04%  ││  0x00007f328873b8c8: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  5.25%  ││  0x00007f328873b8d0: mov    r11,QWORD PTR [r15+0x108]
  4.81%  ││  0x00007f328873b8d7: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  1.10%  ││  0x00007f328873b8db: test   DWORD PTR [r11],eax  ;   {poll}
  2.44%  ││  0x00007f328873b8de: test   r10d,r10d
         │╰  0x00007f328873b8e1: je     0x00007f328873b8b0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f328873b8e3: movabs r10,0x7f329e065a00
             0x00007f328873b8ed: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@37 (line 193)
             0x00007f328873b8f0: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f328873b8f5: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@52 (line 195)
             0x00007f328873b8f9: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 41.38%  <total for region 2>

....[Hottest Regions]...............................................................................
 52.79%       c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 500 (55 bytes) 
 41.38%       c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 523 (46 bytes) 
  2.92%            kernel  [unknown] (6 bytes) 
  0.19%            kernel  [unknown] (1 bytes) 
  0.15%            kernel  [unknown] (30 bytes) 
  0.12%         libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (32 bytes) 
  0.08%            kernel  [unknown] (0 bytes) 
  0.06%            kernel  [unknown] (0 bytes) 
  0.06%            kernel  [unknown] (0 bytes) 
  0.04%            kernel  [unknown] (7 bytes) 
  0.04%            kernel  [unknown] (4 bytes) 
  0.04%            kernel  [unknown] (0 bytes) 
  0.04%            kernel  [unknown] (11 bytes) 
  0.04%            kernel  [unknown] (0 bytes) 
  0.04%            kernel  [unknown] (0 bytes) 
  0.04%            kernel  [unknown] (0 bytes) 
  0.04%            kernel  [unknown] (24 bytes) 
  0.04%            kernel  [unknown] (15 bytes) 
  0.04%            kernel  [unknown] (0 bytes) 
  0.04%         libjvm.so  _ZN10fileStream5writeEPKcm (17 bytes) 
  1.81%  <...other 93 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 52.79%       c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 500 
 41.38%       c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 523 
  4.90%            kernel  [unknown] 
  0.12%         libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%    hsdis-amd64.so  print_insn 
  0.06%      libc-2.28.so  _IO_fwrite 
  0.04%         libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.04%         libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%         libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%         libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%      libc-2.28.so  _int_malloc 
  0.02%         libjvm.so  _ZN15ClassFileParser19fill_instance_klassEP13InstanceKlassbP6Thread 
  0.02%      libc-2.28.so  _IO_fflush 
  0.02%         libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%  Unknown, level 0  java.lang.Thread::currentThread, version 494 
  0.02%         libjvm.so  _ZN11ProfileCall5visitEP18InstructionVisitor 
  0.02%         libjvm.so  _ZN14AccessInternal19PostRuntimeDispatchIN12G1BarrierSet13AccessBarrierILm1097844ES1_EELNS_11BarrierTypeE2ELm1097844EE18oop_access_barrierEPv 
  0.02%      libc-2.28.so  __memset_avx2_unaligned_erms 
  0.02%      libc-2.28.so  __strlen_avx2 
  0.02%         libjvm.so  _ZNK6BitMap19get_next_one_offsetEmm.part.167 
  0.35%  <...other 18 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.17%       c2, level 4
  4.90%            kernel
  0.56%         libjvm.so
  0.25%      libc-2.28.so
  0.06%    hsdis-amd64.so
  0.02%       interpreter
  0.02%  Unknown, level 0
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 141772 total address lines.
Perf output processed (skipped 7.233 seconds):
 Column 1: cycles (5211 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 496 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fd3e4737b20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fd3e4737b24: movabs r12,0x800000000
            0x00007fd3e4737b2e: add    r10,r12
            0x00007fd3e4737b31: xor    r12,r12
            0x00007fd3e4737b34: cmp    rax,r10
            0x00007fd3e4737b37: jne    0x00007fd3dcc68c80  ;   {runtime_call ic_miss_stub}
            0x00007fd3e4737b3d: data16 xchg ax,ax
          [Verified Entry Point]
  7.08%     0x00007fd3e4737b40: mov    DWORD PTR [rsp-0x14000],eax
  4.39%     0x00007fd3e4737b47: push   rbp
  4.05%     0x00007fd3e4737b48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.64%     0x00007fd3e4737b4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.88%     0x00007fd3e4737b53: mov    r8d,edx
  3.57%     0x00007fd3e4737b56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  4.24%     0x00007fd3e4737b5d: mov    r9d,edx
  1.59%     0x00007fd3e4737b60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.88%     0x00007fd3e4737b63: cmp    r9d,r8d
         ╭  0x00007fd3e4737b66: je     0x00007fd3e4737b78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.93%  │  0x00007fd3e4737b68: add    rsp,0x20
  3.72%  │  0x00007fd3e4737b6c: pop    rbp
  1.90%  │  0x00007fd3e4737b6d: mov    r10,QWORD PTR [r15+0x108]
  2.49%  │  0x00007fd3e4737b74: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.45%  │  0x00007fd3e4737b77: ret    
         ↘  0x00007fd3e4737b78: mov    rbp,rsi
            0x00007fd3e4737b7b: mov    DWORD PTR [rsp],edx
            0x00007fd3e4737b7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fd3e4737b83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fd3e4737b88: mov    esi,0xffffff4d
            0x00007fd3e4737b8d: xchg   ax,ax
            0x00007fd3e4737b8f: call   0x00007fd3dcc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 51.83%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 521 (46 bytes) 

             0x00007fd3e473a198: mov    r10,QWORD PTR [rsp]
             0x00007fd3e473a19c: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fd3e473a256
             0x00007fd3e473a1a4: mov    ebp,0x1
             0x00007fd3e473a1a9: test   r11d,r11d
         ╭   0x00007fd3e473a1ac: jne    0x00007fd3e473a1e3  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
         │   0x00007fd3e473a1ae: xchg   ax,ax              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
  3.82%  │↗  0x00007fd3e473a1b0: mov    r10,QWORD PTR [rsp+0x40]
  4.30%  ││  0x00007fd3e473a1b5: mov    edx,DWORD PTR [r10+0xc]  ;*getfield param {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments@2 (line 46)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@17 (line 190)
  5.24%  ││  0x00007fd3e473a1b9: mov    rsi,QWORD PTR [rsp+0x38]
  1.30%  ││  0x00007fd3e473a1be: nop
  2.57%  ││  0x00007fd3e473a1bf: call   0x00007fd3dcc68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  8.02%  ││  0x00007fd3e473a1c4: mov    r10,QWORD PTR [rsp]
  3.24%  ││  0x00007fd3e473a1c8: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  5.03%  ││  0x00007fd3e473a1d0: mov    r11,QWORD PTR [r15+0x108]
  4.05%  ││  0x00007fd3e473a1d7: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  1.29%  ││  0x00007fd3e473a1db: test   DWORD PTR [r11],eax  ;   {poll}
  2.57%  ││  0x00007fd3e473a1de: test   r10d,r10d
         │╰  0x00007fd3e473a1e1: je     0x00007fd3e473a1b0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007fd3e473a1e3: movabs r10,0x7fd3f977ea00
             0x00007fd3e473a1ed: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@37 (line 193)
             0x00007fd3e473a1f0: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fd3e473a1f5: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@52 (line 195)
             0x00007fd3e473a1f9: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 41.43%  <total for region 2>

....[Hottest Regions]...............................................................................
 51.83%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 496 (55 bytes) 
 41.43%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 521 (46 bytes) 
  2.32%              kernel  [unknown] (6 bytes) 
  0.19%              kernel  [unknown] (39 bytes) 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.15%              kernel  [unknown] (6 bytes) 
  0.10%              kernel  [unknown] (31 bytes) 
  0.08%              kernel  [unknown] (9 bytes) 
  0.08%              kernel  [unknown] (20 bytes) 
  0.08%              kernel  [unknown] (24 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.08%          ld-2.28.so  __tls_get_addr (5 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (14 bytes) 
  0.06%  libpthread-2.28.so  __libc_write (23 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (14 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  2.99%  <...other 139 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 51.83%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 496 
 41.43%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 521 
  5.03%              kernel  [unknown] 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%        libc-2.28.so  _IO_fwrite 
  0.08%        libc-2.28.so  vfprintf 
  0.08%          ld-2.28.so  __tls_get_addr 
  0.08%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%  libpthread-2.28.so  __libc_write 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%           libjvm.so  _ZN2os13PlatformEvent4parkEl 
  0.04%        libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%         interpreter  invokevirtual  182 invokevirtual  
  0.02%           libjvm.so  jio_print 
  0.02%         interpreter  invoke return entry points  
  0.02%      hsdis-amd64.so  putop 
  0.73%  <...other 38 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 93.26%         c2, level 4
  5.03%              kernel
  0.84%           libjvm.so
  0.38%        libc-2.28.so
  0.15%         interpreter
  0.12%      hsdis-amd64.so
  0.08%  libpthread-2.28.so
  0.08%          ld-2.28.so
  0.02%         c1, level 3
  0.02%      perf-29438.map
  0.02%      libz.so.1.2.11
....................................................................................................
100.00%  <totals>

PrintAssembly processed: 136430 total address lines.
Perf output processed (skipped 7.489 seconds):
 Column 1: cycles (5251 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 493 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f58207397a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f58207397a4: movabs r12,0x800000000
            0x00007f58207397ae: add    r10,r12
            0x00007f58207397b1: xor    r12,r12
            0x00007f58207397b4: cmp    rax,r10
            0x00007f58207397b7: jne    0x00007f5818c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f58207397bd: data16 xchg ax,ax
          [Verified Entry Point]
  7.26%     0x00007f58207397c0: mov    DWORD PTR [rsp-0x14000],eax
  4.28%     0x00007f58207397c7: push   rbp
  3.49%     0x00007f58207397c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.43%     0x00007f58207397cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.86%     0x00007f58207397d3: mov    r8d,edx
  3.83%     0x00007f58207397d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  3.58%     0x00007f58207397dd: mov    r9d,edx
  1.64%     0x00007f58207397e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  3.26%     0x00007f58207397e3: cmp    r9d,r8d
         ╭  0x00007f58207397e6: je     0x00007f58207397f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.06%  │  0x00007f58207397e8: add    rsp,0x20
  3.35%  │  0x00007f58207397ec: pop    rbp
  1.90%  │  0x00007f58207397ed: mov    r10,QWORD PTR [r15+0x108]
  3.16%  │  0x00007f58207397f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.53%  │  0x00007f58207397f7: ret    
         ↘  0x00007f58207397f8: mov    rbp,rsi
            0x00007f58207397fb: mov    DWORD PTR [rsp],edx
            0x00007f58207397fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f5820739803: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f5820739808: mov    esi,0xffffff4d
            0x00007f582073980d: xchg   ax,ax
            0x00007f582073980f: call   0x00007f5818c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 52.62%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 515 (46 bytes) 

             0x00007f582073c398: mov    r10,QWORD PTR [rsp]
             0x00007f582073c39c: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f582073c456
             0x00007f582073c3a4: mov    ebp,0x1
             0x00007f582073c3a9: test   r11d,r11d
         ╭   0x00007f582073c3ac: jne    0x00007f582073c3e3  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
         │   0x00007f582073c3ae: xchg   ax,ax              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
  3.73%  │↗  0x00007f582073c3b0: mov    r10,QWORD PTR [rsp+0x40]
  4.11%  ││  0x00007f582073c3b5: mov    edx,DWORD PTR [r10+0xc]  ;*getfield param {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments@2 (line 46)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@17 (line 190)
  5.50%  ││  0x00007f582073c3b9: mov    rsi,QWORD PTR [rsp+0x38]
  1.47%  ││  0x00007f582073c3be: nop
  2.88%  ││  0x00007f582073c3bf: call   0x00007f5818c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  6.42%  ││  0x00007f582073c3c4: mov    r10,QWORD PTR [rsp]
  4.17%  ││  0x00007f582073c3c8: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  4.72%  ││  0x00007f582073c3d0: mov    r11,QWORD PTR [r15+0x108]
  4.08%  ││  0x00007f582073c3d7: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  1.50%  ││  0x00007f582073c3db: test   DWORD PTR [r11],eax  ;   {poll}
  2.44%  ││  0x00007f582073c3de: test   r10d,r10d
         │╰  0x00007f582073c3e1: je     0x00007f582073c3b0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f582073c3e3: movabs r10,0x7f583763fa00
             0x00007f582073c3ed: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@37 (line 193)
             0x00007f582073c3f0: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f582073c3f5: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@52 (line 195)
             0x00007f582073c3f9: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 41.02%  <total for region 2>

....[Hottest Regions]...............................................................................
 52.62%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 493 (55 bytes) 
 41.02%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 515 (46 bytes) 
  3.18%              kernel  [unknown] (6 bytes) 
  0.25%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (49 bytes) 
  0.19%              kernel  [unknown] (3 bytes) 
  0.15%              kernel  [unknown] (30 bytes) 
  0.10%              kernel  [unknown] (15 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (24 bytes) 
  0.06%              kernel  [unknown] (26 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (31 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (1 bytes) 
  0.04%           libjvm.so  _ZL12event_to_envPvPKcS_ (0 bytes) 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm (0 bytes) 
  0.04%           libjvm.so  _Z23resource_allocate_bytesmN17AllocFailStrategy13AllocFailEnumE (0 bytes) 
  0.04%        libc-2.28.so  __strchr_avx2 (8 bytes) 
  0.04%        libc-2.28.so  __strchrnul_avx2 (0 bytes) 
  0.04%  libpthread-2.28.so  __pthread_disable_asynccancel (0 bytes) 
  1.90%  <...other 100 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 52.62%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 493 
 41.02%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 515 
  4.97%              kernel  [unknown] 
  0.25%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.06%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.06%        libc-2.28.so  __strchrnul_avx2 
  0.06%      hsdis-amd64.so  print_insn 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%  libpthread-2.28.so  __pthread_disable_asynccancel 
  0.04%         interpreter  invokevirtual  182 invokevirtual  
  0.04%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.04%           libjvm.so  _Z23resource_allocate_bytesmN17AllocFailStrategy13AllocFailEnumE 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.02%        libc-2.28.so  _int_malloc 
  0.02%        libc-2.28.so  _dl_addr 
  0.44%  <...other 23 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 93.64%         c2, level 4
  4.97%              kernel
  0.82%           libjvm.so
  0.27%        libc-2.28.so
  0.15%         interpreter
  0.10%      hsdis-amd64.so
  0.04%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsKtBenchmark.namedArguments
# Parameters: (param = 8, shift = 2)

# Run progress: 75.00% complete, ETA 00:00:38
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.331 ns/op
# Warmup Iteration   2: 3.219 ns/op
# Warmup Iteration   3: 3.007 ns/op
# Warmup Iteration   4: 2.827 ns/op
# Warmup Iteration   5: 3.077 ns/op
Iteration   1: 2.931 ns/op
Iteration   2: 3.039 ns/op
Iteration   3: 2.932 ns/op
Iteration   4: 2.950 ns/op
Iteration   5: 2.996 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 83.33% complete, ETA 00:00:25
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.935 ns/op
# Warmup Iteration   2: 2.741 ns/op
# Warmup Iteration   3: 2.817 ns/op
# Warmup Iteration   4: 2.773 ns/op
# Warmup Iteration   5: 2.832 ns/op
Iteration   1: 2.776 ns/op
Iteration   2: 2.727 ns/op
Iteration   3: 2.718 ns/op
Iteration   4: 2.723 ns/op
Iteration   5: 2.769 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 91.67% complete, ETA 00:00:12
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.735 ns/op
# Warmup Iteration   2: 2.666 ns/op
# Warmup Iteration   3: 2.541 ns/op
# Warmup Iteration   4: 2.549 ns/op
# Warmup Iteration   5: 2.569 ns/op
Iteration   1: 2.721 ns/op
Iteration   2: 2.542 ns/op
Iteration   3: 2.540 ns/op
Iteration   4: 2.513 ns/op
Iteration   5: 2.502 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsKtBenchmark.namedArguments":
  2.758 ±(99.9%) 0.193 ns/op [Average]
  (min, avg, max) = (2.502, 2.758, 3.039), stdev = 0.181
  CI (99.9%): [2.565, 2.952] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsKtBenchmark.namedArguments:·asm":
PrintAssembly processed: 138338 total address lines.
Perf output processed (skipped 7.205 seconds):
 Column 1: cycles (5243 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 497 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fe50c0e6920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fe50c0e6924: movabs r12,0x800000000
            0x00007fe50c0e692e: add    r10,r12
            0x00007fe50c0e6931: xor    r12,r12
            0x00007fe50c0e6934: cmp    rax,r10
            0x00007fe50c0e6937: jne    0x00007fe504617c80  ;   {runtime_call ic_miss_stub}
            0x00007fe50c0e693d: data16 xchg ax,ax
          [Verified Entry Point]
  6.08%     0x00007fe50c0e6940: mov    DWORD PTR [rsp-0x14000],eax
  4.46%     0x00007fe50c0e6947: push   rbp
  4.58%     0x00007fe50c0e6948: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.39%     0x00007fe50c0e694c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.35%     0x00007fe50c0e6953: mov    r8d,edx
  3.87%     0x00007fe50c0e6956: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.95%     0x00007fe50c0e695d: mov    r9d,edx
  1.89%     0x00007fe50c0e6960: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.17%     0x00007fe50c0e6963: cmp    r9d,r8d
  0.02%  ╭  0x00007fe50c0e6966: je     0x00007fe50c0e6978  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.01%  │  0x00007fe50c0e6968: add    rsp,0x20
  2.25%  │  0x00007fe50c0e696c: pop    rbp
  2.38%  │  0x00007fe50c0e696d: mov    r10,QWORD PTR [r15+0x108]
  2.52%  │  0x00007fe50c0e6974: test   DWORD PTR [r10],eax  ;   {poll_return}
  5.07%  │  0x00007fe50c0e6977: ret    
         ↘  0x00007fe50c0e6978: mov    rbp,rsi
            0x00007fe50c0e697b: mov    DWORD PTR [rsp],edx
            0x00007fe50c0e697e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fe50c0e6983: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fe50c0e6988: mov    esi,0xffffff4d
            0x00007fe50c0e698d: xchg   ax,ax
            0x00007fe50c0e698f: call   0x00007fe504619900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 47.99%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 530 (54 bytes) 

             0x00007fe50c0e9aa4: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fe50c0e9b6e
             0x00007fe50c0e9aac: mov    ebp,0x1
             0x00007fe50c0e9ab1: test   r11d,r11d
         ╭   0x00007fe50c0e9ab4: jne    0x00007fe50c0e9afb  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
         │   0x00007fe50c0e9ab6: data16 nop WORD PTR [rax+rax*1+0x0]
         │                                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@36 (line 193)
  2.61%  │↗  0x00007fe50c0e9ac0: mov    r10,QWORD PTR [rsp+0x40]
  4.12%  ││  0x00007fe50c0e9ac5: mov    edx,DWORD PTR [r10+0xc]
  1.54%  ││  0x00007fe50c0e9ac9: mov    ecx,DWORD PTR [r10+0x10]
  2.00%  ││  0x00007fe50c0e9acd: shl    edx,cl             ;*ishl {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@4 (line 55)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression$default@50 (line 54)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::namedArguments@14 (line 51)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@17 (line 190)
  9.80%  ││  0x00007fe50c0e9acf: mov    rsi,QWORD PTR [rsp+0x38]
  2.29%  ││  0x00007fe50c0e9ad4: data16 xchg ax,ax
  2.61%  ││  0x00007fe50c0e9ad7: call   0x00007fe504617f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  7.00%  ││  0x00007fe50c0e9adc: mov    r10,QWORD PTR [rsp]
  3.51%  ││  0x00007fe50c0e9ae0: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
  2.73%  ││  0x00007fe50c0e9ae8: mov    r10,QWORD PTR [r15+0x108]
  4.41%  ││  0x00007fe50c0e9aef: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
  1.62%  ││  0x00007fe50c0e9af3: test   DWORD PTR [r10],eax  ;   {poll}
  2.02%  ││  0x00007fe50c0e9af6: test   r11d,r11d
         │╰  0x00007fe50c0e9af9: je     0x00007fe50c0e9ac0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007fe50c0e9afb: movabs r10,0x7fe5211afa00
             0x00007fe50c0e9b05: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@37 (line 193)
             0x00007fe50c0e9b08: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fe50c0e9b0d: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@52 (line 195)
             0x00007fe50c0e9b11: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 46.27%  <total for region 2>

....[Hottest Regions]...............................................................................
 47.99%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 497 (55 bytes) 
 46.27%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 530 (54 bytes) 
  2.19%              kernel  [unknown] (6 bytes) 
  0.21%              kernel  [unknown] (1 bytes) 
  0.15%              kernel  [unknown] (37 bytes) 
  0.11%              kernel  [unknown] (26 bytes) 
  0.11%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (36 bytes) 
  0.10%              kernel  [unknown] (44 bytes) 
  0.08%              kernel  [unknown] (5 bytes) 
  0.08%           libjvm.so  _ZN10fileStream5writeEPKcm (25 bytes) 
  0.06%              kernel  [unknown] (6 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%        libc-2.28.so  syscall (25 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  2.25%  <...other 113 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 47.99%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 497 
 46.27%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 530 
  4.48%              kernel  [unknown] 
  0.11%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%        libc-2.28.so  _itoa_word 
  0.06%        libc-2.28.so  syscall 
  0.06%        libc-2.28.so  _IO_default_xsputn 
  0.04%        libc-2.28.so  _IO_fwrite 
  0.04%        libc-2.28.so  _IO_fflush 
  0.04%      hsdis-amd64.so  print_insn 
  0.02%           libjvm.so  jio_print 
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%      hsdis-amd64.so  putop 
  0.02%           libjvm.so  _Z12AllocateHeapm10MemoryTypeN17AllocFailStrategy13AllocFailEnumE 
  0.02%           libjvm.so  _ZN13InstanceKlass15link_class_implEbP6Thread 
  0.02%           libjvm.so  _ZN10ValueStackC1EPS_NS_4KindEi 
  0.02%           libjvm.so  _ZNK7nmethod20print_nmethod_labelsEP12outputStreamPh 
  0.02%           libjvm.so  _ZN5State12_sub_Op_AddPEPK4Node 
  0.55%  <...other 29 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.26%         c2, level 4
  4.48%              kernel
  0.72%           libjvm.so
  0.29%        libc-2.28.so
  0.10%         interpreter
  0.08%      hsdis-amd64.so
  0.06%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 138166 total address lines.
Perf output processed (skipped 7.147 seconds):
 Column 1: cycles (5258 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 491 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fad0c7390a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fad0c7390a4: movabs r12,0x800000000
            0x00007fad0c7390ae: add    r10,r12
            0x00007fad0c7390b1: xor    r12,r12
            0x00007fad0c7390b4: cmp    rax,r10
            0x00007fad0c7390b7: jne    0x00007fad04c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fad0c7390bd: data16 xchg ax,ax
          [Verified Entry Point]
  7.34%     0x00007fad0c7390c0: mov    DWORD PTR [rsp-0x14000],eax
  4.60%     0x00007fad0c7390c7: push   rbp
  4.20%     0x00007fad0c7390c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.68%     0x00007fad0c7390cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.72%     0x00007fad0c7390d3: mov    r8d,edx
  4.36%     0x00007fad0c7390d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.30%     0x00007fad0c7390dd: mov    r9d,edx
  2.02%     0x00007fad0c7390e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.45%     0x00007fad0c7390e3: cmp    r9d,r8d
         ╭  0x00007fad0c7390e6: je     0x00007fad0c7390f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.07%  │  0x00007fad0c7390e8: add    rsp,0x20
  2.07%  │  0x00007fad0c7390ec: pop    rbp
  2.83%  │  0x00007fad0c7390ed: mov    r10,QWORD PTR [r15+0x108]
  3.12%  │  0x00007fad0c7390f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.90%  │  0x00007fad0c7390f7: ret    
         ↘  0x00007fad0c7390f8: mov    rbp,rsi
            0x00007fad0c7390fb: mov    DWORD PTR [rsp],edx
            0x00007fad0c7390fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fad0c739103: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fad0c739108: mov    esi,0xffffff4d
            0x00007fad0c73910d: xchg   ax,ax
            0x00007fad0c73910f: call   0x00007fad04c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 50.67%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 521 (81 bytes) 

             0x00007fad0c73cb24: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fad0c73cbee
             0x00007fad0c73cb2c: mov    ebp,0x1
             0x00007fad0c73cb31: test   r11d,r11d
         ╭   0x00007fad0c73cb34: jne    0x00007fad0c73cb7b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
         │   0x00007fad0c73cb36: data16 nop WORD PTR [rax+rax*1+0x0]
         │                                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@36 (line 193)
  2.61%  │↗  0x00007fad0c73cb40: mov    r10,QWORD PTR [rsp+0x40]
  4.28%  ││  0x00007fad0c73cb45: mov    edx,DWORD PTR [r10+0xc]
  1.75%  ││  0x00007fad0c73cb49: mov    ecx,DWORD PTR [r10+0x10]
  1.90%  ││  0x00007fad0c73cb4d: shl    edx,cl             ;*ishl {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@4 (line 55)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression$default@50 (line 54)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::namedArguments@14 (line 51)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@17 (line 190)
  9.59%  ││  0x00007fad0c73cb4f: mov    rsi,QWORD PTR [rsp+0x38]
  1.71%  ││  0x00007fad0c73cb54: data16 xchg ax,ax
  2.70%  ││  0x00007fad0c73cb57: call   0x00007fad04c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  5.06%  ││  0x00007fad0c73cb5c: mov    r10,QWORD PTR [rsp]
  3.63%  ││  0x00007fad0c73cb60: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
  2.78%  ││  0x00007fad0c73cb68: mov    r10,QWORD PTR [r15+0x108]
  3.88%  ││  0x00007fad0c73cb6f: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
  1.52%  ││  0x00007fad0c73cb73: test   DWORD PTR [r10],eax  ;   {poll}
  2.30%  ││  0x00007fad0c73cb76: test   r11d,r11d
         │╰  0x00007fad0c73cb79: je     0x00007fad0c73cb40  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007fad0c73cb7b: movabs r10,0x7fad217eea00
             0x00007fad0c73cb85: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@37 (line 193)
             0x00007fad0c73cb88: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fad0c73cb8d: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@52 (line 195)
  0.02%      0x00007fad0c73cb91: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@40 (line 193)
             0x00007fad0c73cb95: mov    QWORD PTR [r10+0x20],0x0  ;*invokevirtual namedArguments {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@17 (line 190)
             0x00007fad0c73cb9d: add    rsp,0x20
             0x00007fad0c73cba1: pop    rbp
             0x00007fad0c73cba2: mov    r10,QWORD PTR [r15+0x108]
             0x00007fad0c73cba9: test   DWORD PTR [r10],eax  ;   {poll_return}
             0x00007fad0c73cbac: ret    
             0x00007fad0c73cbad: mov    esi,0xfffffff6
....................................................................................................
 43.72%  <total for region 2>

....[Hottest Regions]...............................................................................
 50.67%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 491 (55 bytes) 
 43.72%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 521 (81 bytes) 
  2.74%              kernel  [unknown] (6 bytes) 
  0.15%              kernel  [unknown] (0 bytes) 
  0.11%              kernel  [unknown] (9 bytes) 
  0.11%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (41 bytes) 
  0.10%              kernel  [unknown] (28 bytes) 
  0.10%              kernel  [unknown] (26 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (27 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm (0 bytes) 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm (12 bytes) 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm (0 bytes) 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ (22 bytes) 
  1.79%  <...other 91 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 50.67%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 491 
 43.72%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 521 
  4.49%              kernel  [unknown] 
  0.11%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.06%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%        libc-2.28.so  _IO_fwrite 
  0.04%        libc-2.28.so  _IO_old_init 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.02%           libjvm.so  _ZN16LinearScanWalker16activate_currentEv 
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%      hsdis-amd64.so  putop 
  0.02%           libjvm.so  _ZN19ciConstantPoolCache3getEi 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.40%  <...other 21 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.41%         c2, level 4
  4.49%              kernel
  0.63%           libjvm.so
  0.25%        libc-2.28.so
  0.10%         interpreter
  0.06%      hsdis-amd64.so
  0.06%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 136578 total address lines.
Perf output processed (skipped 7.156 seconds):
 Column 1: cycles (5221 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 483 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f6fd8737820: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f6fd8737824: movabs r12,0x800000000
            0x00007f6fd873782e: add    r10,r12
            0x00007f6fd8737831: xor    r12,r12
            0x00007f6fd8737834: cmp    rax,r10
            0x00007f6fd8737837: jne    0x00007f6fd0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f6fd873783d: data16 xchg ax,ax
          [Verified Entry Point]
  6.28%     0x00007f6fd8737840: mov    DWORD PTR [rsp-0x14000],eax
  4.42%     0x00007f6fd8737847: push   rbp
  4.31%     0x00007f6fd8737848: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.25%     0x00007f6fd873784c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.64%     0x00007f6fd8737853: mov    r8d,edx
  4.41%     0x00007f6fd8737856: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.36%     0x00007f6fd873785d: mov    r9d,edx
  2.07%     0x00007f6fd8737860: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.59%     0x00007f6fd8737863: cmp    r9d,r8d
         ╭  0x00007f6fd8737866: je     0x00007f6fd8737878  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.00%  │  0x00007f6fd8737868: add    rsp,0x20
  2.28%  │  0x00007f6fd873786c: pop    rbp
  2.60%  │  0x00007f6fd873786d: mov    r10,QWORD PTR [r15+0x108]
  2.68%  │  0x00007f6fd8737874: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.14%  │  0x00007f6fd8737877: ret    
         ↘  0x00007f6fd8737878: mov    rbp,rsi
            0x00007f6fd873787b: mov    DWORD PTR [rsp],edx
            0x00007f6fd873787e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f6fd8737883: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f6fd8737888: mov    esi,0xffffff4d
            0x00007f6fd873788d: xchg   ax,ax
            0x00007f6fd873788f: call   0x00007f6fd0c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 49.03%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 507 (54 bytes) 

             0x00007f6fd873a724: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f6fd873a7ee
             0x00007f6fd873a72c: mov    ebp,0x1
             0x00007f6fd873a731: test   r11d,r11d
         ╭   0x00007f6fd873a734: jne    0x00007f6fd873a77b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
         │   0x00007f6fd873a736: data16 nop WORD PTR [rax+rax*1+0x0]
         │                                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@36 (line 193)
  3.28%  │↗  0x00007f6fd873a740: mov    r10,QWORD PTR [rsp+0x40]
  4.29%  ││  0x00007f6fd873a745: mov    edx,DWORD PTR [r10+0xc]
  1.99%  ││  0x00007f6fd873a749: mov    ecx,DWORD PTR [r10+0x10]
  2.13%  ││  0x00007f6fd873a74d: shl    edx,cl             ;*ishl {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@4 (line 55)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression$default@50 (line 54)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::namedArguments@14 (line 51)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@17 (line 190)
  8.93%  ││  0x00007f6fd873a74f: mov    rsi,QWORD PTR [rsp+0x38]
  1.80%  ││  0x00007f6fd873a754: data16 xchg ax,ax
  2.55%  ││  0x00007f6fd873a757: call   0x00007f6fd0c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  6.09%  ││  0x00007f6fd873a75c: mov    r10,QWORD PTR [rsp]
  4.44%  ││  0x00007f6fd873a760: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
  2.93%  ││  0x00007f6fd873a768: mov    r10,QWORD PTR [r15+0x108]
  3.52%  ││  0x00007f6fd873a76f: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@33 (line 192)
  1.97%  ││  0x00007f6fd873a773: test   DWORD PTR [r10],eax  ;   {poll}
  1.95%  ││  0x00007f6fd873a776: test   r11d,r11d
         │╰  0x00007f6fd873a779: je     0x00007f6fd873a740  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f6fd873a77b: movabs r10,0x7f6fefc72a00
             0x00007f6fd873a785: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@37 (line 193)
             0x00007f6fd873a788: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f6fd873a78d: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@52 (line 195)
             0x00007f6fd873a791: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 45.87%  <total for region 2>

....[Hottest Regions]...............................................................................
 49.03%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 483 (55 bytes) 
 45.87%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 507 (54 bytes) 
  1.82%              kernel  [unknown] (6 bytes) 
  0.29%              kernel  [unknown] (39 bytes) 
  0.21%              kernel  [unknown] (3 bytes) 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (41 bytes) 
  0.10%              kernel  [unknown] (1 bytes) 
  0.08%              kernel  [unknown] (9 bytes) 
  0.08%              kernel  [unknown] (2 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (10 bytes) 
  0.04%              kernel  [unknown] (19 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (6 bytes) 
  0.04%              kernel  [unknown] (25 bytes) 
  0.04%        libc-2.28.so  _IO_default_xsputn (10 bytes) 
  0.04%  libpthread-2.28.so  __libc_write (0 bytes) 
  0.04%              [vdso]  __vdso_clock_gettime (1 bytes) 
  1.88%  <...other 98 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 49.03%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 483 
 45.87%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_namedArguments_jmhTest::namedArguments_avgt_jmhStub, version 507 
  3.95%              kernel  [unknown] 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%      hsdis-amd64.so  print_insn 
  0.06%        libc-2.28.so  _IO_fwrite 
  0.06%        libc-2.28.so  _IO_default_xsputn 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.04%         interpreter  invokevirtual  182 invokevirtual  
  0.04%              [vdso]  __vdso_clock_gettime 
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%        libc-2.28.so  vfprintf 
  0.02%           libjvm.so  _ZN7nmethod18new_native_nmethodERK12methodHandleiP10CodeBufferiiiiiP9OopMapSet 
  0.02%           libjvm.so  jio_print 
  0.02%           libjvm.so  _ZN6Invoke5visitEP18InstructionVisitor 
  0.02%           libjvm.so  _ZN24DebugInformationRecorder27find_sharable_decode_offsetEi 
  0.02%           libjvm.so  _ZNK8G1Policy30predict_region_elapsed_time_msEP10HeapRegionb 
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%      hsdis-amd64.so  print_operand_value 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.46%  <...other 24 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.91%         c2, level 4
  3.95%              kernel
  0.59%           libjvm.so
  0.23%        libc-2.28.so
  0.10%      hsdis-amd64.so
  0.10%         interpreter
  0.06%              [vdso]
  0.04%  libpthread-2.28.so
  0.02%          ld-2.28.so
....................................................................................................
 99.98%  <totals>



# Run complete. Total time: 00:02:33

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                            (param)  (shift)  Mode  Cnt  Score   Error  Units
DefaultArgumentsJavaBenchmark.defaultArguments             8        2  avgt   15  2.421 ± 0.236  ns/op
DefaultArgumentsJavaBenchmark.defaultArguments:·asm        8        2  avgt         NaN            ---
DefaultArgumentsJavaBenchmark.namedArguments               8        2  avgt   15  2.750 ± 0.244  ns/op
DefaultArgumentsJavaBenchmark.namedArguments:·asm          8        2  avgt         NaN            ---
DefaultArgumentsKtBenchmark.defaultArguments               8        2  avgt   15  2.400 ± 0.219  ns/op
DefaultArgumentsKtBenchmark.defaultArguments:·asm          8        2  avgt         NaN            ---
DefaultArgumentsKtBenchmark.namedArguments                 8        2  avgt   15  2.758 ± 0.193  ns/op
DefaultArgumentsKtBenchmark.namedArguments:·asm            8        2  avgt         NaN            ---

Few thoughts:
    - not any relevant/significant performance difference