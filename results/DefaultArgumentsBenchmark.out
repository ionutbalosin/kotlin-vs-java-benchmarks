# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsJavaBenchmark.defaultArguments
# Parameters: (delta = 1, factor = 2, value = 8)

# Run progress: 0.00% complete, ETA 00:03:00
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.666 ns/op
# Warmup Iteration   2: 3.222 ns/op
# Warmup Iteration   3: 3.571 ns/op
# Warmup Iteration   4: 3.174 ns/op
# Warmup Iteration   5: 3.177 ns/op
Iteration   1: 3.217 ns/op
Iteration   2: 3.243 ns/op
Iteration   3: 3.190 ns/op
Iteration   4: 3.621 ns/op
Iteration   5: 3.640 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 5.56% complete, ETA 00:03:39
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.778 ns/op
# Warmup Iteration   2: 3.314 ns/op
# Warmup Iteration   3: 3.709 ns/op
# Warmup Iteration   4: 3.310 ns/op
# Warmup Iteration   5: 3.316 ns/op
Iteration   1: 3.325 ns/op
Iteration   2: 3.313 ns/op
Iteration   3: 3.308 ns/op
Iteration   4: 3.307 ns/op
Iteration   5: 3.333 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 11.11% complete, ETA 00:03:26
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.319 ns/op
# Warmup Iteration   2: 3.751 ns/op
# Warmup Iteration   3: 3.690 ns/op
# Warmup Iteration   4: 3.330 ns/op
# Warmup Iteration   5: 3.376 ns/op
Iteration   1: 3.331 ns/op
Iteration   2: 3.336 ns/op
Iteration   3: 3.312 ns/op
Iteration   4: 3.319 ns/op
Iteration   5: 3.326 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.defaultArguments":
  3.342 ±(99.9%) 0.134 ns/op [Average]
  (min, avg, max) = (3.190, 3.342, 3.640), stdev = 0.126
  CI (99.9%): [3.207, 3.476] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.defaultArguments:·asm":
PrintAssembly processed: 142710 total address lines.
Perf output processed (skipped 7.065 seconds):
 Column 1: cycles (5246 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 495 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fe460738420: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fe460738424: movabs r12,0x800000000
            0x00007fe46073842e: add    r10,r12
            0x00007fe460738431: xor    r12,r12
            0x00007fe460738434: cmp    rax,r10
            0x00007fe460738437: jne    0x00007fe458c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fe46073843d: data16 xchg ax,ax
          [Verified Entry Point]
  4.80%     0x00007fe460738440: mov    DWORD PTR [rsp-0x14000],eax
  3.60%     0x00007fe460738447: push   rbp
  4.16%     0x00007fe460738448: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.07%     0x00007fe46073844c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.14%     0x00007fe460738453: mov    r8d,edx
  4.42%     0x00007fe460738456: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.80%     0x00007fe46073845d: mov    r9d,edx
  1.96%     0x00007fe460738460: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.12%     0x00007fe460738463: cmp    r9d,r8d
         ╭  0x00007fe460738466: je     0x00007fe460738478  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.16%  │  0x00007fe460738468: add    rsp,0x20
  0.67%  │  0x00007fe46073846c: pop    rbp
  5.93%  │  0x00007fe46073846d: mov    r10,QWORD PTR [r15+0x108]
  0.97%  │  0x00007fe460738474: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.13%  │  0x00007fe460738477: ret    
         ↘  0x00007fe460738478: mov    rbp,rsi
            0x00007fe46073847b: mov    DWORD PTR [rsp],edx
            0x00007fe46073847e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fe460738483: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fe460738488: mov    esi,0xffffff4d
            0x00007fe46073848d: xchg   ax,ax
            0x00007fe46073848f: call   0x00007fe458c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 39.94%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 528 (51 bytes) 

             0x00007fe46073bfc0: mov    r10,QWORD PTR [rsp+0x38]
             0x00007fe46073bfc5: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fe46073c092
             0x00007fe46073bfcd: mov    ebp,0x1
             0x00007fe46073bfd2: test   r11d,r11d
         ╭   0x00007fe46073bfd5: jne    0x00007fe46073c018  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
         │   0x00007fe46073bfd7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
  2.50%  │↗  0x00007fe46073bfe0: mov    rsi,QWORD PTR [rsp+0x40]
  1.45%  ││  0x00007fe46073bfe5: xchg   ax,ax
  2.82%  ││  0x00007fe46073bfe7: call   0x00007fe458c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual defaultArguments {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  1.37%  ││  0x00007fe46073bfec: mov    rsi,QWORD PTR [rsp]
  5.09%  ││  0x00007fe46073bff0: mov    edx,eax
  2.25%  ││  0x00007fe46073bff2: nop
  1.18%  ││  0x00007fe46073bff3: call   0x00007fe458c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  2.54%  ││  0x00007fe46073bff8: mov    r10,QWORD PTR [rsp+0x38]
  3.98%  ││  0x00007fe46073bffd: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  3.07%  ││  0x00007fe46073c005: mov    r10,QWORD PTR [r15+0x108]
  1.83%  ││  0x00007fe46073c00c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  2.65%  ││  0x00007fe46073c010: test   DWORD PTR [r10],eax  ;   {poll}
  0.74%  ││  0x00007fe46073c013: test   r11d,r11d
         │╰  0x00007fe46073c016: je     0x00007fe46073bfe0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007fe46073c018: movabs r10,0x7fe47689aa00
             0x00007fe46073c022: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@37 (line 193)
             0x00007fe46073c025: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fe46073c02a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@52 (line 195)
             0x00007fe46073c02e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 31.47%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments, version 493 (30 bytes) 

            # {method} {0x00007fe448ded8e8} &apos;defaultArguments&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsJavaBenchmark&apos;
            #           [sp+0x20]  (sp of caller)
            0x00007fe4607381a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fe4607381a4: movabs r12,0x800000000
            0x00007fe4607381ae: add    r10,r12
            0x00007fe4607381b1: xor    r12,r12
            0x00007fe4607381b4: cmp    rax,r10
            0x00007fe4607381b7: jne    0x00007fe458c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fe4607381bd: data16 xchg ax,ax
          [Verified Entry Point]
  3.62%     0x00007fe4607381c0: sub    rsp,0x18
  4.77%     0x00007fe4607381c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments@-1 (line 48)
  0.97%     0x00007fe4607381cc: mov    eax,DWORD PTR [rsi+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments@2 (line 48)
  2.59%     0x00007fe4607381cf: add    rsp,0x10
  1.79%     0x00007fe4607381d3: pop    rbp
  6.63%     0x00007fe4607381d4: mov    r10,QWORD PTR [r15+0x108]
  0.57%     0x00007fe4607381db: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.25%     0x00007fe4607381de: ret    
            0x00007fe4607381df: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007fe4607381e0: jmp    0x00007fe458c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007fe4607381e5: call   0x00007fe4607381ea
         ↘  0x00007fe4607381ea: sub    QWORD PTR [rsp],0x5
            0x00007fe4607381ef: jmp    0x00007fe458c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007fe4607381f4: hlt    
            0x00007fe4607381f5: hlt    
....................................................................................................
 23.20%  <total for region 3>

....[Hottest Regions]...............................................................................
 39.94%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 495 (55 bytes) 
 31.47%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 528 (51 bytes) 
 23.20%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments, version 493 (30 bytes) 
  1.72%              kernel  [unknown] (6 bytes) 
  0.30%              kernel  [unknown] (9 bytes) 
  0.13%              kernel  [unknown] (39 bytes) 
  0.11%              kernel  [unknown] (27 bytes) 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (36 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (38 bytes) 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm (8 bytes) 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (20 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (27 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (26 bytes) 
  0.04%              kernel  [unknown] (3 bytes) 
  2.42%  <...other 115 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 39.94%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 495 
 31.47%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 528 
 23.20%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments, version 493 
  4.08%              kernel  [unknown] 
  0.10%      hsdis-amd64.so  print_insn 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%           libjvm.so  _ZN7Monitor5IWaitEP6Threadl 
  0.04%  libpthread-2.28.so  __lll_unlock_wake 
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%           libjvm.so  _ZN13MallocTracker11record_freeEPv 
  0.04%          ld-2.28.so  __tls_get_addr 
  0.04%        libc-2.28.so  syscall 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.04%         interpreter  goto  167 goto  
  0.02%  libpthread-2.28.so  __pthread_mutex_cond_lock 
  0.02%      hsdis-amd64.so  putop 
  0.02%           libjvm.so  _ZN16UseCountComputer5visitEPP11Instruction 
  0.55%  <...other 29 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.61%         c2, level 4
  4.08%              kernel
  0.74%           libjvm.so
  0.15%        libc-2.28.so
  0.13%      hsdis-amd64.so
  0.11%  libpthread-2.28.so
  0.06%         interpreter
  0.04%          ld-2.28.so
  0.02%        runtime stub
  0.02%      perf-12867.map
  0.02%              [vdso]
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 143862 total address lines.
Perf output processed (skipped 7.161 seconds):
 Column 1: cycles (5191 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 498 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f84b8738d20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f84b8738d24: movabs r12,0x800000000
            0x00007f84b8738d2e: add    r10,r12
            0x00007f84b8738d31: xor    r12,r12
            0x00007f84b8738d34: cmp    rax,r10
            0x00007f84b8738d37: jne    0x00007f84b0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f84b8738d3d: data16 xchg ax,ax
          [Verified Entry Point]
  4.72%     0x00007f84b8738d40: mov    DWORD PTR [rsp-0x14000],eax
  3.62%     0x00007f84b8738d47: push   rbp
  4.47%     0x00007f84b8738d48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  2.87%     0x00007f84b8738d4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.27%     0x00007f84b8738d53: mov    r8d,edx
  4.35%     0x00007f84b8738d56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.64%     0x00007f84b8738d5d: mov    r9d,edx
  2.18%     0x00007f84b8738d60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.14%     0x00007f84b8738d63: cmp    r9d,r8d
         ╭  0x00007f84b8738d66: je     0x00007f84b8738d78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.91%  │  0x00007f84b8738d68: add    rsp,0x20
  0.79%  │  0x00007f84b8738d6c: pop    rbp
  5.93%  │  0x00007f84b8738d6d: mov    r10,QWORD PTR [r15+0x108]
  1.00%  │  0x00007f84b8738d74: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.10%  │  0x00007f84b8738d77: ret    
         ↘  0x00007f84b8738d78: mov    rbp,rsi
            0x00007f84b8738d7b: mov    DWORD PTR [rsp],edx
            0x00007f84b8738d7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f84b8738d83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f84b8738d88: mov    esi,0xffffff4d
            0x00007f84b8738d8d: xchg   ax,ax
            0x00007f84b8738d8f: call   0x00007f84b0c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 39.99%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 527 (51 bytes) 

             0x00007f84b873c4c0: mov    r10,QWORD PTR [rsp+0x38]
             0x00007f84b873c4c5: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f84b873c592
             0x00007f84b873c4cd: mov    ebp,0x1
             0x00007f84b873c4d2: test   r11d,r11d
         ╭   0x00007f84b873c4d5: jne    0x00007f84b873c518  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
         │   0x00007f84b873c4d7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
  2.99%  │↗  0x00007f84b873c4e0: mov    rsi,QWORD PTR [rsp+0x40]
  1.39%  ││  0x00007f84b873c4e5: xchg   ax,ax
  2.68%  ││  0x00007f84b873c4e7: call   0x00007f84b0c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual defaultArguments {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  1.21%  ││  0x00007f84b873c4ec: mov    rsi,QWORD PTR [rsp]
  4.70%  ││  0x00007f84b873c4f0: mov    edx,eax
  2.37%  ││  0x00007f84b873c4f2: nop
  1.18%  ││  0x00007f84b873c4f3: call   0x00007f84b0c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  2.14%  ││  0x00007f84b873c4f8: mov    r10,QWORD PTR [rsp+0x38]
  4.14%  ││  0x00007f84b873c4fd: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  2.91%  ││  0x00007f84b873c505: mov    r10,QWORD PTR [r15+0x108]
  1.43%  ││  0x00007f84b873c50c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  3.10%  ││  0x00007f84b873c510: test   DWORD PTR [r10],eax  ;   {poll}
  0.83%  ││  0x00007f84b873c513: test   r11d,r11d
         │╰  0x00007f84b873c516: je     0x00007f84b873c4e0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f84b873c518: movabs r10,0x7f84cf882a00
             0x00007f84b873c522: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@37 (line 193)
             0x00007f84b873c525: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f84b873c52a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@52 (line 195)
             0x00007f84b873c52e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 31.05%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments, version 497 (30 bytes) 

            # {method} {0x00007f849dddd8e8} &apos;defaultArguments&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsJavaBenchmark&apos;
            #           [sp+0x20]  (sp of caller)
            0x00007f84b8738aa0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f84b8738aa4: movabs r12,0x800000000
            0x00007f84b8738aae: add    r10,r12
            0x00007f84b8738ab1: xor    r12,r12
            0x00007f84b8738ab4: cmp    rax,r10
            0x00007f84b8738ab7: jne    0x00007f84b0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f84b8738abd: data16 xchg ax,ax
          [Verified Entry Point]
  4.12%     0x00007f84b8738ac0: sub    rsp,0x18
  4.26%     0x00007f84b8738ac7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments@-1 (line 48)
  0.73%     0x00007f84b8738acc: mov    eax,DWORD PTR [rsi+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments@2 (line 48)
  3.27%     0x00007f84b8738acf: add    rsp,0x10
  1.75%     0x00007f84b8738ad3: pop    rbp
  7.20%     0x00007f84b8738ad4: mov    r10,QWORD PTR [r15+0x108]
  0.73%     0x00007f84b8738adb: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.31%     0x00007f84b8738ade: ret    
            0x00007f84b8738adf: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f84b8738ae0: jmp    0x00007f84b0d2c400  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f84b8738ae5: call   0x00007f84b8738aea
         ↘  0x00007f84b8738aea: sub    QWORD PTR [rsp],0x5
            0x00007f84b8738aef: jmp    0x00007f84b0c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007f84b8738af4: hlt    
            0x00007f84b8738af5: hlt    
....................................................................................................
 24.39%  <total for region 3>

....[Hottest Regions]...............................................................................
 39.99%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 498 (55 bytes) 
 31.05%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 527 (51 bytes) 
 24.39%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments, version 497 (30 bytes) 
  1.35%              kernel  [unknown] (6 bytes) 
  0.17%              kernel  [unknown] (6 bytes) 
  0.12%              kernel  [unknown] (30 bytes) 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (18 bytes) 
  0.08%              kernel  [unknown] (37 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (11 bytes) 
  0.08%         interpreter  method entry point (kind = zerolocals)  (8 bytes) 
  0.06%              kernel  [unknown] (14 bytes) 
  0.06%        libc-2.28.so  _IO_fwrite (0 bytes) 
  0.04%              kernel  [unknown] (3 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (5 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (3 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  2.12%  <...other 100 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 39.99%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 498 
 31.05%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 527 
 24.39%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments, version 497 
  3.35%              kernel  [unknown] 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%         interpreter  method entry point (kind = zerolocals)  
  0.08%        libc-2.28.so  _IO_fwrite 
  0.06%      hsdis-amd64.so  putop 
  0.06%        libc-2.28.so  __strchr_avx2 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%        libc-2.28.so  vfprintf 
  0.04%  libpthread-2.28.so  __pthread_disable_asynccancel 
  0.04%        libc-2.28.so  __stpcpy_sse2_unaligned 
  0.02%           libjvm.so  _ZN2os13javaTimeNanosEv 
  0.02%           libjvm.so  jio_print 
  0.02%      hsdis-amd64.so  print_operand_value 
  0.02%           libjvm.so  _ZN10LinearScan31sort_intervals_after_allocationEv 
  0.02%        libc-2.28.so  _dl_addr 
  0.02%         interpreter  fast_aputfield  211 fast_aputfield  
  0.02%           libjvm.so  _ZN14JfrThreadLocal7on_exitEP10JavaThread 
  0.50%  <...other 26 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.43%         c2, level 4
  3.35%              kernel
  0.54%           libjvm.so
  0.31%        libc-2.28.so
  0.15%      hsdis-amd64.so
  0.10%         interpreter
  0.08%  libpthread-2.28.so
  0.02%          ld-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 146659 total address lines.
Perf output processed (skipped 7.210 seconds):
 Column 1: cycles (5189 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 499 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f551c738a20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f551c738a24: movabs r12,0x800000000
            0x00007f551c738a2e: add    r10,r12
            0x00007f551c738a31: xor    r12,r12
            0x00007f551c738a34: cmp    rax,r10
            0x00007f551c738a37: jne    0x00007f5514c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f551c738a3d: data16 xchg ax,ax
          [Verified Entry Point]
  4.86%     0x00007f551c738a40: mov    DWORD PTR [rsp-0x14000],eax
  3.20%     0x00007f551c738a47: push   rbp
  4.49%     0x00007f551c738a48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.06%     0x00007f551c738a4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.25%     0x00007f551c738a53: mov    r8d,edx
  4.24%     0x00007f551c738a56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.85%     0x00007f551c738a5d: mov    r9d,edx
  1.93%     0x00007f551c738a60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.43%     0x00007f551c738a63: cmp    r9d,r8d
         ╭  0x00007f551c738a66: je     0x00007f551c738a78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.95%  │  0x00007f551c738a68: add    rsp,0x20
  0.75%  │  0x00007f551c738a6c: pop    rbp
  5.70%  │  0x00007f551c738a6d: mov    r10,QWORD PTR [r15+0x108]
  1.14%  │  0x00007f551c738a74: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.04%  │  0x00007f551c738a77: ret    
         ↘  0x00007f551c738a78: mov    rbp,rsi
            0x00007f551c738a7b: mov    DWORD PTR [rsp],edx
            0x00007f551c738a7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f551c738a83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f551c738a88: mov    esi,0xffffff4d
            0x00007f551c738a8d: xchg   ax,ax
            0x00007f551c738a8f: call   0x00007f5514c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 39.89%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 529 (51 bytes) 

             0x00007f551c73cb40: mov    r10,QWORD PTR [rsp+0x38]
             0x00007f551c73cb45: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f551c73cc12
             0x00007f551c73cb4d: mov    ebp,0x1
             0x00007f551c73cb52: test   r11d,r11d
         ╭   0x00007f551c73cb55: jne    0x00007f551c73cb98  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
         │   0x00007f551c73cb57: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
  2.62%  │↗  0x00007f551c73cb60: mov    rsi,QWORD PTR [rsp+0x40]
  1.73%  ││  0x00007f551c73cb65: xchg   ax,ax
  2.85%  ││  0x00007f551c73cb67: call   0x00007f5514c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual defaultArguments {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  1.31%  ││  0x00007f551c73cb6c: mov    rsi,QWORD PTR [rsp]
  4.63%  ││  0x00007f551c73cb70: mov    edx,eax
  1.93%  ││  0x00007f551c73cb72: nop
  1.12%  ││  0x00007f551c73cb73: call   0x00007f5514c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  2.31%  ││  0x00007f551c73cb78: mov    r10,QWORD PTR [rsp+0x38]
  3.55%  ││  0x00007f551c73cb7d: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  3.08%  ││  0x00007f551c73cb85: mov    r10,QWORD PTR [r15+0x108]
  1.46%  ││  0x00007f551c73cb8c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  3.43%  ││  0x00007f551c73cb90: test   DWORD PTR [r10],eax  ;   {poll}
  0.81%  ││  0x00007f551c73cb93: test   r11d,r11d
         │╰  0x00007f551c73cb96: je     0x00007f551c73cb60  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f551c73cb98: movabs r10,0x7f5532bf3a00
             0x00007f551c73cba2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@37 (line 193)
             0x00007f551c73cba5: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f551c73cbaa: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@52 (line 195)
             0x00007f551c73cbae: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 30.83%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments, version 500 (30 bytes) 

            # {method} {0x00007f55050ed8e8} &apos;defaultArguments&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsJavaBenchmark&apos;
            #           [sp+0x20]  (sp of caller)
            0x00007f551c738da0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f551c738da4: movabs r12,0x800000000
            0x00007f551c738dae: add    r10,r12
            0x00007f551c738db1: xor    r12,r12
            0x00007f551c738db4: cmp    rax,r10
            0x00007f551c738db7: jne    0x00007f5514c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f551c738dbd: data16 xchg ax,ax
          [Verified Entry Point]
  3.62%     0x00007f551c738dc0: sub    rsp,0x18
  4.72%     0x00007f551c738dc7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments@-1 (line 48)
  0.79%     0x00007f551c738dcc: mov    eax,DWORD PTR [rsi+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments@2 (line 48)
  2.95%     0x00007f551c738dcf: add    rsp,0x10
  1.81%     0x00007f551c738dd3: pop    rbp
  7.94%     0x00007f551c738dd4: mov    r10,QWORD PTR [r15+0x108]
  0.71%     0x00007f551c738ddb: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.22%     0x00007f551c738dde: ret    
            0x00007f551c738ddf: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f551c738de0: jmp    0x00007f5514c9f680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f551c738de5: call   0x00007f551c738dea
         ↘  0x00007f551c738dea: sub    QWORD PTR [rsp],0x5
            0x00007f551c738def: jmp    0x00007f5514c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007f551c738df4: hlt    
            0x00007f551c738df5: hlt    
....................................................................................................
 24.76%  <total for region 3>

....[Hottest Regions]...............................................................................
 39.89%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 499 (55 bytes) 
 30.83%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 529 (51 bytes) 
 24.76%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments, version 500 (30 bytes) 
  1.25%              kernel  [unknown] (6 bytes) 
  0.33%              kernel  [unknown] (39 bytes) 
  0.21%              kernel  [unknown] (6 bytes) 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (47 bytes) 
  0.10%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (1 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm (8 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (32 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (10 bytes) 
  0.04%              kernel  [unknown] (7 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  1.89%  <...other 88 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 39.89%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 499 
 30.83%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 529 
 24.76%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::defaultArguments, version 500 
  3.08%              kernel  [unknown] 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.10%        libc-2.28.so  vfprintf 
  0.08%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%        libc-2.28.so  __strchr_avx2 
  0.06%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.06%        libc-2.28.so  _IO_default_xsputn 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%  libpthread-2.28.so  do_futex_wait.constprop.1 
  0.04%        libc-2.28.so  __strchrnul_avx2 
  0.04%        libc-2.28.so  _IO_fwrite 
  0.04%        libc-2.28.so  syscall 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%  libpthread-2.28.so  __pthread_disable_asynccancel 
  0.02%      hsdis-amd64.so  print_displacement 
  0.02%           libjvm.so  _ZN10ValueStack25pin_stack_for_linear_scanEv 
  0.02%           libjvm.so  _ZN16ciBytecodeStream12reset_to_bciEi 
  0.56%  <...other 29 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.49%         c2, level 4
  3.08%              kernel
  0.75%           libjvm.so
  0.39%        libc-2.28.so
  0.12%  libpthread-2.28.so
  0.08%      hsdis-amd64.so
  0.04%         interpreter
  0.02%        runtime stub
  0.02%         c1, level 1
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsJavaBenchmark.oneArgument
# Parameters: (delta = 1, factor = 2, value = 8)

# Run progress: 16.67% complete, ETA 00:03:12
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.384 ns/op
# Warmup Iteration   2: 4.295 ns/op
# Warmup Iteration   3: 3.806 ns/op
# Warmup Iteration   4: 3.799 ns/op
# Warmup Iteration   5: 3.351 ns/op
Iteration   1: 3.381 ns/op
Iteration   2: 3.380 ns/op
Iteration   3: 3.374 ns/op
Iteration   4: 3.378 ns/op
Iteration   5: 3.392 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 22.22% complete, ETA 00:02:59
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 6.853 ns/op
# Warmup Iteration   2: 5.974 ns/op
# Warmup Iteration   3: 6.614 ns/op
# Warmup Iteration   4: 5.882 ns/op
# Warmup Iteration   5: 5.908 ns/op
Iteration   1: 5.899 ns/op
Iteration   2: 5.915 ns/op
Iteration   3: 5.858 ns/op
Iteration   4: 5.397 ns/op
Iteration   5: 5.976 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 27.78% complete, ETA 00:02:45
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.020 ns/op
# Warmup Iteration   2: 3.494 ns/op
# Warmup Iteration   3: 3.900 ns/op
# Warmup Iteration   4: 3.482 ns/op
# Warmup Iteration   5: 3.476 ns/op
Iteration   1: 3.477 ns/op
Iteration   2: 3.489 ns/op
Iteration   3: 3.471 ns/op
Iteration   4: 3.473 ns/op
Iteration   5: 3.492 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.oneArgument":
  4.224 ±(99.9%) 1.249 ns/op [Average]
  (min, avg, max) = (3.374, 4.224, 5.976), stdev = 1.168
  CI (99.9%): [2.975, 5.472] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.oneArgument:·asm":
PrintAssembly processed: 142238 total address lines.
Perf output processed (skipped 7.161 seconds):
 Column 1: cycles (5266 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 499 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fcd78738420: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fcd78738424: movabs r12,0x800000000
            0x00007fcd7873842e: add    r10,r12
            0x00007fcd78738431: xor    r12,r12
            0x00007fcd78738434: cmp    rax,r10
            0x00007fcd78738437: jne    0x00007fcd70c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fcd7873843d: data16 xchg ax,ax
          [Verified Entry Point]
  4.94%     0x00007fcd78738440: mov    DWORD PTR [rsp-0x14000],eax
  2.79%     0x00007fcd78738447: push   rbp
  3.70%     0x00007fcd78738448: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.02%     0x00007fcd7873844c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.33%     0x00007fcd78738453: mov    r8d,edx
  3.46%     0x00007fcd78738456: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.56%     0x00007fcd7873845d: mov    r9d,edx
  1.79%     0x00007fcd78738460: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.39%     0x00007fcd78738463: cmp    r9d,r8d
         ╭  0x00007fcd78738466: je     0x00007fcd78738478  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.36%  │  0x00007fcd78738468: add    rsp,0x20
  1.58%  │  0x00007fcd7873846c: pop    rbp
  5.41%  │  0x00007fcd7873846d: mov    r10,QWORD PTR [r15+0x108]
  0.95%  │  0x00007fcd78738474: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.77%  │  0x00007fcd78738477: ret    
         ↘  0x00007fcd78738478: mov    rbp,rsi
            0x00007fcd7873847b: mov    DWORD PTR [rsp],edx
            0x00007fcd7873847e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fcd78738483: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fcd78738488: mov    esi,0xffffff4d
            0x00007fcd7873848d: xchg   ax,ax
            0x00007fcd7873848f: call   0x00007fcd70c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 38.04%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 521 (51 bytes) 

             0x00007fcd7873bb40: mov    r10,QWORD PTR [rsp+0x38]
             0x00007fcd7873bb45: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fcd7873bc12
             0x00007fcd7873bb4d: mov    ebp,0x1
             0x00007fcd7873bb52: test   r11d,r11d
         ╭   0x00007fcd7873bb55: jne    0x00007fcd7873bb98  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
         │   0x00007fcd7873bb57: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@36 (line 193)
  2.66%  │↗  0x00007fcd7873bb60: mov    rsi,QWORD PTR [rsp+0x40]
  1.90%  ││  0x00007fcd7873bb65: xchg   ax,ax
  2.01%  ││  0x00007fcd7873bb67: call   0x00007fcd70c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual oneArgument {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  1.25%  ││  0x00007fcd7873bb6c: mov    rsi,QWORD PTR [rsp]
  5.05%  ││  0x00007fcd7873bb70: mov    edx,eax
  1.96%  ││  0x00007fcd7873bb72: nop
  1.33%  ││  0x00007fcd7873bb73: call   0x00007fcd70c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  2.87%  ││  0x00007fcd7873bb78: mov    r10,QWORD PTR [rsp+0x38]
  3.00%  ││  0x00007fcd7873bb7d: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
  2.75%  ││  0x00007fcd7873bb85: mov    r10,QWORD PTR [r15+0x108]
  2.53%  ││  0x00007fcd7873bb8c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
  2.24%  ││  0x00007fcd7873bb90: test   DWORD PTR [r10],eax  ;   {poll}
  0.72%  ││  0x00007fcd7873bb93: test   r11d,r11d
         │╰  0x00007fcd7873bb96: je     0x00007fcd7873bb60  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@36 (line 193)
         ↘   0x00007fcd7873bb98: movabs r10,0x7fcd8d77ea00
             0x00007fcd7873bba2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@37 (line 193)
             0x00007fcd7873bba5: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fcd7873bbaa: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@52 (line 195)
             0x00007fcd7873bbae: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@40 (line 193)
....................................................................................................
 30.27%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument, version 498 (34 bytes) 

           # {method} {0x00007fcd5bcdd9b8} &apos;oneArgument&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsJavaBenchmark&apos;
           #           [sp+0x20]  (sp of caller)
           0x00007fcd78738120: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007fcd78738124: movabs r12,0x800000000
           0x00007fcd7873812e: add    r10,r12
           0x00007fcd78738131: xor    r12,r12
           0x00007fcd78738134: cmp    rax,r10
           0x00007fcd78738137: jne    0x00007fcd70c68c80  ;   {runtime_call ic_miss_stub}
           0x00007fcd7873813d: data16 xchg ax,ax
         [Verified Entry Point]
  3.10%    0x00007fcd78738140: sub    rsp,0x18
  3.99%    0x00007fcd78738147: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument@-1 (line 54)
  0.61%    0x00007fcd7873814c: mov    eax,DWORD PTR [rsi+0x10]
  2.89%    0x00007fcd7873814f: imul   eax,DWORD PTR [rsi+0xc]  ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@2 (line 64)
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument@10 (line 54)
  2.87%    0x00007fcd78738153: add    rsp,0x10
  1.60%    0x00007fcd78738157: pop    rbp
  7.86%    0x00007fcd78738158: mov    r10,QWORD PTR [r15+0x108]
  1.50%    0x00007fcd7873815f: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.41%    0x00007fcd78738162: ret    
           0x00007fcd78738163: hlt    
           0x00007fcd78738164: hlt    
           0x00007fcd78738165: hlt    
           0x00007fcd78738166: hlt    
           0x00007fcd78738167: hlt    
           0x00007fcd78738168: hlt    
           0x00007fcd78738169: hlt    
           0x00007fcd7873816a: hlt    
           0x00007fcd7873816b: hlt    
           0x00007fcd7873816c: hlt    
....................................................................................................
 25.81%  <total for region 3>

....[Hottest Regions]...............................................................................
 38.04%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 499 (55 bytes) 
 30.27%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 521 (51 bytes) 
 25.81%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument, version 498 (34 bytes) 
  2.91%              kernel  [unknown] (6 bytes) 
  0.30%              kernel  [unknown] (39 bytes) 
  0.23%              kernel  [unknown] (3 bytes) 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.09%              kernel  [unknown] (1 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.08%           libjvm.so  _ZN10fileStream5writeEPKcm (25 bytes) 
  0.06%              kernel  [unknown] (23 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%  libpthread-2.28.so  __libc_write (16 bytes) 
  0.04%              kernel  [unknown] (9 bytes) 
  0.04%              kernel  [unknown] (9 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (32 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (13 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  1.58%  <...other 81 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 38.04%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 499 
 30.27%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 521 
 25.81%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument, version 498 
  4.79%              kernel  [unknown] 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%      hsdis-amd64.so  print_insn 
  0.08%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.08%        libc-2.28.so  vfprintf 
  0.06%  libpthread-2.28.so  __libc_write 
  0.04%          ld-2.28.so  __tls_get_addr 
  0.02%           libjvm.so  _ZNK8Constant8can_trapEv 
  0.02%           libjvm.so  _ZN6Method8allocateEP15ClassLoaderDatai11AccessFlagsP16InlineTableSizesN11ConstMethod10MethodTypeEP6Thread 
  0.02%        libc-2.28.so  __strcmp_avx2 
  0.02%      hsdis-amd64.so  print_operand_value 
  0.02%           libjvm.so  _ZN15ClassFileParser12parse_streamEPK15ClassFileStreamP6Thread.part.136 
  0.02%           libjvm.so  _ZN2os6strdupEPKc10MemoryType 
  0.02%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%           libjvm.so  _ZN14IntervalWalker19append_to_unhandledEPP8IntervalS1_ 
  0.02%           libjvm.so  _ZN16BacktraceBuilder4pushEP6MethodiP6Thread 
  0.02%      hsdis-amd64.so  putop 
  0.40%  <...other 21 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.11%         c2, level 4
  4.79%              kernel
  0.63%           libjvm.so
  0.23%        libc-2.28.so
  0.11%      hsdis-amd64.so
  0.06%  libpthread-2.28.so
  0.04%          ld-2.28.so
  0.02%         c1, level 3
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 138898 total address lines.
Perf output processed (skipped 7.206 seconds):
 Column 1: cycles (5284 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 521 (39 bytes) 

             0x00007fa3c4316ac5: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fa3c4316b92
             0x00007fa3c4316acd: mov    ebp,0x1
             0x00007fa3c4316ad2: test   r11d,r11d
         ╭   0x00007fa3c4316ad5: jne    0x00007fa3c4316b18  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
         │   0x00007fa3c4316ad7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@36 (line 193)
         │↗  0x00007fa3c4316ae0: mov    rsi,QWORD PTR [rsp+0x40]
  4.01%  ││  0x00007fa3c4316ae5: xchg   ax,ax
         ││  0x00007fa3c4316ae7: call   0x00007fa3bc843f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual oneArgument {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
         ││  0x00007fa3c4316aec: mov    rsi,QWORD PTR [rsp]
         ││  0x00007fa3c4316af0: mov    edx,eax
  4.07%  ││  0x00007fa3c4316af2: nop
         ││  0x00007fa3c4316af3: call   0x00007fa3bc843f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
 45.23%  ││  0x00007fa3c4316af8: mov    r10,QWORD PTR [rsp+0x38]
  0.02%  ││  0x00007fa3c4316afd: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
  0.02%  ││  0x00007fa3c4316b05: mov    r10,QWORD PTR [r15+0x108]
  4.52%  ││  0x00007fa3c4316b0c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
         ││  0x00007fa3c4316b10: test   DWORD PTR [r10],eax  ;   {poll}
         ││  0x00007fa3c4316b13: test   r11d,r11d
         │╰  0x00007fa3c4316b16: je     0x00007fa3c4316ae0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@36 (line 193)
         ↘   0x00007fa3c4316b18: movabs r10,0x7fa3d94aea00
             0x00007fa3c4316b22: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@37 (line 193)
             0x00007fa3c4316b25: mov    r10,QWORD PTR [rsp+0x30]
....................................................................................................
 57.87%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 493 (38 bytes) 

            #           [sp+0x30]  (sp of caller)
            0x00007fa3c43121a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fa3c43121a4: movabs r12,0x800000000
            0x00007fa3c43121ae: add    r10,r12
            0x00007fa3c43121b1: xor    r12,r12
            0x00007fa3c43121b4: cmp    rax,r10
            0x00007fa3c43121b7: jne    0x00007fa3bc843c80  ;   {runtime_call ic_miss_stub}
            0x00007fa3c43121bd: data16 xchg ax,ax
          [Verified Entry Point]
            0x00007fa3c43121c0: mov    DWORD PTR [rsp-0x14000],eax
  4.67%     0x00007fa3c43121c7: push   rbp
            0x00007fa3c43121c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.11%     0x00007fa3c43121cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
            0x00007fa3c43121d3: mov    r8d,edx
            0x00007fa3c43121d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
            0x00007fa3c43121dd: mov    r9d,edx
  4.33%     0x00007fa3c43121e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
            0x00007fa3c43121e3: cmp    r9d,r8d
         ╭  0x00007fa3c43121e6: je     0x00007fa3c43121f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
         │  0x00007fa3c43121e8: add    rsp,0x20
         │  0x00007fa3c43121ec: pop    rbp
  9.61%  │  0x00007fa3c43121ed: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007fa3c43121f4: test   DWORD PTR [r10],eax  ;   {poll_return}
         │  0x00007fa3c43121f7: ret    
         ↘  0x00007fa3c43121f8: mov    rbp,rsi
            0x00007fa3c43121fb: mov    DWORD PTR [rsp],edx
            0x00007fa3c43121fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fa3c4312203: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fa3c4312208: mov    esi,0xffffff4d
            0x00007fa3c431220d: xchg   ax,ax
            0x00007fa3c431220f: call   0x00007fa3bc845900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
....................................................................................................
 22.73%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument, version 491 (27 bytes) 

           #           [sp+0x20]  (sp of caller)
           0x00007fa3c4311ea0: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007fa3c4311ea4: movabs r12,0x800000000
           0x00007fa3c4311eae: add    r10,r12
           0x00007fa3c4311eb1: xor    r12,r12
           0x00007fa3c4311eb4: cmp    rax,r10
           0x00007fa3c4311eb7: jne    0x00007fa3bc843c80  ;   {runtime_call ic_miss_stub}
           0x00007fa3c4311ebd: data16 xchg ax,ax
         [Verified Entry Point]
           0x00007fa3c4311ec0: sub    rsp,0x18
  4.37%    0x00007fa3c4311ec7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument@-1 (line 54)
           0x00007fa3c4311ecc: mov    eax,DWORD PTR [rsi+0x10]
           0x00007fa3c4311ecf: imul   eax,DWORD PTR [rsi+0xc]  ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@2 (line 64)
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument@10 (line 54)
  4.56%    0x00007fa3c4311ed3: add    rsp,0x10
           0x00007fa3c4311ed7: pop    rbp
           0x00007fa3c4311ed8: mov    r10,QWORD PTR [r15+0x108]
           0x00007fa3c4311edf: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.18%    0x00007fa3c4311ee2: ret    
           0x00007fa3c4311ee3: hlt    
           0x00007fa3c4311ee4: hlt    
           0x00007fa3c4311ee5: hlt    
           0x00007fa3c4311ee6: hlt    
           0x00007fa3c4311ee7: hlt    
           0x00007fa3c4311ee8: hlt    
           0x00007fa3c4311ee9: hlt    
           0x00007fa3c4311eea: hlt    
           0x00007fa3c4311eeb: hlt    
           0x00007fa3c4311eec: hlt    
....................................................................................................
 13.12%  <total for region 3>

....[Hottest Regions]...............................................................................
 57.87%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 521 (39 bytes) 
 22.73%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 493 (38 bytes) 
 13.12%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument, version 491 (27 bytes) 
  2.76%              kernel  [unknown] (6 bytes) 
  0.26%              kernel  [unknown] (30 bytes) 
  0.23%              kernel  [unknown] (1 bytes) 
  0.13%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (34 bytes) 
  0.11%              kernel  [unknown] (18 bytes) 
  0.11%              kernel  [unknown] (10 bytes) 
  0.08%              kernel  [unknown] (13 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (28 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (15 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ (23 bytes) 
  0.04%              kernel  [unknown] (1 bytes) 
  0.04%              kernel  [unknown] (6 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  2.06%  <...other 100 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 57.87%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 521 
 22.73%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 493 
 13.12%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument, version 491 
  5.00%              kernel  [unknown] 
  0.13%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%        libc-2.28.so  vfprintf 
  0.06%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.06%        libc-2.28.so  _IO_fflush 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.06%  libpthread-2.28.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%      hsdis-amd64.so  putop 
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%      hsdis-amd64.so  decode 
  0.02%           libjvm.so  jio_print 
  0.02%           libjvm.so  _ZN16LIR_OpVisitState5visitEP6LIR_Op 
  0.02%           libjvm.so  _ZN15java_lang_Class8as_KlassEP7oopDesc 
  0.51%  <...other 27 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 93.74%         c2, level 4
  5.00%              kernel
  0.59%           libjvm.so
  0.28%        libc-2.28.so
  0.17%      hsdis-amd64.so
  0.11%  libpthread-2.28.so
  0.08%         interpreter
  0.02%          ld-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 135372 total address lines.
Perf output processed (skipped 6.924 seconds):
 Column 1: cycles (5303 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 482 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f76947368a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f76947368a4: movabs r12,0x800000000
            0x00007f76947368ae: add    r10,r12
            0x00007f76947368b1: xor    r12,r12
            0x00007f76947368b4: cmp    rax,r10
            0x00007f76947368b7: jne    0x00007f768cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007f76947368bd: data16 xchg ax,ax
          [Verified Entry Point]
  5.54%     0x00007f76947368c0: mov    DWORD PTR [rsp-0x14000],eax
  2.77%     0x00007f76947368c7: push   rbp
  3.39%     0x00007f76947368c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.05%     0x00007f76947368cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.23%     0x00007f76947368d3: mov    r8d,edx
  3.43%     0x00007f76947368d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.60%     0x00007f76947368dd: mov    r9d,edx
  1.60%     0x00007f76947368e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.13%     0x00007f76947368e3: cmp    r9d,r8d
         ╭  0x00007f76947368e6: je     0x00007f76947368f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.68%  │  0x00007f76947368e8: add    rsp,0x20
  1.57%  │  0x00007f76947368ec: pop    rbp
  4.96%  │  0x00007f76947368ed: mov    r10,QWORD PTR [r15+0x108]
  0.98%  │  0x00007f76947368f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.51%  │  0x00007f76947368f7: ret    
         ↘  0x00007f76947368f8: mov    rbp,rsi
            0x00007f76947368fb: mov    DWORD PTR [rsp],edx
            0x00007f76947368fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f7694736903: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f7694736908: mov    esi,0xffffff4d
            0x00007f769473690d: xchg   ax,ax
            0x00007f769473690f: call   0x00007f768cc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 37.45%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 513 (51 bytes) 

             0x00007f769473a640: mov    r10,QWORD PTR [rsp+0x38]
             0x00007f769473a645: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f769473a712
             0x00007f769473a64d: mov    ebp,0x1
             0x00007f769473a652: test   r11d,r11d
         ╭   0x00007f769473a655: jne    0x00007f769473a698  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
         │   0x00007f769473a657: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@36 (line 193)
  2.70%  │↗  0x00007f769473a660: mov    rsi,QWORD PTR [rsp+0x40]
  2.34%  ││  0x00007f769473a665: xchg   ax,ax
  2.24%  ││  0x00007f769473a667: call   0x00007f768cc68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual oneArgument {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  0.74%  ││  0x00007f769473a66c: mov    rsi,QWORD PTR [rsp]
  5.13%  ││  0x00007f769473a670: mov    edx,eax
  1.66%  ││  0x00007f769473a672: nop
  1.11%  ││  0x00007f769473a673: call   0x00007f768cc68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  2.34%  ││  0x00007f769473a678: mov    r10,QWORD PTR [rsp+0x38]
  2.87%  ││  0x00007f769473a67d: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
  2.47%  ││  0x00007f769473a685: mov    r10,QWORD PTR [r15+0x108]
  2.09%  ││  0x00007f769473a68c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
  2.21%  ││  0x00007f769473a690: test   DWORD PTR [r10],eax  ;   {poll}
  0.81%  ││  0x00007f769473a693: test   r11d,r11d
         │╰  0x00007f769473a696: je     0x00007f769473a660  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@36 (line 193)
         ↘   0x00007f769473a698: movabs r10,0x7f76aa3d3a00
             0x00007f769473a6a2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@37 (line 193)
             0x00007f769473a6a5: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f769473a6aa: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@52 (line 195)
             0x00007f769473a6ae: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@40 (line 193)
....................................................................................................
 28.70%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument, version 481 (34 bytes) 

           # {method} {0x00007f767c95d9b8} &apos;oneArgument&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsJavaBenchmark&apos;
           #           [sp+0x20]  (sp of caller)
           0x00007f76947365a0: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007f76947365a4: movabs r12,0x800000000
           0x00007f76947365ae: add    r10,r12
           0x00007f76947365b1: xor    r12,r12
           0x00007f76947365b4: cmp    rax,r10
           0x00007f76947365b7: jne    0x00007f768cc68c80  ;   {runtime_call ic_miss_stub}
           0x00007f76947365bd: data16 xchg ax,ax
         [Verified Entry Point]
  3.43%    0x00007f76947365c0: sub    rsp,0x18
  4.30%    0x00007f76947365c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument@-1 (line 54)
  1.09%    0x00007f76947365cc: mov    eax,DWORD PTR [rsi+0x10]
  2.68%    0x00007f76947365cf: imul   eax,DWORD PTR [rsi+0xc]  ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@2 (line 64)
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument@10 (line 54)
  2.98%    0x00007f76947365d3: add    rsp,0x10
  1.85%    0x00007f76947365d7: pop    rbp
  7.37%    0x00007f76947365d8: mov    r10,QWORD PTR [r15+0x108]
  1.83%    0x00007f76947365df: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.79%    0x00007f76947365e2: ret    
           0x00007f76947365e3: hlt    
           0x00007f76947365e4: hlt    
           0x00007f76947365e5: hlt    
           0x00007f76947365e6: hlt    
           0x00007f76947365e7: hlt    
           0x00007f76947365e8: hlt    
           0x00007f76947365e9: hlt    
           0x00007f76947365ea: hlt    
           0x00007f76947365eb: hlt    
           0x00007f76947365ec: hlt    
....................................................................................................
 27.32%  <total for region 3>

....[Hottest Regions]...............................................................................
 37.45%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 482 (55 bytes) 
 28.70%     c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 513 (51 bytes) 
 27.32%     c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument, version 481 (34 bytes) 
  3.38%          kernel  [unknown] (6 bytes) 
  0.28%          kernel  [unknown] (51 bytes) 
  0.15%          kernel  [unknown] (13 bytes) 
  0.15%          kernel  [unknown] (0 bytes) 
  0.11%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.08%          kernel  [unknown] (0 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.06%          kernel  [unknown] (29 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (19 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (22 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  1.89%  <...other 92 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 37.45%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 482 
 28.70%     c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 513 
 27.32%     c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::oneArgument, version 481 
  5.51%          kernel  [unknown] 
  0.11%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%  hsdis-amd64.so  print_insn 
  0.06%    libc-2.28.so  _IO_fwrite 
  0.06%       libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.04%       libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%  hsdis-amd64.so  ckprefix 
  0.04%     interpreter  method entry point (kind = zerolocals)  
  0.04%    libc-2.28.so  __strlen_avx2 
  0.04%       libjvm.so  _ZN10fileStream5writeEPKcm 
  0.04%    libc-2.28.so  _IO_str_init_static_internal 
  0.04%    libc-2.28.so  vfprintf 
  0.04%    libc-2.28.so  _IO_default_xsputn 
  0.02%       libjvm.so  jio_print 
  0.02%       libjvm.so  _ZNK22ImplicitExceptionTable2atEj 
  0.02%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%       libjvm.so  _ZN11ProfileCall5visitEP18InstructionVisitor 
  0.34%  <...other 18 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 93.49%     c2, level 4
  5.51%          kernel
  0.57%       libjvm.so
  0.25%    libc-2.28.so
  0.11%  hsdis-amd64.so
  0.04%     interpreter
  0.02%     c1, level 3
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsJavaBenchmark.twoArguments
# Parameters: (delta = 1, factor = 2, value = 8)

# Run progress: 33.33% complete, ETA 00:02:32
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.547 ns/op
# Warmup Iteration   2: 4.019 ns/op
# Warmup Iteration   3: 4.492 ns/op
# Warmup Iteration   4: 4.424 ns/op
# Warmup Iteration   5: 3.977 ns/op
Iteration   1: 3.986 ns/op
Iteration   2: 3.986 ns/op
Iteration   3: 3.938 ns/op
Iteration   4: 3.946 ns/op
Iteration   5: 3.985 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 38.89% complete, ETA 00:02:19
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.933 ns/op
# Warmup Iteration   2: 3.861 ns/op
# Warmup Iteration   3: 3.853 ns/op
# Warmup Iteration   4: 3.454 ns/op
# Warmup Iteration   5: 3.464 ns/op
Iteration   1: 3.472 ns/op
Iteration   2: 3.469 ns/op
Iteration   3: 3.462 ns/op
Iteration   4: 3.457 ns/op
Iteration   5: 3.472 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 44.44% complete, ETA 00:02:06
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.533 ns/op
# Warmup Iteration   2: 3.504 ns/op
# Warmup Iteration   3: 3.876 ns/op
# Warmup Iteration   4: 3.477 ns/op
# Warmup Iteration   5: 3.499 ns/op
Iteration   1: 3.525 ns/op
Iteration   2: 3.568 ns/op
Iteration   3: 3.651 ns/op
Iteration   4: 5.457 ns/op
Iteration   5: 3.809 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.twoArguments":
  3.812 ±(99.9%) 0.542 ns/op [Average]
  (min, avg, max) = (3.457, 3.812, 5.457), stdev = 0.507
  CI (99.9%): [3.270, 4.354] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.twoArguments:·asm":
PrintAssembly processed: 140650 total address lines.
Perf output processed (skipped 7.152 seconds):
 Column 1: cycles (5245 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 489 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fd2f0737020: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fd2f0737024: movabs r12,0x800000000
            0x00007fd2f073702e: add    r10,r12
            0x00007fd2f0737031: xor    r12,r12
            0x00007fd2f0737034: cmp    rax,r10
            0x00007fd2f0737037: jne    0x00007fd2e8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fd2f073703d: data16 xchg ax,ax
          [Verified Entry Point]
  4.31%     0x00007fd2f0737040: mov    DWORD PTR [rsp-0x14000],eax
  3.24%     0x00007fd2f0737047: push   rbp
  4.27%     0x00007fd2f0737048: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.06%     0x00007fd2f073704c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.13%     0x00007fd2f0737053: mov    r8d,edx
  3.78%     0x00007fd2f0737056: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.55%     0x00007fd2f073705d: mov    r9d,edx
  2.76%     0x00007fd2f0737060: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.11%     0x00007fd2f0737063: cmp    r9d,r8d
         ╭  0x00007fd2f0737066: je     0x00007fd2f0737078  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.27%  │  0x00007fd2f0737068: add    rsp,0x20
  0.38%  │  0x00007fd2f073706c: pop    rbp
  6.60%  │  0x00007fd2f073706d: mov    r10,QWORD PTR [r15+0x108]
  0.21%  │  0x00007fd2f0737074: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.36%  │  0x00007fd2f0737077: ret    
         ↘  0x00007fd2f0737078: mov    rbp,rsi
            0x00007fd2f073707b: mov    DWORD PTR [rsp],edx
            0x00007fd2f073707e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fd2f0737083: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fd2f0737088: mov    esi,0xffffff4d
            0x00007fd2f073708d: xchg   ax,ax
            0x00007fd2f073708f: call   0x00007fd2e8c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 38.04%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments, version 488 (37 bytes) 

           # {method} {0x00007fd2d5fdda90} &apos;twoArguments&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsJavaBenchmark&apos;
           #           [sp+0x20]  (sp of caller)
           0x00007fd2f0736d20: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007fd2f0736d24: movabs r12,0x800000000
           0x00007fd2f0736d2e: add    r10,r12
           0x00007fd2f0736d31: xor    r12,r12
           0x00007fd2f0736d34: cmp    rax,r10
           0x00007fd2f0736d37: jne    0x00007fd2e8c68c80  ;   {runtime_call ic_miss_stub}
           0x00007fd2f0736d3d: data16 xchg ax,ax
         [Verified Entry Point]
  3.39%    0x00007fd2f0736d40: sub    rsp,0x18
  4.31%    0x00007fd2f0736d47: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments@-1 (line 60)
  0.11%    0x00007fd2f0736d4c: mov    eax,DWORD PTR [rsi+0x10]
  3.39%    0x00007fd2f0736d4f: imul   eax,DWORD PTR [rsi+0xc]
  2.59%    0x00007fd2f0736d53: add    eax,DWORD PTR [rsi+0x14]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@4 (line 64)
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments@13 (line 60)
  4.16%    0x00007fd2f0736d56: add    rsp,0x10
  0.06%    0x00007fd2f0736d5a: pop    rbp
  7.99%    0x00007fd2f0736d5b: mov    r10,QWORD PTR [r15+0x108]
  0.46%    0x00007fd2f0736d62: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.24%    0x00007fd2f0736d65: ret    
           0x00007fd2f0736d66: hlt    
           0x00007fd2f0736d67: hlt    
           0x00007fd2f0736d68: hlt    
           0x00007fd2f0736d69: hlt    
           0x00007fd2f0736d6a: hlt    
           0x00007fd2f0736d6b: hlt    
           0x00007fd2f0736d6c: hlt    
           0x00007fd2f0736d6d: hlt    
           0x00007fd2f0736d6e: hlt    
           0x00007fd2f0736d6f: hlt    
....................................................................................................
 29.70%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 525 (51 bytes) 

             0x00007fd2f073b740: mov    r10,QWORD PTR [rsp+0x38]
             0x00007fd2f073b745: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fd2f073b812
             0x00007fd2f073b74d: mov    ebp,0x1
             0x00007fd2f073b752: test   r11d,r11d
         ╭   0x00007fd2f073b755: jne    0x00007fd2f073b798  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
         │   0x00007fd2f073b757: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@36 (line 193)
  2.99%  │↗  0x00007fd2f073b760: mov    rsi,QWORD PTR [rsp+0x40]
  1.56%  ││  0x00007fd2f073b765: xchg   ax,ax
  2.99%  ││  0x00007fd2f073b767: call   0x00007fd2e8c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual twoArguments {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  0.04%  ││  0x00007fd2f073b76c: mov    rsi,QWORD PTR [rsp]
  4.08%  ││  0x00007fd2f073b770: mov    edx,eax
  3.18%  ││  0x00007fd2f073b772: nop
  0.04%  ││  0x00007fd2f073b773: call   0x00007fd2e8c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  2.04%  ││  0x00007fd2f073b778: mov    r10,QWORD PTR [rsp+0x38]
  2.65%  ││  0x00007fd2f073b77d: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
  2.88%  ││  0x00007fd2f073b785: mov    r10,QWORD PTR [r15+0x108]
  1.60%  ││  0x00007fd2f073b78c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
  2.73%  ││  0x00007fd2f073b790: test   DWORD PTR [r10],eax  ;   {poll}
  0.11%  ││  0x00007fd2f073b793: test   r11d,r11d
         │╰  0x00007fd2f073b796: je     0x00007fd2f073b760  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007fd2f073b798: movabs r10,0x7fd3082e1a00
             0x00007fd2f073b7a2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@37 (line 193)
             0x00007fd2f073b7a5: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fd2f073b7aa: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@52 (line 195)
             0x00007fd2f073b7ae: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 26.90%  <total for region 3>

....[Hottest Regions]...............................................................................
 38.04%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 489 (55 bytes) 
 29.70%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments, version 488 (37 bytes) 
 26.90%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 525 (51 bytes) 
  2.42%              kernel  [unknown] (6 bytes) 
  0.27%              kernel  [unknown] (39 bytes) 
  0.21%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.15%              kernel  [unknown] (0 bytes) 
  0.10%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (22 bytes) 
  0.06%              kernel  [unknown] (26 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (1 bytes) 
  0.06%  libpthread-2.28.so  __libc_write (16 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (5 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%        libc-2.28.so  _IO_fwrite (0 bytes) 
  1.62%  <...other 85 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 38.04%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 489 
 29.70%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments, version 488 
 26.90%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 525 
  4.12%              kernel  [unknown] 
  0.21%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%        libc-2.28.so  _IO_fwrite 
  0.06%  libpthread-2.28.so  __libc_write 
  0.06%        libc-2.28.so  __stpcpy_sse2_unaligned 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%      hsdis-amd64.so  ckprefix 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.02%           libjvm.so  _ZN12GraphBuilder15append_with_bciEP11Instructioni 
  0.02%           libjvm.so  _ZNK19ImmutableOopMapPair8get_fromEPK18ImmutableOopMapSet 
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%        libc-2.28.so  _IO_fflush 
  0.02%      hsdis-amd64.so  putop 
  0.02%           libjvm.so  _ZNK6Method20line_number_from_bciEi 
  0.50%  <...other 26 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.64%         c2, level 4
  4.12%              kernel
  0.61%           libjvm.so
  0.32%        libc-2.28.so
  0.10%      hsdis-amd64.so
  0.06%  libpthread-2.28.so
  0.06%         c1, level 3
  0.06%         interpreter
  0.02%                    
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 141285 total address lines.
Perf output processed (skipped 7.100 seconds):
 Column 1: cycles (5269 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 484 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f820c7364a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f820c7364a4: movabs r12,0x800000000
            0x00007f820c7364ae: add    r10,r12
            0x00007f820c7364b1: xor    r12,r12
            0x00007f820c7364b4: cmp    rax,r10
            0x00007f820c7364b7: jne    0x00007f8204c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f820c7364bd: data16 xchg ax,ax
          [Verified Entry Point]
  4.46%     0x00007f820c7364c0: mov    DWORD PTR [rsp-0x14000],eax
  3.02%     0x00007f820c7364c7: push   rbp
  3.38%     0x00007f820c7364c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.81%     0x00007f820c7364cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.06%     0x00007f820c7364d3: mov    r8d,edx
  3.83%     0x00007f820c7364d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.49%     0x00007f820c7364dd: mov    r9d,edx
  3.47%     0x00007f820c7364e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.15%     0x00007f820c7364e3: cmp    r9d,r8d
         ╭  0x00007f820c7364e6: je     0x00007f820c7364f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.00%  │  0x00007f820c7364e8: add    rsp,0x20
  0.51%  │  0x00007f820c7364ec: pop    rbp
  5.94%  │  0x00007f820c7364ed: mov    r10,QWORD PTR [r15+0x108]
  0.08%  │  0x00007f820c7364f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.42%  │  0x00007f820c7364f7: ret    
         ↘  0x00007f820c7364f8: mov    rbp,rsi
            0x00007f820c7364fb: mov    DWORD PTR [rsp],edx
            0x00007f820c7364fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f820c736503: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f820c736508: mov    esi,0xffffff4d
            0x00007f820c73650d: xchg   ax,ax
            0x00007f820c73650f: call   0x00007f8204c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 36.63%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments, version 483 (37 bytes) 

           # {method} {0x00007f81e7edda90} &apos;twoArguments&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsJavaBenchmark&apos;
           #           [sp+0x20]  (sp of caller)
           0x00007f820c7361a0: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007f820c7361a4: movabs r12,0x800000000
           0x00007f820c7361ae: add    r10,r12
           0x00007f820c7361b1: xor    r12,r12
           0x00007f820c7361b4: cmp    rax,r10
           0x00007f820c7361b7: jne    0x00007f8204c68c80  ;   {runtime_call ic_miss_stub}
           0x00007f820c7361bd: data16 xchg ax,ax
         [Verified Entry Point]
  3.09%    0x00007f820c7361c0: sub    rsp,0x18
  4.48%    0x00007f820c7361c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments@-1 (line 60)
  0.11%    0x00007f820c7361cc: mov    eax,DWORD PTR [rsi+0x10]
  2.62%    0x00007f820c7361cf: imul   eax,DWORD PTR [rsi+0xc]
  3.21%    0x00007f820c7361d3: add    eax,DWORD PTR [rsi+0x14]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@4 (line 64)
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments@13 (line 60)
  4.38%    0x00007f820c7361d6: add    rsp,0x10
  0.04%    0x00007f820c7361da: pop    rbp
  7.46%    0x00007f820c7361db: mov    r10,QWORD PTR [r15+0x108]
  0.47%    0x00007f820c7361e2: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.13%    0x00007f820c7361e5: ret    
           0x00007f820c7361e6: hlt    
           0x00007f820c7361e7: hlt    
           0x00007f820c7361e8: hlt    
           0x00007f820c7361e9: hlt    
           0x00007f820c7361ea: hlt    
           0x00007f820c7361eb: hlt    
           0x00007f820c7361ec: hlt    
           0x00007f820c7361ed: hlt    
           0x00007f820c7361ee: hlt    
           0x00007f820c7361ef: hlt    
....................................................................................................
 29.00%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 517 (48 bytes) 

             0x00007f820c739f40: mov    r10,QWORD PTR [rsp+0x38]
             0x00007f820c739f45: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f820c73a012
             0x00007f820c739f4d: mov    ebp,0x1
             0x00007f820c739f52: test   r11d,r11d
         ╭   0x00007f820c739f55: jne    0x00007f820c739f98  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
         │   0x00007f820c739f57: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@36 (line 193)
  2.90%  │↗  0x00007f820c739f60: mov    rsi,QWORD PTR [rsp+0x40]
  1.92%  ││  0x00007f820c739f65: xchg   ax,ax
  2.98%  ││  0x00007f820c739f67: call   0x00007f8204c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual twoArguments {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  0.02%  ││  0x00007f820c739f6c: mov    rsi,QWORD PTR [rsp]
  3.89%  ││  0x00007f820c739f70: mov    edx,eax
  3.64%  ││  0x00007f820c739f72: nop
  0.04%  ││  0x00007f820c739f73: call   0x00007f8204c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  2.28%  ││  0x00007f820c739f78: mov    r10,QWORD PTR [rsp+0x38]
  3.32%  ││  0x00007f820c739f7d: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
  2.96%  ││  0x00007f820c739f85: mov    r10,QWORD PTR [r15+0x108]
  1.54%  ││  0x00007f820c739f8c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
  2.71%  ││  0x00007f820c739f90: test   DWORD PTR [r10],eax  ;   {poll}
         ││  0x00007f820c739f93: test   r11d,r11d
         │╰  0x00007f820c739f96: je     0x00007f820c739f60  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f820c739f98: movabs r10,0x7f8221960a00
             0x00007f820c739fa2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@37 (line 193)
             0x00007f820c739fa5: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f820c739faa: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 28.20%  <total for region 3>

....[Hottest Regions]...............................................................................
 36.63%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 484 (55 bytes) 
 29.00%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments, version 483 (37 bytes) 
 28.20%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 517 (48 bytes) 
  2.90%              kernel  [unknown] (6 bytes) 
  0.19%              kernel  [unknown] (1 bytes) 
  0.15%              kernel  [unknown] (15 bytes) 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (52 bytes) 
  0.09%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (26 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (34 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ (27 bytes) 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (24 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (23 bytes) 
  2.05%  <...other 103 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 36.63%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 484 
 29.00%         c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments, version 483 
 28.20%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 517 
  4.71%              kernel  [unknown] 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.09%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.08%         interpreter  method entry point (kind = zerolocals)  
  0.06%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.06%        libc-2.28.so  _IO_default_xsputn 
  0.04%      hsdis-amd64.so  putop 
  0.04%        libc-2.28.so  _IO_fwrite 
  0.04%           libjvm.so  _ZN8Constant11as_ConstantEv 
  0.04%           libjvm.so  SpinPause 
  0.04%         interpreter  invokevirtual  182 invokevirtual  
  0.04%        libc-2.28.so  __strcpy_sse2_unaligned 
  0.02%           libjvm.so  _ZN10ValueStack25pin_stack_for_linear_scanEv 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%           libjvm.so  _ZNK17interpretedVFrame8monitorsEv 
  0.02%           libjvm.so  _ZN11StringTable9do_internE6HandlePtimP6Thread 
  0.02%           libjvm.so  _ZN12GraphBuilder27iterate_bytecodes_for_blockEi 
  0.68%  <...other 36 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 93.83%         c2, level 4
  4.71%              kernel
  0.87%           libjvm.so
  0.27%        libc-2.28.so
  0.19%         interpreter
  0.08%      hsdis-amd64.so
  0.02%  libpthread-2.28.so
  0.02%         c1, level 3
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 141121 total address lines.
Perf output processed (skipped 7.055 seconds):
 Column 1: cycles (5208 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 477 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007feec8738b20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007feec8738b24: movabs r12,0x800000000
            0x00007feec8738b2e: add    r10,r12
            0x00007feec8738b31: xor    r12,r12
            0x00007feec8738b34: cmp    rax,r10
            0x00007feec8738b37: jne    0x00007feec0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007feec8738b3d: data16 xchg ax,ax
          [Verified Entry Point]
  4.36%     0x00007feec8738b40: mov    DWORD PTR [rsp-0x14000],eax
  3.74%     0x00007feec8738b47: push   rbp
  3.26%     0x00007feec8738b48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.36%     0x00007feec8738b4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.25%     0x00007feec8738b53: mov    r8d,edx
  3.46%     0x00007feec8738b56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.69%     0x00007feec8738b5d: mov    r9d,edx
  3.34%     0x00007feec8738b60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.19%     0x00007feec8738b63: cmp    r9d,r8d
         ╭  0x00007feec8738b66: je     0x00007feec8738b78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.11%  │  0x00007feec8738b68: add    rsp,0x20
  0.33%  │  0x00007feec8738b6c: pop    rbp
  6.14%  │  0x00007feec8738b6d: mov    r10,QWORD PTR [r15+0x108]
  0.15%  │  0x00007feec8738b74: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.90%  │  0x00007feec8738b77: ret    
         ↘  0x00007feec8738b78: mov    rbp,rsi
            0x00007feec8738b7b: mov    DWORD PTR [rsp],edx
            0x00007feec8738b7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007feec8738b83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007feec8738b88: mov    esi,0xffffff4d
            0x00007feec8738b8d: xchg   ax,ax
            0x00007feec8738b8f: call   0x00007feec0c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 36.29%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments, version 479 (37 bytes) 

           # {method} {0x00007feeb0aeda90} &apos;twoArguments&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsJavaBenchmark&apos;
           #           [sp+0x20]  (sp of caller)
           0x00007feec8739220: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007feec8739224: movabs r12,0x800000000
           0x00007feec873922e: add    r10,r12
           0x00007feec8739231: xor    r12,r12
           0x00007feec8739234: cmp    rax,r10
           0x00007feec8739237: jne    0x00007feec0c68c80  ;   {runtime_call ic_miss_stub}
           0x00007feec873923d: data16 xchg ax,ax
         [Verified Entry Point]
  2.84%    0x00007feec8739240: sub    rsp,0x18
  4.44%    0x00007feec8739247: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments@-1 (line 60)
  0.21%    0x00007feec873924c: mov    eax,DWORD PTR [rsi+0x10]
  3.23%    0x00007feec873924f: imul   eax,DWORD PTR [rsi+0xc]
  3.86%    0x00007feec8739253: add    eax,DWORD PTR [rsi+0x14]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@4 (line 64)
                                                         ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments@13 (line 60)
  4.24%    0x00007feec8739256: add    rsp,0x10
  0.10%    0x00007feec873925a: pop    rbp
  6.55%    0x00007feec873925b: mov    r10,QWORD PTR [r15+0x108]
  0.35%    0x00007feec8739262: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.09%    0x00007feec8739265: ret    
           0x00007feec8739266: hlt    
           0x00007feec8739267: hlt    
           0x00007feec8739268: hlt    
           0x00007feec8739269: hlt    
           0x00007feec873926a: hlt    
           0x00007feec873926b: hlt    
           0x00007feec873926c: hlt    
           0x00007feec873926d: hlt    
           0x00007feec873926e: hlt    
           0x00007feec873926f: hlt    
....................................................................................................
 29.90%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 510 (51 bytes) 

             0x00007feec873c7c0: mov    r10,QWORD PTR [rsp+0x38]
             0x00007feec873c7c5: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007feec873c892
             0x00007feec873c7cd: mov    ebp,0x1
             0x00007feec873c7d2: test   r11d,r11d
         ╭   0x00007feec873c7d5: jne    0x00007feec873c818  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
         │   0x00007feec873c7d7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@36 (line 193)
  2.88%  │↗  0x00007feec873c7e0: mov    rsi,QWORD PTR [rsp+0x40]
  1.67%  ││  0x00007feec873c7e5: xchg   ax,ax
  2.34%  ││  0x00007feec873c7e7: call   0x00007feec0c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual twoArguments {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  0.06%  ││  0x00007feec873c7ec: mov    rsi,QWORD PTR [rsp]
  4.05%  ││  0x00007feec873c7f0: mov    edx,eax
  3.44%  ││  0x00007feec873c7f2: nop
  0.10%  ││  0x00007feec873c7f3: call   0x00007feec0c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  4.05%  ││  0x00007feec873c7f8: mov    r10,QWORD PTR [rsp+0x38]
  2.86%  ││  0x00007feec873c7fd: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
  2.59%  ││  0x00007feec873c805: mov    r10,QWORD PTR [r15+0x108]
  2.21%  ││  0x00007feec873c80c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
  2.44%  ││  0x00007feec873c810: test   DWORD PTR [r10],eax  ;   {poll}
  0.35%  ││  0x00007feec873c813: test   r11d,r11d
         │╰  0x00007feec873c816: je     0x00007feec873c7e0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007feec873c818: movabs r10,0x7feede56ca00
             0x00007feec873c822: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@37 (line 193)
             0x00007feec873c825: mov    r10,QWORD PTR [rsp+0x30]
             0x00007feec873c82a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@52 (line 195)
             0x00007feec873c82e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 29.03%  <total for region 3>

....[Hottest Regions]...............................................................................
 36.29%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 477 (55 bytes) 
 29.90%     c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments, version 479 (37 bytes) 
 29.03%     c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 510 (51 bytes) 
  1.65%          kernel  [unknown] (6 bytes) 
  0.23%          kernel  [unknown] (0 bytes) 
  0.23%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (49 bytes) 
  0.17%          kernel  [unknown] (30 bytes) 
  0.08%          kernel  [unknown] (28 bytes) 
  0.06%          kernel  [unknown] (30 bytes) 
  0.06%          kernel  [unknown] (11 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (5 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (2 bytes) 
  0.04%          kernel  [unknown] (12 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%       libjvm.so  _ZN12outputStream15update_positionEPKcm (6 bytes) 
  0.04%    libc-2.28.so  syscall (8 bytes) 
  1.88%  <...other 97 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 36.29%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 477 
 29.90%     c2, level 4  org.ib.benchmark.DefaultArgumentsJavaBenchmark::twoArguments, version 479 
 29.03%     c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 510 
  3.51%          kernel  [unknown] 
  0.23%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.10%       libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.06%    libc-2.28.so  vfprintf 
  0.04%    libc-2.28.so  _dl_addr 
  0.04%    libc-2.28.so  __strchr_avx2 
  0.04%     interpreter  method entry point (kind = zerolocals)  
  0.04%    libc-2.28.so  _IO_fwrite 
  0.04%       libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.04%    libc-2.28.so  _IO_default_xsputn 
  0.04%    libc-2.28.so  syscall 
  0.02%    libc-2.28.so  __memmove_avx_unaligned_erms 
  0.02%       libjvm.so  _ZNK19ImmutableOopMapPair8get_fromEPK18ImmutableOopMapSet 
  0.02%  hsdis-amd64.so  OP_REG 
  0.02%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%       libjvm.so  _ZN15SignatureStream18next_non_primitiveEi 
  0.02%    libc-2.28.so  _IO_fflush 
  0.48%  <...other 25 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.22%     c2, level 4
  3.51%          kernel
  0.65%       libjvm.so
  0.38%    libc-2.28.so
  0.15%  hsdis-amd64.so
  0.06%     interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsKtBenchmark.defaultArguments
# Parameters: (delta = 1, factor = 2, value = 8)

# Run progress: 50.00% complete, ETA 00:01:53
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.512 ns/op
# Warmup Iteration   2: 3.456 ns/op
# Warmup Iteration   3: 3.809 ns/op
# Warmup Iteration   4: 3.428 ns/op
# Warmup Iteration   5: 3.430 ns/op
Iteration   1: 3.401 ns/op
Iteration   2: 3.397 ns/op
Iteration   3: 3.412 ns/op
Iteration   4: 3.405 ns/op
Iteration   5: 3.446 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 55.56% complete, ETA 00:01:41
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.772 ns/op
# Warmup Iteration   2: 3.762 ns/op
# Warmup Iteration   3: 3.324 ns/op
# Warmup Iteration   4: 3.292 ns/op
# Warmup Iteration   5: 3.270 ns/op
Iteration   1: 3.342 ns/op
Iteration   2: 3.282 ns/op
Iteration   3: 3.403 ns/op
Iteration   4: 3.379 ns/op
Iteration   5: 3.321 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 61.11% complete, ETA 00:01:28
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.423 ns/op
# Warmup Iteration   2: 3.689 ns/op
# Warmup Iteration   3: 4.890 ns/op
# Warmup Iteration   4: 3.524 ns/op
# Warmup Iteration   5: 3.371 ns/op
Iteration   1: 3.377 ns/op
Iteration   2: 3.381 ns/op
Iteration   3: 4.229 ns/op
Iteration   4: 3.411 ns/op
Iteration   5: 3.409 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsKtBenchmark.defaultArguments":
  3.440 ±(99.9%) 0.238 ns/op [Average]
  (min, avg, max) = (3.282, 3.440, 4.229), stdev = 0.222
  CI (99.9%): [3.202, 3.677] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsKtBenchmark.defaultArguments:·asm":
PrintAssembly processed: 136275 total address lines.
Perf output processed (skipped 7.053 seconds):
 Column 1: cycles (5206 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 483 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f40200e6fa0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f40200e6fa4: movabs r12,0x800000000
            0x00007f40200e6fae: add    r10,r12
            0x00007f40200e6fb1: xor    r12,r12
            0x00007f40200e6fb4: cmp    rax,r10
            0x00007f40200e6fb7: jne    0x00007f4018617c80  ;   {runtime_call ic_miss_stub}
            0x00007f40200e6fbd: data16 xchg ax,ax
          [Verified Entry Point]
  4.92%     0x00007f40200e6fc0: mov    DWORD PTR [rsp-0x14000],eax
  3.07%     0x00007f40200e6fc7: push   rbp
  4.32%     0x00007f40200e6fc8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  2.84%     0x00007f40200e6fcc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.25%     0x00007f40200e6fd3: mov    r8d,edx
  4.36%     0x00007f40200e6fd6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.75%     0x00007f40200e6fdd: mov    r9d,edx
  2.38%     0x00007f40200e6fe0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.98%     0x00007f40200e6fe3: cmp    r9d,r8d
         ╭  0x00007f40200e6fe6: je     0x00007f40200e6ff8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.23%  │  0x00007f40200e6fe8: add    rsp,0x20
  0.86%  │  0x00007f40200e6fec: pop    rbp
  6.05%  │  0x00007f40200e6fed: mov    r10,QWORD PTR [r15+0x108]
  0.94%  │  0x00007f40200e6ff4: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.13%  │  0x00007f40200e6ff7: ret    
         ↘  0x00007f40200e6ff8: mov    rbp,rsi
            0x00007f40200e6ffb: mov    DWORD PTR [rsp],edx
            0x00007f40200e6ffe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f40200e7003: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f40200e7008: mov    esi,0xffffff4d
            0x00007f40200e700d: xchg   ax,ax
            0x00007f40200e700f: call   0x00007f4018619900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 40.09%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 514 (51 bytes) 

             0x00007f40200ea140: mov    r10,QWORD PTR [rsp+0x38]
             0x00007f40200ea145: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f40200ea212
             0x00007f40200ea14d: mov    ebp,0x1
             0x00007f40200ea152: test   r11d,r11d
         ╭   0x00007f40200ea155: jne    0x00007f40200ea198  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
         │   0x00007f40200ea157: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
  2.82%  │↗  0x00007f40200ea160: mov    rsi,QWORD PTR [rsp+0x40]
  1.56%  ││  0x00007f40200ea165: xchg   ax,ax
  2.80%  ││  0x00007f40200ea167: call   0x00007f4018617f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual defaultArguments {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  1.19%  ││  0x00007f40200ea16c: mov    rsi,QWORD PTR [rsp]
  5.24%  ││  0x00007f40200ea170: mov    edx,eax
  2.50%  ││  0x00007f40200ea172: nop
  0.81%  ││  0x00007f40200ea173: call   0x00007f4018617f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  2.61%  ││  0x00007f40200ea178: mov    r10,QWORD PTR [rsp+0x38]
  3.15%  ││  0x00007f40200ea17d: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  3.28%  ││  0x00007f40200ea185: mov    r10,QWORD PTR [r15+0x108]
  1.38%  ││  0x00007f40200ea18c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  3.02%  ││  0x00007f40200ea190: test   DWORD PTR [r10],eax  ;   {poll}
  0.46%  ││  0x00007f40200ea193: test   r11d,r11d
         │╰  0x00007f40200ea196: je     0x00007f40200ea160  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f40200ea198: movabs r10,0x7f40351a3a00
             0x00007f40200ea1a2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@37 (line 193)
             0x00007f40200ea1a5: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f40200ea1aa: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@52 (line 195)
             0x00007f40200ea1ae: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 30.83%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments, version 481 (30 bytes) 

            # {method} {0x00007f401510d768} &apos;defaultArguments&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsKtBenchmark&apos;
            #           [sp+0x20]  (sp of caller)
            0x00007f40200e68a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f40200e68a4: movabs r12,0x800000000
            0x00007f40200e68ae: add    r10,r12
            0x00007f40200e68b1: xor    r12,r12
            0x00007f40200e68b4: cmp    rax,r10
            0x00007f40200e68b7: jne    0x00007f4018617c80  ;   {runtime_call ic_miss_stub}
            0x00007f40200e68bd: data16 xchg ax,ax
          [Verified Entry Point]
  3.82%     0x00007f40200e68c0: sub    rsp,0x18
  4.46%     0x00007f40200e68c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments@-1 (line 50)
  0.67%     0x00007f40200e68cc: mov    eax,DWORD PTR [rsi+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments@2 (line 50)
  3.00%     0x00007f40200e68cf: add    rsp,0x10
  1.77%     0x00007f40200e68d3: pop    rbp
  7.95%     0x00007f40200e68d4: mov    r10,QWORD PTR [r15+0x108]
  0.71%     0x00007f40200e68db: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.96%     0x00007f40200e68de: ret    
            0x00007f40200e68df: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f40200e68e0: jmp    0x00007f401864e680  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f40200e68e5: call   0x00007f40200e68ea
         ↘  0x00007f40200e68ea: sub    QWORD PTR [rsp],0x5
            0x00007f40200e68ef: jmp    0x00007f4018619520  ;   {runtime_call DeoptimizationBlob}
            0x00007f40200e68f4: hlt    
            0x00007f40200e68f5: hlt    
....................................................................................................
 24.34%  <total for region 3>

....[Hottest Regions]...............................................................................
 40.09%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 483 (55 bytes) 
 30.83%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 514 (51 bytes) 
 24.34%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments, version 481 (30 bytes) 
  1.58%              kernel  [unknown] (6 bytes) 
  0.19%              kernel  [unknown] (39 bytes) 
  0.19%              kernel  [unknown] (0 bytes) 
  0.13%              kernel  [unknown] (0 bytes) 
  0.10%              kernel  [unknown] (39 bytes) 
  0.08%              kernel  [unknown] (6 bytes) 
  0.08%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (18 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (11 bytes) 
  0.06%  libpthread-2.28.so  pthread_cond_wait@@GLIBC_2.3.2 (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (7 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (19 bytes) 
  1.92%  <...other 97 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 40.09%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 483 
 30.83%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 514 
 24.34%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments, version 481 
  3.42%              kernel  [unknown] 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%  libpthread-2.28.so  pthread_cond_wait@@GLIBC_2.3.2 
  0.06%  libpthread-2.28.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.04%        libc-2.28.so  _IO_setb 
  0.04%        libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%           libjvm.so  _ZN7Monitor4waitEblb 
  0.02%           libjvm.so  _ZN2os13javaTimeNanosEv 
  0.02%           libjvm.so  jio_print 
  0.02%         interpreter  invoke return entry points  
  0.02%      hsdis-amd64.so  oappend 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%           libjvm.so  _ZN12GraphBuilder8logic_opEP9ValueTypeN9Bytecodes4CodeE 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%           libjvm.so  _ZN5ciEnv24get_method_by_index_implERK18constantPoolHandleiN9Bytecodes4CodeEP15ciInstanceKlass 
  0.75%  <...other 39 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.26%         c2, level 4
  3.42%              kernel
  0.61%           libjvm.so
  0.31%        libc-2.28.so
  0.15%  libpthread-2.28.so
  0.12%      hsdis-amd64.so
  0.08%         interpreter
  0.02%        runtime stub
  0.02%          ld-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 138869 total address lines.
Perf output processed (skipped 7.186 seconds):
 Column 1: cycles (5220 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 485 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f85287382a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f85287382a4: movabs r12,0x800000000
            0x00007f85287382ae: add    r10,r12
            0x00007f85287382b1: xor    r12,r12
            0x00007f85287382b4: cmp    rax,r10
            0x00007f85287382b7: jne    0x00007f8520c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f85287382bd: data16 xchg ax,ax
          [Verified Entry Point]
  4.48%     0x00007f85287382c0: mov    DWORD PTR [rsp-0x14000],eax
  3.64%     0x00007f85287382c7: push   rbp
  4.44%     0x00007f85287382c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  2.61%     0x00007f85287382cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.23%     0x00007f85287382d3: mov    r8d,edx
  3.98%     0x00007f85287382d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.88%     0x00007f85287382dd: mov    r9d,edx
  1.99%     0x00007f85287382e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.36%     0x00007f85287382e3: cmp    r9d,r8d
         ╭  0x00007f85287382e6: je     0x00007f85287382f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.29%  │  0x00007f85287382e8: add    rsp,0x20
  0.79%  │  0x00007f85287382ec: pop    rbp
  6.21%  │  0x00007f85287382ed: mov    r10,QWORD PTR [r15+0x108]
  1.28%  │  0x00007f85287382f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.22%  │  0x00007f85287382f7: ret    
         ↘  0x00007f85287382f8: mov    rbp,rsi
            0x00007f85287382fb: mov    DWORD PTR [rsp],edx
            0x00007f85287382fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f8528738303: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f8528738308: mov    esi,0xffffff4d
            0x00007f852873830d: xchg   ax,ax
            0x00007f852873830f: call   0x00007f8520c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 40.40%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 508 (51 bytes) 

             0x00007f852873a7c0: mov    r10,QWORD PTR [rsp+0x38]
             0x00007f852873a7c5: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f852873a892
             0x00007f852873a7cd: mov    ebp,0x1
             0x00007f852873a7d2: test   r11d,r11d
         ╭   0x00007f852873a7d5: jne    0x00007f852873a818  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
         │   0x00007f852873a7d7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
  2.84%  │↗  0x00007f852873a7e0: mov    rsi,QWORD PTR [rsp+0x40]
  1.65%  ││  0x00007f852873a7e5: xchg   ax,ax
  2.72%  ││  0x00007f852873a7e7: call   0x00007f8520c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual defaultArguments {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  1.03%  ││  0x00007f852873a7ec: mov    rsi,QWORD PTR [rsp]
  5.27%  ││  0x00007f852873a7f0: mov    edx,eax
  1.86%  ││  0x00007f852873a7f2: nop
  1.07%  ││  0x00007f852873a7f3: call   0x00007f8520c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  2.49%  ││  0x00007f852873a7f8: mov    r10,QWORD PTR [rsp+0x38]
  3.64%  ││  0x00007f852873a7fd: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  2.87%  ││  0x00007f852873a805: mov    r10,QWORD PTR [r15+0x108]
  1.61%  ││  0x00007f852873a80c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  2.82%  ││  0x00007f852873a810: test   DWORD PTR [r10],eax  ;   {poll}
  0.84%  ││  0x00007f852873a813: test   r11d,r11d
         │╰  0x00007f852873a816: je     0x00007f852873a7e0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f852873a818: movabs r10,0x7f853f027a00
             0x00007f852873a822: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@37 (line 193)
             0x00007f852873a825: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f852873a82a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@52 (line 195)
             0x00007f852873a82e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 30.71%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments, version 483 (30 bytes) 

            # {method} {0x00007f851158d768} &apos;defaultArguments&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsKtBenchmark&apos;
            #           [sp+0x20]  (sp of caller)
            0x00007f8528738020: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f8528738024: movabs r12,0x800000000
            0x00007f852873802e: add    r10,r12
            0x00007f8528738031: xor    r12,r12
            0x00007f8528738034: cmp    rax,r10
            0x00007f8528738037: jne    0x00007f8520c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f852873803d: data16 xchg ax,ax
          [Verified Entry Point]
  3.66%     0x00007f8528738040: sub    rsp,0x18
  4.60%     0x00007f8528738047: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments@-1 (line 50)
  1.00%     0x00007f852873804c: mov    eax,DWORD PTR [rsi+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments@2 (line 50)
  3.08%     0x00007f852873804f: add    rsp,0x10
  1.48%     0x00007f8528738053: pop    rbp
  7.07%     0x00007f8528738054: mov    r10,QWORD PTR [r15+0x108]
  0.79%     0x00007f852873805b: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.39%     0x00007f852873805e: ret    
            0x00007f852873805f: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f8528738060: jmp    0x00007f8520d2c400  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f8528738065: call   0x00007f852873806a
         ↘  0x00007f852873806a: sub    QWORD PTR [rsp],0x5
            0x00007f852873806f: jmp    0x00007f8520c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007f8528738074: hlt    
            0x00007f8528738075: hlt    
....................................................................................................
 24.06%  <total for region 3>

....[Hottest Regions]...............................................................................
 40.40%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 485 (55 bytes) 
 30.71%     c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 508 (51 bytes) 
 24.06%     c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments, version 483 (30 bytes) 
  2.32%          kernel  [unknown] (0 bytes) 
  0.25%          kernel  [unknown] (39 bytes) 
  0.15%          kernel  [unknown] (1 bytes) 
  0.10%          kernel  [unknown] (0 bytes) 
  0.08%          kernel  [unknown] (19 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.06%          kernel  [unknown] (2 bytes) 
  0.06%          kernel  [unknown] (27 bytes) 
  0.06%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (29 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (6 bytes) 
  0.04%          kernel  [unknown] (23 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (31 bytes) 
  0.04%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (0 bytes) 
  0.04%    libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  1.40%  <...other 73 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 40.40%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 485 
 30.71%     c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 508 
 24.06%     c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments, version 483 
  3.85%          kernel  [unknown] 
  0.06%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%  hsdis-amd64.so  putop 
  0.06%  hsdis-amd64.so  print_insn 
  0.06%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%    libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.04%       libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.04%    libc-2.28.so  _IO_old_init 
  0.04%    libc-2.28.so  vfprintf 
  0.04%    libc-2.28.so  _IO_default_xsputn 
  0.04%       libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%       libjvm.so  _ZN16LinearScanWalker16activate_currentEv 
  0.02%     interpreter  getstatic  178 getstatic  
  0.02%       libjvm.so  _ZN14AccessInternal19PostRuntimeDispatchIN12G1BarrierSet13AccessBarrierILm802934ES1_EELNS_11BarrierTypeE1ELm802934EE18oop_access_barrierEP7oopDesclS7_ 
  0.02%       libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%       libjvm.so  _ZNK9ScopeDesc6senderEv 
  0.02%    libc-2.28.so  _IO_fflush 
  0.38%  <...other 20 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.17%     c2, level 4
  3.85%          kernel
  0.52%       libjvm.so
  0.25%    libc-2.28.so
  0.13%  hsdis-amd64.so
  0.06%     interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 140838 total address lines.
Perf output processed (skipped 7.253 seconds):
 Column 1: cycles (5242 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 497 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f4600736a20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f4600736a24: movabs r12,0x800000000
            0x00007f4600736a2e: add    r10,r12
            0x00007f4600736a31: xor    r12,r12
            0x00007f4600736a34: cmp    rax,r10
            0x00007f4600736a37: jne    0x00007f45f8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f4600736a3d: data16 xchg ax,ax
          [Verified Entry Point]
  4.88%     0x00007f4600736a40: mov    DWORD PTR [rsp-0x14000],eax
  3.95%     0x00007f4600736a47: push   rbp
  3.59%     0x00007f4600736a48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  2.67%     0x00007f4600736a4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.85%     0x00007f4600736a53: mov    r8d,edx
  3.53%     0x00007f4600736a56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.14%     0x00007f4600736a5d: mov    r9d,edx
  2.16%     0x00007f4600736a60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.89%     0x00007f4600736a63: cmp    r9d,r8d
         ╭  0x00007f4600736a66: je     0x00007f4600736a78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.96%  │  0x00007f4600736a68: add    rsp,0x20
  0.38%  │  0x00007f4600736a6c: pop    rbp
  4.16%  │  0x00007f4600736a6d: mov    r10,QWORD PTR [r15+0x108]
  0.55%  │  0x00007f4600736a74: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.99%  │  0x00007f4600736a77: ret    
         ↘  0x00007f4600736a78: mov    rbp,rsi
            0x00007f4600736a7b: mov    DWORD PTR [rsp],edx
            0x00007f4600736a7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f4600736a83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f4600736a88: mov    esi,0xffffff4d
            0x00007f4600736a8d: xchg   ax,ax
            0x00007f4600736a8f: call   0x00007f45f8c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 40.69%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 523 (51 bytes) 

             0x00007f4600739a40: mov    r10,QWORD PTR [rsp+0x38]
             0x00007f4600739a45: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f4600739b12
             0x00007f4600739a4d: mov    ebp,0x1
             0x00007f4600739a52: test   r11d,r11d
         ╭   0x00007f4600739a55: jne    0x00007f4600739a98  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
         │   0x00007f4600739a57: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
  3.61%  │↗  0x00007f4600739a60: mov    rsi,QWORD PTR [rsp+0x40]
  1.62%  ││  0x00007f4600739a65: xchg   ax,ax
  2.46%  ││  0x00007f4600739a67: call   0x00007f45f8c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual defaultArguments {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  1.22%  ││  0x00007f4600739a6c: mov    rsi,QWORD PTR [rsp]
  4.06%  ││  0x00007f4600739a70: mov    edx,eax
  2.40%  ││  0x00007f4600739a72: nop
  1.09%  ││  0x00007f4600739a73: call   0x00007f45f8c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  3.38%  ││  0x00007f4600739a78: mov    r10,QWORD PTR [rsp+0x38]
  3.76%  ││  0x00007f4600739a7d: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  3.01%  ││  0x00007f4600739a85: mov    r10,QWORD PTR [r15+0x108]
  1.62%  ││  0x00007f4600739a8c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@33 (line 192)
  2.23%  ││  0x00007f4600739a90: test   DWORD PTR [r10],eax  ;   {poll}
  0.67%  ││  0x00007f4600739a93: test   r11d,r11d
         │╰  0x00007f4600739a96: je     0x00007f4600739a60  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f4600739a98: movabs r10,0x7f4616769a00
             0x00007f4600739aa2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@37 (line 193)
             0x00007f4600739aa5: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f4600739aaa: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@52 (line 195)
             0x00007f4600739aae: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 31.13%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments, version 496 (30 bytes) 

            # {method} {0x00007f45e8ced768} &apos;defaultArguments&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsKtBenchmark&apos;
            #           [sp+0x20]  (sp of caller)
            0x00007f46007367a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f46007367a4: movabs r12,0x800000000
            0x00007f46007367ae: add    r10,r12
            0x00007f46007367b1: xor    r12,r12
            0x00007f46007367b4: cmp    rax,r10
            0x00007f46007367b7: jne    0x00007f45f8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f46007367bd: data16 xchg ax,ax
          [Verified Entry Point]
  3.45%     0x00007f46007367c0: sub    rsp,0x18
  4.03%     0x00007f46007367c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                          ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments@-1 (line 50)
  0.50%     0x00007f46007367cc: mov    eax,DWORD PTR [rsi+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments@2 (line 50)
  2.96%     0x00007f46007367cf: add    rsp,0x10
  1.43%     0x00007f46007367d3: pop    rbp
  6.83%     0x00007f46007367d4: mov    r10,QWORD PTR [r15+0x108]
  0.55%     0x00007f46007367db: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.13%     0x00007f46007367de: ret    
            0x00007f46007367df: hlt    
          [Exception Handler]
          [Stub Code]
            0x00007f46007367e0: jmp    0x00007f45f8d2c400  ;   {no_reloc}
          [Deopt Handler Code]
         ╭  0x00007f46007367e5: call   0x00007f46007367ea
         ↘  0x00007f46007367ea: sub    QWORD PTR [rsp],0x5
            0x00007f46007367ef: jmp    0x00007f45f8c6a520  ;   {runtime_call DeoptimizationBlob}
            0x00007f46007367f4: hlt    
            0x00007f46007367f5: hlt    
....................................................................................................
 22.87%  <total for region 3>

....[Hottest Regions]...............................................................................
 40.69%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 497 (55 bytes) 
 31.13%     c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 523 (51 bytes) 
 22.87%     c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments, version 496 (30 bytes) 
  2.71%          kernel  [unknown] (6 bytes) 
  0.19%          kernel  [unknown] (3 bytes) 
  0.17%          kernel  [unknown] (39 bytes) 
  0.13%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (44 bytes) 
  0.06%    libc-2.28.so  __strlen_avx2 (21 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (5 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (17 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (17 bytes) 
  0.04%       libjvm.so  SpinPause (0 bytes) 
  0.04%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (9 bytes) 
  0.04%    libc-2.28.so  __strchr_avx2 (0 bytes) 
  0.04%    libc-2.28.so  __strchrnul_avx2 (8 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  1.58%  <...other 83 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 40.69%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 497 
 31.13%     c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_defaultArguments_jmhTest::defaultArguments_avgt_jmhStub, version 523 
 22.87%     c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::defaultArguments, version 496 
  4.39%          kernel  [unknown] 
  0.13%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%    libc-2.28.so  __strchr_avx2 
  0.06%    libc-2.28.so  __strlen_avx2 
  0.04%    libc-2.28.so  __strchrnul_avx2 
  0.04%       libjvm.so  SpinPause 
  0.04%       libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%     c1, level 3  java.lang.String::&lt;init&gt;, version 435 
  0.02%       libjvm.so  _ZN22ComputeLinearScanOrder13compute_orderEP10BlockBegin 
  0.02%     interpreter  fast_iload  224 fast_iload  
  0.02%       libjvm.so  _ZNK8Constant8can_trapEv 
  0.02%       libjvm.so  _ZN19LIR_InsertionBuffer6appendEiP6LIR_Op 
  0.02%       libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%       libjvm.so  _ZN12outputStream6vprintEPKcP13__va_list_tag 
  0.02%       libjvm.so  _ZNK6Symbol14print_value_onEP12outputStream 
  0.02%  hsdis-amd64.so  ckprefix 
  0.29%  <...other 15 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.70%     c2, level 4
  4.39%          kernel
  0.57%       libjvm.so
  0.23%    libc-2.28.so
  0.06%     interpreter
  0.02%  hsdis-amd64.so
  0.02%     c1, level 3
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsKtBenchmark.oneArgument
# Parameters: (delta = 1, factor = 2, value = 8)

# Run progress: 66.67% complete, ETA 00:01:16
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5.293 ns/op
# Warmup Iteration   2: 4.261 ns/op
# Warmup Iteration   3: 3.777 ns/op
# Warmup Iteration   4: 3.825 ns/op
# Warmup Iteration   5: 3.538 ns/op
Iteration   1: 3.648 ns/op
Iteration   2: 3.801 ns/op
Iteration   3: 4.101 ns/op
Iteration   4: 3.890 ns/op
Iteration   5: 4.104 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 72.22% complete, ETA 00:01:03
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5.029 ns/op
# Warmup Iteration   2: 4.711 ns/op
# Warmup Iteration   3: 3.722 ns/op
# Warmup Iteration   4: 3.723 ns/op
# Warmup Iteration   5: 3.676 ns/op
Iteration   1: 3.726 ns/op
Iteration   2: 3.822 ns/op
Iteration   3: 3.588 ns/op
Iteration   4: 3.603 ns/op
Iteration   5: 3.802 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 77.78% complete, ETA 00:00:50
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.620 ns/op
# Warmup Iteration   2: 4.341 ns/op
# Warmup Iteration   3: 4.887 ns/op
# Warmup Iteration   4: 4.208 ns/op
# Warmup Iteration   5: 4.125 ns/op
Iteration   1: 4.134 ns/op
Iteration   2: 4.051 ns/op
Iteration   3: 4.033 ns/op
Iteration   4: 3.609 ns/op
Iteration   5: 3.638 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsKtBenchmark.oneArgument":
  3.837 ±(99.9%) 0.217 ns/op [Average]
  (min, avg, max) = (3.588, 3.837, 4.134), stdev = 0.203
  CI (99.9%): [3.620, 4.053] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsKtBenchmark.oneArgument:·asm":
PrintAssembly processed: 141714 total address lines.
Perf output processed (skipped 7.403 seconds):
 Column 1: cycles (5267 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 494 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f1c2c738620: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f1c2c738624: movabs r12,0x800000000
            0x00007f1c2c73862e: add    r10,r12
            0x00007f1c2c738631: xor    r12,r12
            0x00007f1c2c738634: cmp    rax,r10
            0x00007f1c2c738637: jne    0x00007f1c24c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f1c2c73863d: data16 xchg ax,ax
          [Verified Entry Point]
  3.93%     0x00007f1c2c738640: mov    DWORD PTR [rsp-0x14000],eax
  3.85%     0x00007f1c2c738647: push   rbp
  3.02%     0x00007f1c2c738648: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.08%     0x00007f1c2c73864c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.29%     0x00007f1c2c738653: mov    r8d,edx
  3.28%     0x00007f1c2c738656: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.50%     0x00007f1c2c73865d: mov    r9d,edx
  1.59%     0x00007f1c2c738660: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.16%     0x00007f1c2c738663: cmp    r9d,r8d
         ╭  0x00007f1c2c738666: je     0x00007f1c2c738678  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.27%  │  0x00007f1c2c738668: add    rsp,0x20
  1.01%  │  0x00007f1c2c73866c: pop    rbp
  5.20%  │  0x00007f1c2c73866d: mov    r10,QWORD PTR [r15+0x108]
  1.08%  │  0x00007f1c2c738674: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.90%  │  0x00007f1c2c738677: ret    
         ↘  0x00007f1c2c738678: mov    rbp,rsi
            0x00007f1c2c73867b: mov    DWORD PTR [rsp],edx
            0x00007f1c2c73867e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f1c2c738683: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f1c2c738688: mov    esi,0xffffff4d
            0x00007f1c2c73868d: xchg   ax,ax
            0x00007f1c2c73868f: call   0x00007f1c24c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 36.17%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 527 (51 bytes) 

             0x00007f1c2c73c4c0: mov    r10,QWORD PTR [rsp+0x38]
             0x00007f1c2c73c4c5: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f1c2c73c592
             0x00007f1c2c73c4cd: mov    ebp,0x1
             0x00007f1c2c73c4d2: test   r11d,r11d
         ╭   0x00007f1c2c73c4d5: jne    0x00007f1c2c73c518  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
         │   0x00007f1c2c73c4d7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@36 (line 193)
  2.34%  │↗  0x00007f1c2c73c4e0: mov    rsi,QWORD PTR [rsp+0x40]
  2.35%  ││  0x00007f1c2c73c4e5: xchg   ax,ax
  2.28%  ││  0x00007f1c2c73c4e7: call   0x00007f1c24c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual oneArgument {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  0.91%  ││  0x00007f1c2c73c4ec: mov    rsi,QWORD PTR [rsp]
  4.54%  ││  0x00007f1c2c73c4f0: mov    edx,eax
  2.01%  ││  0x00007f1c2c73c4f2: nop
  0.85%  ││  0x00007f1c2c73c4f3: call   0x00007f1c24c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  5.30%  ││  0x00007f1c2c73c4f8: mov    r10,QWORD PTR [rsp+0x38]
  2.89%  ││  0x00007f1c2c73c4fd: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
  2.41%  ││  0x00007f1c2c73c505: mov    r10,QWORD PTR [r15+0x108]
  2.24%  ││  0x00007f1c2c73c50c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
  2.05%  ││  0x00007f1c2c73c510: test   DWORD PTR [r10],eax  ;   {poll}
  0.74%  ││  0x00007f1c2c73c513: test   r11d,r11d
         │╰  0x00007f1c2c73c516: je     0x00007f1c2c73c4e0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@36 (line 193)
         ↘   0x00007f1c2c73c518: movabs r10,0x7f1c44b29a00
             0x00007f1c2c73c522: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@37 (line 193)
             0x00007f1c2c73c525: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f1c2c73c52a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@52 (line 195)
             0x00007f1c2c73c52e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@40 (line 193)
....................................................................................................
 30.91%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument, version 492 (34 bytes) 

           # {method} {0x00007f1c24afd840} &apos;oneArgument&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsKtBenchmark&apos;
           #           [sp+0x20]  (sp of caller)
           0x00007f1c2c737ea0: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007f1c2c737ea4: movabs r12,0x800000000
           0x00007f1c2c737eae: add    r10,r12
           0x00007f1c2c737eb1: xor    r12,r12
           0x00007f1c2c737eb4: cmp    rax,r10
           0x00007f1c2c737eb7: jne    0x00007f1c24c68c80  ;   {runtime_call ic_miss_stub}
           0x00007f1c2c737ebd: data16 xchg ax,ax
         [Verified Entry Point]
  2.96%    0x00007f1c2c737ec0: sub    rsp,0x18
  4.21%    0x00007f1c2c737ec7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument@-1 (line 56)
  0.87%    0x00007f1c2c737ecc: mov    eax,DWORD PTR [rsi+0x10]
  2.58%    0x00007f1c2c737ecf: imul   eax,DWORD PTR [rsi+0xc]  ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@2 (line 66)
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression$default@37 (line 65)
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument@12 (line 56)
  3.65%    0x00007f1c2c737ed3: add    rsp,0x10
  1.63%    0x00007f1c2c737ed7: pop    rbp
  6.91%    0x00007f1c2c737ed8: mov    r10,QWORD PTR [r15+0x108]
  1.22%    0x00007f1c2c737edf: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.47%    0x00007f1c2c737ee2: ret    
           0x00007f1c2c737ee3: hlt    
           0x00007f1c2c737ee4: hlt    
           0x00007f1c2c737ee5: hlt    
           0x00007f1c2c737ee6: hlt    
           0x00007f1c2c737ee7: hlt    
           0x00007f1c2c737ee8: hlt    
           0x00007f1c2c737ee9: hlt    
           0x00007f1c2c737eea: hlt    
           0x00007f1c2c737eeb: hlt    
           0x00007f1c2c737eec: hlt    
....................................................................................................
 26.50%  <total for region 3>

....[Hottest Regions]...............................................................................
 36.17%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 494 (55 bytes) 
 30.91%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 527 (51 bytes) 
 26.50%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument, version 492 (34 bytes) 
  2.79%              kernel  [unknown] (6 bytes) 
  0.27%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (41 bytes) 
  0.23%              kernel  [unknown] (39 bytes) 
  0.17%              kernel  [unknown] (6 bytes) 
  0.15%              kernel  [unknown] (43 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (4 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (23 bytes) 
  0.06%              kernel  [unknown] (17 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (7 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (3 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  2.15%  <...other 103 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 36.17%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 494 
 30.91%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 527 
 26.50%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument, version 492 
  5.24%              kernel  [unknown] 
  0.27%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%        libc-2.28.so  __strlen_avx2 
  0.06%        libc-2.28.so  vfprintf 
  0.06%        libc-2.28.so  __strcpy_sse2_unaligned 
  0.04%  libpthread-2.28.so  do_futex_wait.constprop.1 
  0.04%        libc-2.28.so  _IO_fwrite 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%           libjvm.so  _ZN12GraphBuilder15append_with_bciEP11Instructioni 
  0.02%         c2, level 4  java.lang.StringLatin1::indexOf, version 330 
  0.02%           libjvm.so  _ZN14MethodLiveness15get_liveness_atEi 
  0.02%      hsdis-amd64.so  putop 
  0.02%           libjvm.so  _ZN7ciField9will_linkEP8ciMethodN9Bytecodes4CodeE 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%           libjvm.so  _ZNK6Symbol14print_value_onEP12outputStream 
  0.38%  <...other 20 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 93.62%         c2, level 4
  5.24%              kernel
  0.66%           libjvm.so
  0.30%        libc-2.28.so
  0.06%      hsdis-amd64.so
  0.04%  libpthread-2.28.so
  0.02%        runtime stub
  0.02%      perf-13410.map
  0.02%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 140902 total address lines.
Perf output processed (skipped 7.589 seconds):
 Column 1: cycles (5195 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 496 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f6c40737820: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f6c40737824: movabs r12,0x800000000
            0x00007f6c4073782e: add    r10,r12
            0x00007f6c40737831: xor    r12,r12
            0x00007f6c40737834: cmp    rax,r10
            0x00007f6c40737837: jne    0x00007f6c38c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f6c4073783d: data16 xchg ax,ax
          [Verified Entry Point]
  4.93%     0x00007f6c40737840: mov    DWORD PTR [rsp-0x14000],eax
  2.81%     0x00007f6c40737847: push   rbp
  3.16%     0x00007f6c40737848: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.64%     0x00007f6c4073784c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.98%     0x00007f6c40737853: mov    r8d,edx
  3.62%     0x00007f6c40737856: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.69%     0x00007f6c4073785d: mov    r9d,edx
  1.48%     0x00007f6c40737860: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.44%     0x00007f6c40737863: cmp    r9d,r8d
  0.02%  ╭  0x00007f6c40737866: je     0x00007f6c40737878  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.27%  │  0x00007f6c40737868: add    rsp,0x20
  1.87%  │  0x00007f6c4073786c: pop    rbp
  5.20%  │  0x00007f6c4073786d: mov    r10,QWORD PTR [r15+0x108]
  0.81%  │  0x00007f6c40737874: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.68%  │  0x00007f6c40737877: ret    
         ↘  0x00007f6c40737878: mov    rbp,rsi
            0x00007f6c4073787b: mov    DWORD PTR [rsp],edx
            0x00007f6c4073787e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f6c40737883: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f6c40737888: mov    esi,0xffffff4d
            0x00007f6c4073788d: xchg   ax,ax
            0x00007f6c4073788f: call   0x00007f6c38c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 37.59%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 520 (51 bytes) 

             0x00007f6c407393c0: mov    r10,QWORD PTR [rsp+0x38]
             0x00007f6c407393c5: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f6c40739492
             0x00007f6c407393cd: mov    ebp,0x1
             0x00007f6c407393d2: test   r11d,r11d
         ╭   0x00007f6c407393d5: jne    0x00007f6c40739418  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
         │   0x00007f6c407393d7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@36 (line 193)
  2.95%  │↗  0x00007f6c407393e0: mov    rsi,QWORD PTR [rsp+0x40]
  2.62%  ││  0x00007f6c407393e5: xchg   ax,ax
  1.89%  ││  0x00007f6c407393e7: call   0x00007f6c38c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual oneArgument {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  1.25%  ││  0x00007f6c407393ec: mov    rsi,QWORD PTR [rsp]
  4.79%  ││  0x00007f6c407393f0: mov    edx,eax
  1.83%  ││  0x00007f6c407393f2: nop
  0.96%  ││  0x00007f6c407393f3: call   0x00007f6c38c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  3.64%  ││  0x00007f6c407393f8: mov    r10,QWORD PTR [rsp+0x38]
  3.00%  ││  0x00007f6c407393fd: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
  2.54%  ││  0x00007f6c40739405: mov    r10,QWORD PTR [r15+0x108]
  2.06%  ││  0x00007f6c4073940c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
  1.94%  ││  0x00007f6c40739410: test   DWORD PTR [r10],eax  ;   {poll}
  0.94%  ││  0x00007f6c40739413: test   r11d,r11d
         │╰  0x00007f6c40739416: je     0x00007f6c407393e0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@36 (line 193)
         ↘   0x00007f6c40739418: movabs r10,0x7f6c56bd5a00
             0x00007f6c40739422: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@37 (line 193)
             0x00007f6c40739425: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f6c4073942a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@52 (line 195)
             0x00007f6c4073942e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@40 (line 193)
....................................................................................................
 30.41%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument, version 495 (34 bytes) 

           # {method} {0x00007f6c290ed840} &apos;oneArgument&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsKtBenchmark&apos;
           #           [sp+0x20]  (sp of caller)
           0x00007f6c40737520: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007f6c40737524: movabs r12,0x800000000
           0x00007f6c4073752e: add    r10,r12
           0x00007f6c40737531: xor    r12,r12
           0x00007f6c40737534: cmp    rax,r10
           0x00007f6c40737537: jne    0x00007f6c38c68c80  ;   {runtime_call ic_miss_stub}
           0x00007f6c4073753d: data16 xchg ax,ax
         [Verified Entry Point]
  3.46%    0x00007f6c40737540: sub    rsp,0x18
  4.49%    0x00007f6c40737547: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument@-1 (line 56)
  0.77%    0x00007f6c4073754c: mov    eax,DWORD PTR [rsi+0x10]
  2.87%    0x00007f6c4073754f: imul   eax,DWORD PTR [rsi+0xc]  ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@2 (line 66)
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression$default@37 (line 65)
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument@12 (line 56)
  3.06%    0x00007f6c40737553: add    rsp,0x10
  1.66%    0x00007f6c40737557: pop    rbp
  7.72%    0x00007f6c40737558: mov    r10,QWORD PTR [r15+0x108]
  1.48%    0x00007f6c4073755f: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.91%    0x00007f6c40737562: ret    
           0x00007f6c40737563: hlt    
           0x00007f6c40737564: hlt    
           0x00007f6c40737565: hlt    
           0x00007f6c40737566: hlt    
           0x00007f6c40737567: hlt    
           0x00007f6c40737568: hlt    
           0x00007f6c40737569: hlt    
           0x00007f6c4073756a: hlt    
           0x00007f6c4073756b: hlt    
           0x00007f6c4073756c: hlt    
....................................................................................................
 27.41%  <total for region 3>

....[Hottest Regions]...............................................................................
 37.59%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 496 (55 bytes) 
 30.41%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 520 (51 bytes) 
 27.41%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument, version 495 (34 bytes) 
  1.19%              kernel  [unknown] (6 bytes) 
  0.25%              kernel  [unknown] (1 bytes) 
  0.15%              kernel  [unknown] (39 bytes) 
  0.13%              kernel  [unknown] (27 bytes) 
  0.13%              kernel  [unknown] (11 bytes) 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (40 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (30 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (28 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (2 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  0.04%              kernel  [unknown] (30 bytes) 
  0.04%      hsdis-amd64.so  print_insn (18 bytes) 
  2.18%  <...other 110 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 37.59%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 496 
 30.41%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 520 
 27.41%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument, version 495 
  3.31%              kernel  [unknown] 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%      hsdis-amd64.so  print_insn 
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%        libc-2.28.so  _IO_fwrite 
  0.04%        libc-2.28.so  vfprintf 
  0.04%          ld-2.28.so  __tls_get_addr 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%        libc-2.28.so  _IO_fflush 
  0.04%        libc-2.28.so  __strlen_avx2 
  0.02%           libjvm.so  jio_print 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%        libc-2.28.so  __strchrnul_avx2 
  0.02%           libjvm.so  _ZN8Constant5visitEP18InstructionVisitor 
  0.02%         c1, level 1  java.lang.Object::&lt;init&gt;, version 18 
  0.02%           libjvm.so  _ZNK13WatcherThread5sleepEv 
  0.67%  <...other 35 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 95.44%         c2, level 4
  3.31%              kernel
  0.69%           libjvm.so
  0.31%        libc-2.28.so
  0.12%      hsdis-amd64.so
  0.04%  libpthread-2.28.so
  0.04%         interpreter
  0.04%          ld-2.28.so
  0.02%         c1, level 1
....................................................................................................
100.00%  <totals>

PrintAssembly processed: 142086 total address lines.
Perf output processed (skipped 7.125 seconds):
 Column 1: cycles (5257 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 496 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fd900739620: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fd900739624: movabs r12,0x800000000
            0x00007fd90073962e: add    r10,r12
            0x00007fd900739631: xor    r12,r12
            0x00007fd900739634: cmp    rax,r10
            0x00007fd900739637: jne    0x00007fd8f8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fd90073963d: data16 xchg ax,ax
          [Verified Entry Point]
  5.33%     0x00007fd900739640: mov    DWORD PTR [rsp-0x14000],eax
  2.82%     0x00007fd900739647: push   rbp
  3.06%     0x00007fd900739648: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.31%     0x00007fd90073964c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  1.39%     0x00007fd900739653: mov    r8d,edx
  3.42%     0x00007fd900739656: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.67%     0x00007fd90073965d: mov    r9d,edx
  1.65%     0x00007fd900739660: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.24%     0x00007fd900739663: cmp    r9d,r8d
         ╭  0x00007fd900739666: je     0x00007fd900739678  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.40%  │  0x00007fd900739668: add    rsp,0x20
  1.37%  │  0x00007fd90073966c: pop    rbp
  5.29%  │  0x00007fd90073966d: mov    r10,QWORD PTR [r15+0x108]
  1.14%  │  0x00007fd900739674: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.87%  │  0x00007fd900739677: ret    
         ↘  0x00007fd900739678: mov    rbp,rsi
            0x00007fd90073967b: mov    DWORD PTR [rsp],edx
            0x00007fd90073967e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fd900739683: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fd900739688: mov    esi,0xffffff4d
            0x00007fd90073968d: xchg   ax,ax
            0x00007fd90073968f: call   0x00007fd8f8c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 37.97%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 530 (51 bytes) 

             0x00007fd90073d4c0: mov    r10,QWORD PTR [rsp+0x38]
             0x00007fd90073d4c5: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fd90073d592
             0x00007fd90073d4cd: mov    ebp,0x1
             0x00007fd90073d4d2: test   r11d,r11d
         ╭   0x00007fd90073d4d5: jne    0x00007fd90073d518  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
         │   0x00007fd90073d4d7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@36 (line 193)
  2.70%  │↗  0x00007fd90073d4e0: mov    rsi,QWORD PTR [rsp+0x40]
  2.61%  ││  0x00007fd90073d4e5: xchg   ax,ax
  1.83%  ││  0x00007fd90073d4e7: call   0x00007fd8f8c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual oneArgument {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  1.16%  ││  0x00007fd90073d4ec: mov    rsi,QWORD PTR [rsp]
  4.47%  ││  0x00007fd90073d4f0: mov    edx,eax
  1.54%  ││  0x00007fd90073d4f2: nop
  0.91%  ││  0x00007fd90073d4f3: call   0x00007fd8f8c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  3.27%  ││  0x00007fd90073d4f8: mov    r10,QWORD PTR [rsp+0x38]
  3.18%  ││  0x00007fd90073d4fd: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
  2.61%  ││  0x00007fd90073d505: mov    r10,QWORD PTR [r15+0x108]
  2.43%  ││  0x00007fd90073d50c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@33 (line 192)
  1.92%  ││  0x00007fd90073d510: test   DWORD PTR [r10],eax  ;   {poll}
  0.97%  ││  0x00007fd90073d513: test   r11d,r11d
         │╰  0x00007fd90073d516: je     0x00007fd90073d4e0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@36 (line 193)
         ↘   0x00007fd90073d518: movabs r10,0x7fd9163efa00
             0x00007fd90073d522: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@37 (line 193)
             0x00007fd90073d525: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fd90073d52a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@52 (line 195)
             0x00007fd90073d52e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub@40 (line 193)
....................................................................................................
 29.60%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument, version 495 (34 bytes) 

           # {method} {0x00007fd8e895d840} &apos;oneArgument&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsKtBenchmark&apos;
           #           [sp+0x20]  (sp of caller)
           0x00007fd900739320: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007fd900739324: movabs r12,0x800000000
           0x00007fd90073932e: add    r10,r12
           0x00007fd900739331: xor    r12,r12
           0x00007fd900739334: cmp    rax,r10
           0x00007fd900739337: jne    0x00007fd8f8c68c80  ;   {runtime_call ic_miss_stub}
           0x00007fd90073933d: data16 xchg ax,ax
         [Verified Entry Point]
  3.58%    0x00007fd900739340: sub    rsp,0x18
  4.68%    0x00007fd900739347: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument@-1 (line 56)
  0.72%    0x00007fd90073934c: mov    eax,DWORD PTR [rsi+0x10]
  2.68%    0x00007fd90073934f: imul   eax,DWORD PTR [rsi+0xc]  ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@2 (line 66)
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression$default@37 (line 65)
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument@12 (line 56)
  3.23%    0x00007fd900739353: add    rsp,0x10
  1.67%    0x00007fd900739357: pop    rbp
  6.71%    0x00007fd900739358: mov    r10,QWORD PTR [r15+0x108]
  1.46%    0x00007fd90073935f: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.13%    0x00007fd900739362: ret    
           0x00007fd900739363: hlt    
           0x00007fd900739364: hlt    
           0x00007fd900739365: hlt    
           0x00007fd900739366: hlt    
           0x00007fd900739367: hlt    
           0x00007fd900739368: hlt    
           0x00007fd900739369: hlt    
           0x00007fd90073936a: hlt    
           0x00007fd90073936b: hlt    
           0x00007fd90073936c: hlt    
....................................................................................................
 26.88%  <total for region 3>

....[Hottest Regions]...............................................................................
 37.97%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 496 (55 bytes) 
 29.60%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 530 (51 bytes) 
 26.88%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument, version 495 (34 bytes) 
  2.43%              kernel  [unknown] (6 bytes) 
  0.15%              kernel  [unknown] (1 bytes) 
  0.13%              kernel  [unknown] (30 bytes) 
  0.13%              kernel  [unknown] (30 bytes) 
  0.13%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (47 bytes) 
  0.11%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (9 bytes) 
  0.08%              kernel  [unknown] (9 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (28 bytes) 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (14 bytes) 
  0.06%        libc-2.28.so  syscall (0 bytes) 
  0.06%  libpthread-2.28.so  __libc_write (8 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  1.85%  <...other 91 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 37.97%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 496 
 29.60%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_oneArgument_jmhTest::oneArgument_avgt_jmhStub, version 530 
 26.88%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::oneArgument, version 495 
  4.49%              kernel  [unknown] 
  0.13%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%        libc-2.28.so  vfprintf 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%  libpthread-2.28.so  __libc_write 
  0.06%        libc-2.28.so  syscall 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%        libc-2.28.so  __stpcpy_sse2_unaligned 
  0.04%           libjvm.so  _ZN11SymbolTable6lookupEiPKcij 
  0.02%           libjvm.so  _ZN22ComputeLinearScanOrder13compute_orderEP10BlockBegin 
  0.02%         interpreter  fast_iload  224 fast_iload  
  0.02%           libjvm.so  jio_print 
  0.02%           libjvm.so  _ZN24DebugInformationRecorder27find_sharable_decode_offsetEi 
  0.02%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%        libc-2.28.so  _IO_fflush 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%           libjvm.so  _ZN16LinearScanWalker18split_before_usageEP8Intervalii 
  0.42%  <...other 22 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 94.45%         c2, level 4
  4.49%              kernel
  0.65%           libjvm.so
  0.27%        libc-2.28.so
  0.06%  libpthread-2.28.so
  0.06%         interpreter
  0.04%      hsdis-amd64.so
....................................................................................................
100.00%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsKtBenchmark.twoArguments
# Parameters: (delta = 1, factor = 2, value = 8)

# Run progress: 83.33% complete, ETA 00:00:38
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.100 ns/op
# Warmup Iteration   2: 4.077 ns/op
# Warmup Iteration   3: 3.735 ns/op
# Warmup Iteration   4: 4.031 ns/op
# Warmup Iteration   5: 4.065 ns/op
Iteration   1: 4.065 ns/op
Iteration   2: 3.533 ns/op
Iteration   3: 3.547 ns/op
Iteration   4: 3.556 ns/op
Iteration   5: 3.694 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 88.89% complete, ETA 00:00:25
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.867 ns/op
# Warmup Iteration   2: 4.515 ns/op
# Warmup Iteration   3: 4.486 ns/op
# Warmup Iteration   4: 4.008 ns/op
# Warmup Iteration   5: 3.511 ns/op
Iteration   1: 3.525 ns/op
Iteration   2: 3.530 ns/op
Iteration   3: 3.529 ns/op
Iteration   4: 3.565 ns/op
Iteration   5: 3.554 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 94.44% complete, ETA 00:00:12
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.156 ns/op
# Warmup Iteration   2: 3.603 ns/op
# Warmup Iteration   3: 4.009 ns/op
# Warmup Iteration   4: 3.577 ns/op
# Warmup Iteration   5: 3.614 ns/op
Iteration   1: 3.606 ns/op
Iteration   2: 3.594 ns/op
Iteration   3: 3.589 ns/op
Iteration   4: 3.595 ns/op
Iteration   5: 3.593 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsKtBenchmark.twoArguments":
  3.605 ±(99.9%) 0.144 ns/op [Average]
  (min, avg, max) = (3.525, 3.605, 4.065), stdev = 0.134
  CI (99.9%): [3.461, 3.749] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsKtBenchmark.twoArguments:·asm":
PrintAssembly processed: 143344 total address lines.
Perf output processed (skipped 7.308 seconds):
 Column 1: cycles (5225 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 504 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fc5c4737da0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fc5c4737da4: movabs r12,0x800000000
            0x00007fc5c4737dae: add    r10,r12
            0x00007fc5c4737db1: xor    r12,r12
            0x00007fc5c4737db4: cmp    rax,r10
            0x00007fc5c4737db7: jne    0x00007fc5bcc68c80  ;   {runtime_call ic_miss_stub}
            0x00007fc5c4737dbd: data16 xchg ax,ax
          [Verified Entry Point]
  3.71%     0x00007fc5c4737dc0: mov    DWORD PTR [rsp-0x14000],eax
  3.85%     0x00007fc5c4737dc7: push   rbp
  3.06%     0x00007fc5c4737dc8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.11%     0x00007fc5c4737dcc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.57%     0x00007fc5c4737dd3: mov    r8d,edx
  2.97%     0x00007fc5c4737dd6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  1.99%     0x00007fc5c4737ddd: mov    r9d,edx
  3.16%     0x00007fc5c4737de0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.69%     0x00007fc5c4737de3: cmp    r9d,r8d
         ╭  0x00007fc5c4737de6: je     0x00007fc5c4737df8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.29%  │  0x00007fc5c4737de8: add    rsp,0x20
  0.38%  │  0x00007fc5c4737dec: pop    rbp
  5.80%  │  0x00007fc5c4737ded: mov    r10,QWORD PTR [r15+0x108]
  0.21%  │  0x00007fc5c4737df4: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.29%  │  0x00007fc5c4737df7: ret    
         ↘  0x00007fc5c4737df8: mov    rbp,rsi
            0x00007fc5c4737dfb: mov    DWORD PTR [rsp],edx
            0x00007fc5c4737dfe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fc5c4737e03: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fc5c4737e08: mov    esi,0xffffff4d
            0x00007fc5c4737e0d: xchg   ax,ax
            0x00007fc5c4737e0f: call   0x00007fc5bcc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 38.09%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments, version 503 (37 bytes) 

           # {method} {0x00007fc5ad2fd918} &apos;twoArguments&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsKtBenchmark&apos;
           #           [sp+0x20]  (sp of caller)
           0x00007fc5c4737aa0: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007fc5c4737aa4: movabs r12,0x800000000
           0x00007fc5c4737aae: add    r10,r12
           0x00007fc5c4737ab1: xor    r12,r12
           0x00007fc5c4737ab4: cmp    rax,r10
           0x00007fc5c4737ab7: jne    0x00007fc5bcc68c80  ;   {runtime_call ic_miss_stub}
           0x00007fc5c4737abd: data16 xchg ax,ax
         [Verified Entry Point]
  3.25%    0x00007fc5c4737ac0: sub    rsp,0x18
  4.40%    0x00007fc5c4737ac7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments@-1 (line 62)
  0.04%    0x00007fc5c4737acc: mov    eax,DWORD PTR [rsi+0x10]
  3.22%    0x00007fc5c4737acf: imul   eax,DWORD PTR [rsi+0xc]
  3.16%    0x00007fc5c4737ad3: add    eax,DWORD PTR [rsi+0x14]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@4 (line 66)
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments@13 (line 62)
  4.71%    0x00007fc5c4737ad6: add    rsp,0x10
  0.08%    0x00007fc5c4737ada: pop    rbp
  5.93%    0x00007fc5c4737adb: mov    r10,QWORD PTR [r15+0x108]
  0.44%    0x00007fc5c4737ae2: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.15%    0x00007fc5c4737ae5: ret    
           0x00007fc5c4737ae6: hlt    
           0x00007fc5c4737ae7: hlt    
           0x00007fc5c4737ae8: hlt    
           0x00007fc5c4737ae9: hlt    
           0x00007fc5c4737aea: hlt    
           0x00007fc5c4737aeb: hlt    
           0x00007fc5c4737aec: hlt    
           0x00007fc5c4737aed: hlt    
           0x00007fc5c4737aee: hlt    
           0x00007fc5c4737aef: hlt    
....................................................................................................
 29.38%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 527 (51 bytes) 

             0x00007fc5c473a640: mov    r10,QWORD PTR [rsp+0x38]
             0x00007fc5c473a645: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fc5c473a712
             0x00007fc5c473a64d: mov    ebp,0x1
             0x00007fc5c473a652: test   r11d,r11d
         ╭   0x00007fc5c473a655: jne    0x00007fc5c473a698  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
         │   0x00007fc5c473a657: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@36 (line 193)
  3.04%  │↗  0x00007fc5c473a660: mov    rsi,QWORD PTR [rsp+0x40]
  1.61%  ││  0x00007fc5c473a665: xchg   ax,ax
  2.89%  ││  0x00007fc5c473a667: call   0x00007fc5bcc68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual twoArguments {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  0.04%  ││  0x00007fc5c473a66c: mov    rsi,QWORD PTR [rsp]
  3.75%  ││  0x00007fc5c473a670: mov    edx,eax
  3.89%  ││  0x00007fc5c473a672: nop
  0.06%  ││  0x00007fc5c473a673: call   0x00007fc5bcc68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  1.93%  ││  0x00007fc5c473a678: mov    r10,QWORD PTR [rsp+0x38]
  2.85%  ││  0x00007fc5c473a67d: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
  3.37%  ││  0x00007fc5c473a685: mov    r10,QWORD PTR [r15+0x108]
  1.28%  ││  0x00007fc5c473a68c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
  2.51%  ││  0x00007fc5c473a690: test   DWORD PTR [r10],eax  ;   {poll}
  0.13%  ││  0x00007fc5c473a693: test   r11d,r11d
         │╰  0x00007fc5c473a696: je     0x00007fc5c473a660  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007fc5c473a698: movabs r10,0x7fc5dad8fa00
             0x00007fc5c473a6a2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@37 (line 193)
             0x00007fc5c473a6a5: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fc5c473a6aa: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@52 (line 195)
             0x00007fc5c473a6ae: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 27.35%  <total for region 3>

....[Hottest Regions]...............................................................................
 38.09%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 504 (55 bytes) 
 29.38%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments, version 503 (37 bytes) 
 27.35%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 527 (51 bytes) 
  2.11%              kernel  [unknown] (6 bytes) 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (47 bytes) 
  0.15%              kernel  [unknown] (11 bytes) 
  0.13%              kernel  [unknown] (6 bytes) 
  0.11%              kernel  [unknown] (0 bytes) 
  0.10%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (30 bytes) 
  0.06%              kernel  [unknown] (15 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm (25 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  1.80%  <...other 87 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 38.09%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 504 
 29.38%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments, version 503 
 27.35%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 527 
  4.00%              kernel  [unknown] 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.10%        libc-2.28.so  vfprintf 
  0.08%        libc-2.28.so  __strchr_avx2 
  0.08%        libc-2.28.so  _IO_fwrite 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%        libc-2.28.so  _IO_str_init_static_internal 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%           libjvm.so  _ZN12stringStream5writeEPKcm 
  0.02%  libpthread-2.28.so  __pthread_mutex_unlock 
  0.02%        libc-2.28.so  _dl_addr 
  0.02%           libjvm.so  syscall@plt 
  0.02%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%         interpreter  method entry point (kind = native)  
  0.02%           libjvm.so  _ZThn8_N16UseCountComputer8block_doEP10BlockBegin 
  0.02%      hsdis-amd64.so  print_insn 
  0.36%  <...other 19 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.81%         c2, level 4
  4.00%              kernel
  0.57%           libjvm.so
  0.42%        libc-2.28.so
  0.06%  libpthread-2.28.so
  0.06%         interpreter
  0.04%      hsdis-amd64.so
  0.02%                    
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 139911 total address lines.
Perf output processed (skipped 7.178 seconds):
 Column 1: cycles (5232 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 494 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f2c34738720: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f2c34738724: movabs r12,0x800000000
            0x00007f2c3473872e: add    r10,r12
            0x00007f2c34738731: xor    r12,r12
            0x00007f2c34738734: cmp    rax,r10
            0x00007f2c34738737: jne    0x00007f2c2cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007f2c3473873d: data16 xchg ax,ax
          [Verified Entry Point]
  4.34%     0x00007f2c34738740: mov    DWORD PTR [rsp-0x14000],eax
  2.94%     0x00007f2c34738747: push   rbp
  3.96%     0x00007f2c34738748: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  3.48%     0x00007f2c3473874c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.27%     0x00007f2c34738753: mov    r8d,edx
  4.24%     0x00007f2c34738756: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.71%     0x00007f2c3473875d: mov    r9d,edx
  3.13%     0x00007f2c34738760: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.11%     0x00007f2c34738763: cmp    r9d,r8d
         ╭  0x00007f2c34738766: je     0x00007f2c34738778  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.99%  │  0x00007f2c34738768: add    rsp,0x20
  0.36%  │  0x00007f2c3473876c: pop    rbp
  6.12%  │  0x00007f2c3473876d: mov    r10,QWORD PTR [r15+0x108]
  0.11%  │  0x00007f2c34738774: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.69%  │  0x00007f2c34738777: ret    
         ↘  0x00007f2c34738778: mov    rbp,rsi
            0x00007f2c3473877b: mov    DWORD PTR [rsp],edx
            0x00007f2c3473877e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f2c34738783: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f2c34738788: mov    esi,0xffffff4d
            0x00007f2c3473878d: xchg   ax,ax
            0x00007f2c3473878f: call   0x00007f2c2cc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 37.46%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments, version 493 (37 bytes) 

           # {method} {0x00007f2c1d88d918} &apos;twoArguments&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsKtBenchmark&apos;
           #           [sp+0x20]  (sp of caller)
           0x00007f2c34738420: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007f2c34738424: movabs r12,0x800000000
           0x00007f2c3473842e: add    r10,r12
           0x00007f2c34738431: xor    r12,r12
           0x00007f2c34738434: cmp    rax,r10
           0x00007f2c34738437: jne    0x00007f2c2cc68c80  ;   {runtime_call ic_miss_stub}
           0x00007f2c3473843d: data16 xchg ax,ax
         [Verified Entry Point]
  3.44%    0x00007f2c34738440: sub    rsp,0x18
  3.77%    0x00007f2c34738447: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments@-1 (line 62)
  0.11%    0x00007f2c3473844c: mov    eax,DWORD PTR [rsi+0x10]
  3.61%    0x00007f2c3473844f: imul   eax,DWORD PTR [rsi+0xc]
  3.12%    0x00007f2c34738453: add    eax,DWORD PTR [rsi+0x14]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@4 (line 66)
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments@13 (line 62)
  4.19%    0x00007f2c34738456: add    rsp,0x10
  0.04%    0x00007f2c3473845a: pop    rbp
  7.19%    0x00007f2c3473845b: mov    r10,QWORD PTR [r15+0x108]
  0.57%    0x00007f2c34738462: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.04%    0x00007f2c34738465: ret    
           0x00007f2c34738466: hlt    
           0x00007f2c34738467: hlt    
           0x00007f2c34738468: hlt    
           0x00007f2c34738469: hlt    
           0x00007f2c3473846a: hlt    
           0x00007f2c3473846b: hlt    
           0x00007f2c3473846c: hlt    
           0x00007f2c3473846d: hlt    
           0x00007f2c3473846e: hlt    
           0x00007f2c3473846f: hlt    
....................................................................................................
 29.07%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 521 (51 bytes) 

             0x00007f2c3473ae40: mov    r10,QWORD PTR [rsp+0x38]
             0x00007f2c3473ae45: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f2c3473af12
             0x00007f2c3473ae4d: mov    ebp,0x1
             0x00007f2c3473ae52: test   r11d,r11d
         ╭   0x00007f2c3473ae55: jne    0x00007f2c3473ae98  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
         │   0x00007f2c3473ae57: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@36 (line 193)
  3.73%  │↗  0x00007f2c3473ae60: mov    rsi,QWORD PTR [rsp+0x40]
  1.11%  ││  0x00007f2c3473ae65: xchg   ax,ax
  2.54%  ││  0x00007f2c3473ae67: call   0x00007f2c2cc68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual twoArguments {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  0.06%  ││  0x00007f2c3473ae6c: mov    rsi,QWORD PTR [rsp]
  4.26%  ││  0x00007f2c3473ae70: mov    edx,eax
  3.52%  ││  0x00007f2c3473ae72: nop
  0.04%  ││  0x00007f2c3473ae73: call   0x00007f2c2cc68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  2.24%  ││  0x00007f2c3473ae78: mov    r10,QWORD PTR [rsp+0x38]
  2.83%  ││  0x00007f2c3473ae7d: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
  3.71%  ││  0x00007f2c3473ae85: mov    r10,QWORD PTR [r15+0x108]
  1.45%  ││  0x00007f2c3473ae8c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
  2.68%  ││  0x00007f2c3473ae90: test   DWORD PTR [r10],eax  ;   {poll}
  0.11%  ││  0x00007f2c3473ae93: test   r11d,r11d
         │╰  0x00007f2c3473ae96: je     0x00007f2c3473ae60  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f2c3473ae98: movabs r10,0x7f2c4b388a00
             0x00007f2c3473aea2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@37 (line 193)
             0x00007f2c3473aea5: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f2c3473aeaa: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@52 (line 195)
             0x00007f2c3473aeae: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 28.27%  <total for region 3>

....[Hottest Regions]...............................................................................
 37.46%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 494 (55 bytes) 
 29.07%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments, version 493 (37 bytes) 
 28.27%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 521 (51 bytes) 
  1.68%              kernel  [unknown] (6 bytes) 
  0.25%              kernel  [unknown] (3 bytes) 
  0.17%              kernel  [unknown] (39 bytes) 
  0.17%              kernel  [unknown] (68 bytes) 
  0.13%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (24 bytes) 
  0.10%              kernel  [unknown] (40 bytes) 
  0.10%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (38 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (13 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (21 bytes) 
  0.04%              kernel  [unknown] (15 bytes) 
  0.04%              kernel  [unknown] (10 bytes) 
  0.04%              kernel  [unknown] (29 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  2.12%  <...other 104 warm regions...>
....................................................................................................
 99.96%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 37.46%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 494 
 29.07%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments, version 493 
 28.27%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 521 
  3.75%              kernel  [unknown] 
  0.13%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.06%      hsdis-amd64.so  print_insn 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%  libpthread-2.28.so  do_futex_wait.constprop.1 
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN23runtime_call_Relocation4typeEv 
  0.04%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.04%        libc-2.28.so  __stpcpy_sse2_unaligned 
  0.02%  libpthread-2.28.so  __pthread_mutex_cond_lock 
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%      hsdis-amd64.so  print_displacement 
  0.02%           libjvm.so  _ZN12GraphBuilder12profile_callEP8ciMethodP11InstructionP7ciKlassP13GrowableArrayIS3_Eb 
  0.71%  <...other 37 warm methods...>
....................................................................................................
 99.96%  <totals>

....[Distribution by Source]........................................................................
 94.82%         c2, level 4
  3.75%              kernel
  0.71%           libjvm.so
  0.27%        libc-2.28.so
  0.13%      hsdis-amd64.so
  0.11%  libpthread-2.28.so
  0.10%         interpreter
  0.06%         c1, level 3
  0.02%          ld-2.28.so
....................................................................................................
 99.96%  <totals>

PrintAssembly processed: 140113 total address lines.
Perf output processed (skipped 7.094 seconds):
 Column 1: cycles (5245 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 501 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fa66c7393a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fa66c7393a4: movabs r12,0x800000000
            0x00007fa66c7393ae: add    r10,r12
            0x00007fa66c7393b1: xor    r12,r12
            0x00007fa66c7393b4: cmp    rax,r10
            0x00007fa66c7393b7: jne    0x00007fa664c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fa66c7393bd: data16 xchg ax,ax
          [Verified Entry Point]
  4.65%     0x00007fa66c7393c0: mov    DWORD PTR [rsp-0x14000],eax
  3.64%     0x00007fa66c7393c7: push   rbp
  3.51%     0x00007fa66c7393c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.04%     0x00007fa66c7393cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.13%     0x00007fa66c7393d3: mov    r8d,edx
  3.89%     0x00007fa66c7393d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.63%     0x00007fa66c7393dd: mov    r9d,edx
  3.20%     0x00007fa66c7393e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.11%     0x00007fa66c7393e3: cmp    r9d,r8d
         ╭  0x00007fa66c7393e6: je     0x00007fa66c7393f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.85%  │  0x00007fa66c7393e8: add    rsp,0x20
  0.36%  │  0x00007fa66c7393ec: pop    rbp
  5.99%  │  0x00007fa66c7393ed: mov    r10,QWORD PTR [r15+0x108]
  0.10%  │  0x00007fa66c7393f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.64%  │  0x00007fa66c7393f7: ret    
         ↘  0x00007fa66c7393f8: mov    rbp,rsi
            0x00007fa66c7393fb: mov    DWORD PTR [rsp],edx
            0x00007fa66c7393fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fa66c739403: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fa66c739408: mov    esi,0xffffff4d
            0x00007fa66c73940d: xchg   ax,ax
            0x00007fa66c73940f: call   0x00007fa664c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 37.75%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments, version 500 (37 bytes) 

           # {method} {0x00007fa64fddd918} &apos;twoArguments&apos; &apos;()I&apos; in &apos;org/ib/benchmark/DefaultArgumentsKtBenchmark&apos;
           #           [sp+0x20]  (sp of caller)
           0x00007fa66c7390a0: mov    r10d,DWORD PTR [rsi+0x8]
           0x00007fa66c7390a4: movabs r12,0x800000000
           0x00007fa66c7390ae: add    r10,r12
           0x00007fa66c7390b1: xor    r12,r12
           0x00007fa66c7390b4: cmp    rax,r10
           0x00007fa66c7390b7: jne    0x00007fa664c68c80  ;   {runtime_call ic_miss_stub}
           0x00007fa66c7390bd: data16 xchg ax,ax
         [Verified Entry Point]
  2.99%    0x00007fa66c7390c0: sub    rsp,0x18
  4.73%    0x00007fa66c7390c7: mov    QWORD PTR [rsp+0x10],rbp  ;*synchronization entry
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments@-1 (line 62)
  0.23%    0x00007fa66c7390cc: mov    eax,DWORD PTR [rsi+0x10]
  3.07%    0x00007fa66c7390cf: imul   eax,DWORD PTR [rsi+0xc]
  3.28%    0x00007fa66c7390d3: add    eax,DWORD PTR [rsi+0x14]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@4 (line 66)
                                                         ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments@13 (line 62)
  4.40%    0x00007fa66c7390d6: add    rsp,0x10
  0.08%    0x00007fa66c7390da: pop    rbp
  7.49%    0x00007fa66c7390db: mov    r10,QWORD PTR [r15+0x108]
  0.51%    0x00007fa66c7390e2: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.03%    0x00007fa66c7390e5: ret    
           0x00007fa66c7390e6: hlt    
           0x00007fa66c7390e7: hlt    
           0x00007fa66c7390e8: hlt    
           0x00007fa66c7390e9: hlt    
           0x00007fa66c7390ea: hlt    
           0x00007fa66c7390eb: hlt    
           0x00007fa66c7390ec: hlt    
           0x00007fa66c7390ed: hlt    
           0x00007fa66c7390ee: hlt    
           0x00007fa66c7390ef: hlt    
....................................................................................................
 29.82%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 533 (51 bytes) 

             0x00007fa66c73c9c0: mov    r10,QWORD PTR [rsp+0x38]
             0x00007fa66c73c9c5: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fa66c73ca92
             0x00007fa66c73c9cd: mov    ebp,0x1
             0x00007fa66c73c9d2: test   r11d,r11d
         ╭   0x00007fa66c73c9d5: jne    0x00007fa66c73ca18  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
         │   0x00007fa66c73c9d7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@36 (line 193)
  3.30%  │↗  0x00007fa66c73c9e0: mov    rsi,QWORD PTR [rsp+0x40]
  1.62%  ││  0x00007fa66c73c9e5: xchg   ax,ax
  2.90%  ││  0x00007fa66c73c9e7: call   0x00007fa664c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual twoArguments {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@17 (line 190)
         ││                                                ;   {optimized virtual_call}
  0.04%  ││  0x00007fa66c73c9ec: mov    rsi,QWORD PTR [rsp]
  4.14%  ││  0x00007fa66c73c9f0: mov    edx,eax
  3.09%  ││  0x00007fa66c73c9f2: nop
  0.04%  ││  0x00007fa66c73c9f3: call   0x00007fa664c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  2.69%  ││  0x00007fa66c73c9f8: mov    r10,QWORD PTR [rsp+0x38]
  2.71%  ││  0x00007fa66c73c9fd: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
  2.61%  ││  0x00007fa66c73ca05: mov    r10,QWORD PTR [r15+0x108]
  1.58%  ││  0x00007fa66c73ca0c: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@33 (line 192)
  2.57%  ││  0x00007fa66c73ca10: test   DWORD PTR [r10],eax  ;   {poll}
  0.04%  ││  0x00007fa66c73ca13: test   r11d,r11d
         │╰  0x00007fa66c73ca16: je     0x00007fa66c73c9e0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007fa66c73ca18: movabs r10,0x7fa681830a00
             0x00007fa66c73ca22: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@37 (line 193)
             0x00007fa66c73ca25: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fa66c73ca2a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@52 (line 195)
             0x00007fa66c73ca2e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 27.32%  <total for region 3>

....[Hottest Regions]...............................................................................
 37.75%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 501 (55 bytes) 
 29.82%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments, version 500 (37 bytes) 
 27.32%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 533 (51 bytes) 
  2.57%              kernel  [unknown] (6 bytes) 
  0.27%              kernel  [unknown] (51 bytes) 
  0.15%              kernel  [unknown] (6 bytes) 
  0.13%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (32 bytes) 
  0.10%              kernel  [unknown] (30 bytes) 
  0.10%              kernel  [unknown] (24 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (1 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (29 bytes) 
  0.04%              kernel  [unknown] (30 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (27 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ (32 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.37%  <...other 72 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 37.75%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 501 
 29.82%         c2, level 4  org.ib.benchmark.DefaultArgumentsKtBenchmark::twoArguments, version 500 
 27.32%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_twoArguments_jmhTest::twoArguments_avgt_jmhStub, version 533 
  4.19%              kernel  [unknown] 
  0.13%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%        libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.02%           libjvm.so  _ZN22ComputeLinearScanOrder13compute_orderEP10BlockBegin 
  0.02%           libjvm.so  _ZN16LIR_OpVisitState5visitEP6LIR_Op 
  0.02%      hsdis-amd64.so  oappend 
  0.02%           libjvm.so  _ZN12LinkResolver14resolve_invokeER8CallInfo6HandleRK18constantPoolHandleiN9Bytecodes4CodeEP6Thread 
  0.02%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%           libjvm.so  _ZN14MacroAssembler15encode_heap_oopEP12RegisterImpl 
  0.02%           libjvm.so  _ZN10JavaThread13pd_last_frameEv 
  0.02%        libc-2.28.so  __strchrnul_avx2 
  0.02%           libjvm.so  _ZN14IntervalWalker7walk_toE13IntervalStatei.constprop.233 
  0.02%           libjvm.so  _ZN12outputStream5printEPKcz 
  0.02%           libjvm.so  _ZN10LinearScan24compute_global_live_setsEv 
  0.02%           libjvm.so  _ZN13PhiSimplifier8block_doEP10BlockBegin 
  0.42%  <...other 22 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.89%         c2, level 4
  4.19%              kernel
  0.61%           libjvm.so
  0.17%        libc-2.28.so
  0.06%      hsdis-amd64.so
  0.04%  libpthread-2.28.so
  0.02%         interpreter
....................................................................................................
 99.98%  <totals>



# Run complete. Total time: 00:03:48

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                            (delta)  (factor)  (value)  Mode  Cnt  Score   Error  Units
DefaultArgumentsJavaBenchmark.defaultArguments             1         2        8  avgt   15  3.342 ± 0.134  ns/op
DefaultArgumentsJavaBenchmark.defaultArguments:·asm        1         2        8  avgt         NaN            ---
DefaultArgumentsJavaBenchmark.oneArgument                  1         2        8  avgt   15  4.224 ± 1.249  ns/op
DefaultArgumentsJavaBenchmark.oneArgument:·asm             1         2        8  avgt         NaN            ---
DefaultArgumentsJavaBenchmark.twoArguments                 1         2        8  avgt   15  3.812 ± 0.542  ns/op
DefaultArgumentsJavaBenchmark.twoArguments:·asm            1         2        8  avgt         NaN            ---
DefaultArgumentsKtBenchmark.defaultArguments               1         2        8  avgt   15  3.440 ± 0.238  ns/op
DefaultArgumentsKtBenchmark.defaultArguments:·asm          1         2        8  avgt         NaN            ---
DefaultArgumentsKtBenchmark.oneArgument                    1         2        8  avgt   15  3.837 ± 0.217  ns/op
DefaultArgumentsKtBenchmark.oneArgument:·asm               1         2        8  avgt         NaN            ---
DefaultArgumentsKtBenchmark.twoArguments                   1         2        8  avgt   15  3.605 ± 0.144  ns/op
DefaultArgumentsKtBenchmark.twoArguments:·asm              1         2        8  avgt         NaN            ---

Few thoughts:
    - not any relevant/significant performance difference
    - in Kotlin case the JIT optimizes the code by inlining and removing the synthetic method generated at bytecode level