# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsJavaBenchmark.default1Argument
# Parameters: (delta = 1, factor = 2, value = 8)

# Run progress: 0.00% complete, ETA 00:03:00
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.509 ns/op
# Warmup Iteration   2: 3.326 ns/op
# Warmup Iteration   3: 2.647 ns/op
# Warmup Iteration   4: 2.487 ns/op
# Warmup Iteration   5: 2.363 ns/op
Iteration   1: 2.484 ns/op
Iteration   2: 2.352 ns/op
Iteration   3: 2.344 ns/op
Iteration   4: 2.373 ns/op
Iteration   5: 2.346 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 5.56% complete, ETA 00:03:40
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.941 ns/op
# Warmup Iteration   2: 2.791 ns/op
# Warmup Iteration   3: 2.991 ns/op
# Warmup Iteration   4: 2.847 ns/op
# Warmup Iteration   5: 2.725 ns/op
Iteration   1: 2.798 ns/op
Iteration   2: 2.707 ns/op
Iteration   3: 2.710 ns/op
Iteration   4: 2.618 ns/op
Iteration   5: 2.643 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 11.11% complete, ETA 00:03:25
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.441 ns/op
# Warmup Iteration   2: 2.766 ns/op
# Warmup Iteration   3: 2.849 ns/op
# Warmup Iteration   4: 2.634 ns/op
# Warmup Iteration   5: 2.635 ns/op
Iteration   1: 2.664 ns/op
Iteration   2: 2.640 ns/op
Iteration   3: 2.610 ns/op
Iteration   4: 2.612 ns/op
Iteration   5: 2.634 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.default1Argument":
  2.569 ±(99.9%) 0.160 ns/op [Average]
  (min, avg, max) = (2.344, 2.569, 2.798), stdev = 0.150
  CI (99.9%): [2.409, 2.729] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.default1Argument:·asm":
PrintAssembly processed: 142033 total address lines.
Perf output processed (skipped 7.109 seconds):
 Column 1: cycles (5279 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 490 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f7c4c738220: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f7c4c738224: movabs r12,0x800000000
            0x00007f7c4c73822e: add    r10,r12
            0x00007f7c4c738231: xor    r12,r12
            0x00007f7c4c738234: cmp    rax,r10
            0x00007f7c4c738237: jne    0x00007f7c44c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f7c4c73823d: data16 xchg ax,ax
          [Verified Entry Point]
  6.19%     0x00007f7c4c738240: mov    DWORD PTR [rsp-0x14000],eax
  5.65%     0x00007f7c4c738247: push   rbp
  2.90%     0x00007f7c4c738248: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  7.12%     0x00007f7c4c73824c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.63%     0x00007f7c4c738253: mov    r8d,edx
  2.94%     0x00007f7c4c738256: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  3.22%     0x00007f7c4c73825d: mov    r9d,edx
  5.32%     0x00007f7c4c738260: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.95%     0x00007f7c4c738263: cmp    r9d,r8d
         ╭  0x00007f7c4c738266: je     0x00007f7c4c738278  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.66%  │  0x00007f7c4c738268: add    rsp,0x20
  2.37%  │  0x00007f7c4c73826c: pop    rbp
  5.11%  │  0x00007f7c4c73826d: mov    r10,QWORD PTR [r15+0x108]
  0.68%  │  0x00007f7c4c738274: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.18%  │  0x00007f7c4c738277: ret    
         ↘  0x00007f7c4c738278: mov    rbp,rsi
            0x00007f7c4c73827b: mov    DWORD PTR [rsp],edx
            0x00007f7c4c73827e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f7c4c738283: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f7c4c738288: mov    esi,0xffffff4d
            0x00007f7c4c73828d: xchg   ax,ax
            0x00007f7c4c73828f: call   0x00007f7c44c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 49.91%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 523 (50 bytes) 

             0x00007f7c4c73c4a4: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f7c4c73c56a
             0x00007f7c4c73c4ac: mov    ebp,0x1
             0x00007f7c4c73c4b1: test   r10d,r10d
         ╭   0x00007f7c4c73c4b4: jne    0x00007f7c4c73c4f7  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
         │   0x00007f7c4c73c4b6: data16 nop WORD PTR [rax+rax*1+0x0]
         │                                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@36 (line 193)
  1.65%  │↗  0x00007f7c4c73c4c0: mov    r10,QWORD PTR [rsp+0x40]
  4.45%  ││  0x00007f7c4c73c4c5: mov    edx,DWORD PTR [r10+0x10]
  4.57%  ││  0x00007f7c4c73c4c9: imul   edx,DWORD PTR [r10+0xc]  ;*imul {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@2 (line 61)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::default1Argument@10 (line 52)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@17 (line 190)
  7.82%  ││  0x00007f7c4c73c4ce: mov    rsi,QWORD PTR [rsp+0x38]
  0.61%  ││  0x00007f7c4c73c4d3: call   0x00007f7c44c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  8.56%  ││  0x00007f7c4c73c4d8: mov    r10,QWORD PTR [rsp]
  4.57%  ││  0x00007f7c4c73c4dc: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
  1.93%  ││  0x00007f7c4c73c4e4: mov    r10,QWORD PTR [r15+0x108]
  5.02%  ││  0x00007f7c4c73c4eb: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
  4.39%  ││  0x00007f7c4c73c4ef: test   DWORD PTR [r10],eax  ;   {poll}
  0.53%  ││  0x00007f7c4c73c4f2: test   r11d,r11d
         │╰  0x00007f7c4c73c4f5: je     0x00007f7c4c73c4c0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@36 (line 193)
         ↘   0x00007f7c4c73c4f7: movabs r10,0x7f7c63773a00
             0x00007f7c4c73c501: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@37 (line 193)
             0x00007f7c4c73c504: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f7c4c73c509: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@52 (line 195)
             0x00007f7c4c73c50d: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@40 (line 193)
....................................................................................................
 44.10%  <total for region 2>

....[Hottest Regions]...............................................................................
 49.91%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 490 (55 bytes) 
 44.10%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 523 (50 bytes) 
  2.67%              kernel  [unknown] (6 bytes) 
  0.23%              kernel  [unknown] (1 bytes) 
  0.21%              kernel  [unknown] (9 bytes) 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.11%              kernel  [unknown] (0 bytes) 
  0.09%              kernel  [unknown] (28 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (20 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%        libc-2.28.so  _IO_fwrite (5 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (16 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%      hsdis-amd64.so  print_insn (0 bytes) 
  0.04%        libc-2.28.so  __strchr_avx2 (0 bytes) 
  1.89%  <...other 100 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 49.91%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 490 
 44.10%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 523 
  4.68%              kernel  [unknown] 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.09%        libc-2.28.so  _IO_fwrite 
  0.06%      hsdis-amd64.so  print_insn 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%      hsdis-amd64.so  putop 
  0.04%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%           libjvm.so  jio_print 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%           libjvm.so  _ZN8VMThread18evaluate_operationEP12VM_Operation.constprop.54 
  0.02%        libc-2.28.so  __strchrnul_avx2 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%           libjvm.so  _ZN12ciMethodData11bci_to_dataEiP8ciMethod 
  0.02%        libc-2.28.so  _IO_vsnprintf 
  0.02%         interpreter  dup  89 dup  
  0.02%           libjvm.so  _ZN12BasicMatcher5matchERK12methodHandle 
  0.57%  <...other 30 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.01%         c2, level 4
  4.68%              kernel
  0.68%           libjvm.so
  0.30%        libc-2.28.so
  0.15%      hsdis-amd64.so
  0.13%         interpreter
  0.02%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 134257 total address lines.
Perf output processed (skipped 7.085 seconds):
 Column 1: cycles (5229 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 463 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fc71c7380a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fc71c7380a4: movabs r12,0x800000000
            0x00007fc71c7380ae: add    r10,r12
            0x00007fc71c7380b1: xor    r12,r12
            0x00007fc71c7380b4: cmp    rax,r10
            0x00007fc71c7380b7: jne    0x00007fc714c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fc71c7380bd: data16 xchg ax,ax
          [Verified Entry Point]
  6.08%     0x00007fc71c7380c0: mov    DWORD PTR [rsp-0x14000],eax
  6.12%     0x00007fc71c7380c7: push   rbp
  3.37%     0x00007fc71c7380c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  7.78%     0x00007fc71c7380cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.59%     0x00007fc71c7380d3: mov    r8d,edx
  3.00%     0x00007fc71c7380d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.87%     0x00007fc71c7380dd: mov    r9d,edx
  4.78%     0x00007fc71c7380e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.71%     0x00007fc71c7380e3: cmp    r9d,r8d
         ╭  0x00007fc71c7380e6: je     0x00007fc71c7380f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.29%  │  0x00007fc71c7380e8: add    rsp,0x20
  2.96%  │  0x00007fc71c7380ec: pop    rbp
  6.10%  │  0x00007fc71c7380ed: mov    r10,QWORD PTR [r15+0x108]
  1.11%  │  0x00007fc71c7380f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.93%  │  0x00007fc71c7380f7: ret    
         ↘  0x00007fc71c7380f8: mov    rbp,rsi
            0x00007fc71c7380fb: mov    DWORD PTR [rsp],edx
            0x00007fc71c7380fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fc71c738103: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fc71c738108: mov    esi,0xffffff4d
            0x00007fc71c73810d: xchg   ax,ax
            0x00007fc71c73810f: call   0x00007fc714c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 51.69%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 494 (50 bytes) 

             0x00007fc71c73b524: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fc71c73b5ea
             0x00007fc71c73b52c: mov    ebp,0x1
             0x00007fc71c73b531: test   r10d,r10d
         ╭   0x00007fc71c73b534: jne    0x00007fc71c73b577  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
         │   0x00007fc71c73b536: data16 nop WORD PTR [rax+rax*1+0x0]
         │                                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@36 (line 193)
  1.99%  │↗  0x00007fc71c73b540: mov    r10,QWORD PTR [rsp+0x40]
  4.48%  ││  0x00007fc71c73b545: mov    edx,DWORD PTR [r10+0x10]
  4.07%  ││  0x00007fc71c73b549: imul   edx,DWORD PTR [r10+0xc]  ;*imul {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@2 (line 61)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::default1Argument@10 (line 52)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@17 (line 190)
  7.21%  ││  0x00007fc71c73b54e: mov    rsi,QWORD PTR [rsp+0x38]
  0.61%  ││  0x00007fc71c73b553: call   0x00007fc714c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  9.03%  ││  0x00007fc71c73b558: mov    r10,QWORD PTR [rsp]
  4.55%  ││  0x00007fc71c73b55c: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
  1.93%  ││  0x00007fc71c73b564: mov    r10,QWORD PTR [r15+0x108]
  4.74%  ││  0x00007fc71c73b56b: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
  4.21%  ││  0x00007fc71c73b56f: test   DWORD PTR [r10],eax  ;   {poll}
  0.33%  ││  0x00007fc71c73b572: test   r11d,r11d
         │╰  0x00007fc71c73b575: je     0x00007fc71c73b540  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@36 (line 193)
         ↘   0x00007fc71c73b577: movabs r10,0x7fc7318c6a00
             0x00007fc71c73b581: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@37 (line 193)
             0x00007fc71c73b584: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fc71c73b589: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@52 (line 195)
             0x00007fc71c73b58d: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@40 (line 193)
....................................................................................................
 43.14%  <total for region 2>

....[Hottest Regions]...............................................................................
 51.69%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 463 (55 bytes) 
 43.14%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 494 (50 bytes) 
  1.80%              kernel  [unknown] (6 bytes) 
  0.21%              kernel  [unknown] (39 bytes) 
  0.11%              kernel  [unknown] (28 bytes) 
  0.08%              kernel  [unknown] (11 bytes) 
  0.08%              kernel  [unknown] (19 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.08%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (23 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (3 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  2.08%  <...other 100 warm regions...>
....................................................................................................
 99.96%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 51.69%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 463 
 43.14%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 494 
  3.92%              kernel  [unknown] 
  0.08%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%      hsdis-amd64.so  print_insn 
  0.06%        libc-2.28.so  _IO_fwrite 
  0.04%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%           libjvm.so  _ZNK7nmethod20print_nmethod_labelsEP12outputStreamPh 
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN22ImplicitExceptionTableC1EPK7nmethod 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.04%      hsdis-amd64.so  decode 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.04%        libc-2.28.so  syscall 
  0.02%        libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.02%           libjvm.so  jio_print 
  0.50%  <...other 26 warm methods...>
....................................................................................................
 99.96%  <totals>

....[Distribution by Source]........................................................................
 94.84%         c2, level 4
  3.92%              kernel
  0.61%           libjvm.so
  0.27%        libc-2.28.so
  0.13%      hsdis-amd64.so
  0.06%  libpthread-2.28.so
  0.06%         interpreter
  0.04%         c1, level 3
  0.02%      libz.so.1.2.11
  0.02%      perf-16750.map
....................................................................................................
 99.96%  <totals>

PrintAssembly processed: 146298 total address lines.
Perf output processed (skipped 7.206 seconds):
 Column 1: cycles (5223 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 502 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007ff220737d20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007ff220737d24: movabs r12,0x800000000
            0x00007ff220737d2e: add    r10,r12
            0x00007ff220737d31: xor    r12,r12
            0x00007ff220737d34: cmp    rax,r10
            0x00007ff220737d37: jne    0x00007ff218c68c80  ;   {runtime_call ic_miss_stub}
            0x00007ff220737d3d: data16 xchg ax,ax
          [Verified Entry Point]
  5.97%     0x00007ff220737d40: mov    DWORD PTR [rsp-0x14000],eax
  5.57%     0x00007ff220737d47: push   rbp
  3.35%     0x00007ff220737d48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  8.04%     0x00007ff220737d4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.73%     0x00007ff220737d53: mov    r8d,edx
  2.68%     0x00007ff220737d56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.85%     0x00007ff220737d5d: mov    r9d,edx
  4.73%     0x00007ff220737d60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.80%     0x00007ff220737d63: cmp    r9d,r8d
         ╭  0x00007ff220737d66: je     0x00007ff220737d78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.16%  │  0x00007ff220737d68: add    rsp,0x20
  3.45%  │  0x00007ff220737d6c: pop    rbp
  5.13%  │  0x00007ff220737d6d: mov    r10,QWORD PTR [r15+0x108]
  1.05%  │  0x00007ff220737d74: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.16%  │  0x00007ff220737d77: ret    
         ↘  0x00007ff220737d78: mov    rbp,rsi
            0x00007ff220737d7b: mov    DWORD PTR [rsp],edx
            0x00007ff220737d7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007ff220737d83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007ff220737d88: mov    esi,0xffffff4d
            0x00007ff220737d8d: xchg   ax,ax
            0x00007ff220737d8f: call   0x00007ff218c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 50.68%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 530 (50 bytes) 

             0x00007ff22073b6a4: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007ff22073b76a
             0x00007ff22073b6ac: mov    ebp,0x1
             0x00007ff22073b6b1: test   r10d,r10d
         ╭   0x00007ff22073b6b4: jne    0x00007ff22073b6f7  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
         │   0x00007ff22073b6b6: data16 nop WORD PTR [rax+rax*1+0x0]
         │                                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@36 (line 193)
  1.67%  │↗  0x00007ff22073b6c0: mov    r10,QWORD PTR [rsp+0x40]
  5.05%  ││  0x00007ff22073b6c5: mov    edx,DWORD PTR [r10+0x10]
  4.52%  ││  0x00007ff22073b6c9: imul   edx,DWORD PTR [r10+0xc]  ;*imul {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@2 (line 61)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::default1Argument@10 (line 52)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@17 (line 190)
  7.01%  ││  0x00007ff22073b6ce: mov    rsi,QWORD PTR [rsp+0x38]
  0.94%  ││  0x00007ff22073b6d3: call   0x00007ff218c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  8.85%  ││  0x00007ff22073b6d8: mov    r10,QWORD PTR [rsp]
  5.27%  ││  0x00007ff22073b6dc: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
  1.42%  ││  0x00007ff22073b6e4: mov    r10,QWORD PTR [r15+0x108]
  4.67%  ││  0x00007ff22073b6eb: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
  4.60%  ││  0x00007ff22073b6ef: test   DWORD PTR [r10],eax  ;   {poll}
  0.40%  ││  0x00007ff22073b6f2: test   r11d,r11d
         │╰  0x00007ff22073b6f5: je     0x00007ff22073b6c0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@36 (line 193)
         ↘   0x00007ff22073b6f7: movabs r10,0x7ff238bb6a00
             0x00007ff22073b701: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@37 (line 193)
             0x00007ff22073b704: mov    r10,QWORD PTR [rsp+0x30]
             0x00007ff22073b709: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@52 (line 195)
             0x00007ff22073b70d: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@40 (line 193)
....................................................................................................
 44.38%  <total for region 2>

....[Hottest Regions]...............................................................................
 50.68%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 502 (55 bytes) 
 44.38%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 530 (50 bytes) 
  2.47%              kernel  [unknown] (6 bytes) 
  0.17%              kernel  [unknown] (1 bytes) 
  0.15%              kernel  [unknown] (19 bytes) 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (47 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (5 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (6 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (18 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%        libc-2.28.so  _IO_str_init_static_internal (14 bytes) 
  0.04%        libc-2.28.so  __strlen_avx2 (17 bytes) 
  0.04%  libpthread-2.28.so  __libc_write (0 bytes) 
  0.04%          ld-2.28.so  __tls_get_addr (22 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.46%  <...other 76 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 50.68%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 502 
 44.38%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 530 
  3.98%              kernel  [unknown] 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%        libc-2.28.so  __strlen_avx2 
  0.04%        libc-2.28.so  _IO_fwrite 
  0.04%        libc-2.28.so  _IO_str_init_static_internal 
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%          ld-2.28.so  __tls_get_addr 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.02%  libpthread-2.28.so  __pthread_mutex_unlock 
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%        libc-2.28.so  _IO_fflush 
  0.02%         c1, level 3  java.lang.Thread::interrupted, version 534 
  0.02%           libjvm.so  _ZN10LIR_OprPtr10as_addressEv 
  0.02%           libjvm.so  _ZN8ValueMapC1EPS_ 
  0.02%           libjvm.so  _ZN12GraphBuilder27iterate_bytecodes_for_blockEi 
  0.29%  <...other 15 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 95.06%         c2, level 4
  3.98%              kernel
  0.42%           libjvm.so
  0.27%        libc-2.28.so
  0.11%      hsdis-amd64.so
  0.06%  libpthread-2.28.so
  0.04%         interpreter
  0.04%          ld-2.28.so
  0.02%         c1, level 3
....................................................................................................
100.00%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsJavaBenchmark.default2Arguments
# Parameters: (delta = 1, factor = 2, value = 8)

# Run progress: 16.67% complete, ETA 00:03:12
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.854 ns/op
# Warmup Iteration   2: 2.557 ns/op
# Warmup Iteration   3: 2.678 ns/op
# Warmup Iteration   4: 2.521 ns/op
# Warmup Iteration   5: 2.523 ns/op
Iteration   1: 2.529 ns/op
Iteration   2: 2.525 ns/op
Iteration   3: 2.510 ns/op
Iteration   4: 2.505 ns/op
Iteration   5: 2.520 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 22.22% complete, ETA 00:02:58
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.753 ns/op
# Warmup Iteration   2: 2.647 ns/op
# Warmup Iteration   3: 2.466 ns/op
# Warmup Iteration   4: 2.459 ns/op
# Warmup Iteration   5: 2.450 ns/op
Iteration   1: 2.459 ns/op
Iteration   2: 2.492 ns/op
Iteration   3: 2.466 ns/op
Iteration   4: 2.450 ns/op
Iteration   5: 2.455 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 27.78% complete, ETA 00:02:45
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.729 ns/op
# Warmup Iteration   2: 2.543 ns/op
# Warmup Iteration   3: 2.580 ns/op
# Warmup Iteration   4: 2.563 ns/op
# Warmup Iteration   5: 2.438 ns/op
Iteration   1: 2.449 ns/op
Iteration   2: 2.477 ns/op
Iteration   3: 2.446 ns/op
Iteration   4: 2.453 ns/op
Iteration   5: 2.486 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.default2Arguments":
  2.481 ±(99.9%) 0.032 ns/op [Average]
  (min, avg, max) = (2.446, 2.481, 2.529), stdev = 0.030
  CI (99.9%): [2.449, 2.514] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.default2Arguments:·asm":
PrintAssembly processed: 140004 total address lines.
Perf output processed (skipped 7.010 seconds):
 Column 1: cycles (5277 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 487 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f72a87370a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f72a87370a4: movabs r12,0x800000000
            0x00007f72a87370ae: add    r10,r12
            0x00007f72a87370b1: xor    r12,r12
            0x00007f72a87370b4: cmp    rax,r10
            0x00007f72a87370b7: jne    0x00007f72a0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f72a87370bd: data16 xchg ax,ax
          [Verified Entry Point]
  8.13%     0x00007f72a87370c0: mov    DWORD PTR [rsp-0x14000],eax
  4.96%     0x00007f72a87370c7: push   rbp
  3.37%     0x00007f72a87370c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.34%     0x00007f72a87370cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  3.34%     0x00007f72a87370d3: mov    r8d,edx
  3.77%     0x00007f72a87370d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  4.07%     0x00007f72a87370dd: mov    r9d,edx
  1.69%     0x00007f72a87370e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.94%     0x00007f72a87370e3: cmp    r9d,r8d
         ╭  0x00007f72a87370e6: je     0x00007f72a87370f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.06%  │  0x00007f72a87370e8: add    rsp,0x20
  3.77%  │  0x00007f72a87370ec: pop    rbp
  1.95%  │  0x00007f72a87370ed: mov    r10,QWORD PTR [r15+0x108]
  2.99%  │  0x00007f72a87370f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.15%  │  0x00007f72a87370f7: ret    
         ↘  0x00007f72a87370f8: mov    rbp,rsi
            0x00007f72a87370fb: mov    DWORD PTR [rsp],edx
            0x00007f72a87370fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f72a8737103: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f72a8737108: mov    esi,0xffffff4d
            0x00007f72a873710d: xchg   ax,ax
            0x00007f72a873710f: call   0x00007f72a0c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 54.54%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 517 (46 bytes) 

             0x00007f72a873a418: mov    r10,QWORD PTR [rsp]
             0x00007f72a873a41c: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f72a873a4d6
             0x00007f72a873a424: mov    ebp,0x1
             0x00007f72a873a429: test   r11d,r11d
         ╭   0x00007f72a873a42c: jne    0x00007f72a873a463  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
         │   0x00007f72a873a42e: xchg   ax,ax              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@36 (line 193)
  3.51%  │↗  0x00007f72a873a430: mov    r10,QWORD PTR [rsp+0x40]
  4.23%  ││  0x00007f72a873a435: mov    edx,DWORD PTR [r10+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::default2Arguments@2 (line 47)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@17 (line 190)
  5.50%  ││  0x00007f72a873a439: mov    rsi,QWORD PTR [rsp+0x38]
  1.53%  ││  0x00007f72a873a43e: nop
  2.60%  ││  0x00007f72a873a43f: call   0x00007f72a0c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  4.96%  ││  0x00007f72a873a444: mov    r10,QWORD PTR [rsp]
  3.98%  ││  0x00007f72a873a448: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
  5.04%  ││  0x00007f72a873a450: mov    r11,QWORD PTR [r15+0x108]
  4.42%  ││  0x00007f72a873a457: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
  1.10%  ││  0x00007f72a873a45b: test   DWORD PTR [r11],eax  ;   {poll}
  2.58%  ││  0x00007f72a873a45e: test   r10d,r10d
         │╰  0x00007f72a873a461: je     0x00007f72a873a430  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f72a873a463: movabs r10,0x7f72bee95a00
             0x00007f72a873a46d: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@37 (line 193)
             0x00007f72a873a470: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f72a873a475: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@52 (line 195)
             0x00007f72a873a479: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 39.44%  <total for region 2>

....[Hottest Regions]...............................................................................
 54.54%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 487 (55 bytes) 
 39.44%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 517 (46 bytes) 
  2.60%              kernel  [unknown] (6 bytes) 
  0.32%              kernel  [unknown] (36 bytes) 
  0.32%              kernel  [unknown] (1 bytes) 
  0.13%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (41 bytes) 
  0.09%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (13 bytes) 
  0.06%              kernel  [unknown] (26 bytes) 
  0.06%              kernel  [unknown] (19 bytes) 
  0.06%              kernel  [unknown] (15 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%         interpreter  method entry point (kind = zerolocals)  (11 bytes) 
  0.06%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ (23 bytes) 
  0.04%              kernel  [unknown] (15 bytes) 
  0.04%              kernel  [unknown] (26 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  1.90%  <...other 89 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 54.54%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 487 
 39.44%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 517 
  4.76%              kernel  [unknown] 
  0.13%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.09%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.08%        libc-2.28.so  __strchr_avx2 
  0.08%         interpreter  method entry point (kind = zerolocals)  
  0.08%        libc-2.28.so  vfprintf 
  0.06%        libc-2.28.so  _IO_str_init_static_internal 
  0.04%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.04%        libc-2.28.so  __stpcpy_sse2_unaligned 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.04%        libc-2.28.so  __libc_disable_asynccancel 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%        libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.02%      perf-16847.map  [unknown] 
  0.02%         interpreter  fast_iload  224 fast_iload  
  0.02%        libc-2.28.so  _IO_file_sync@@GLIBC_2.2.5 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%           libjvm.so  _ZNK12ObjAllocator10initializeEP8HeapWord 
  0.44%  <...other 23 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 93.97%         c2, level 4
  4.76%              kernel
  0.61%           libjvm.so
  0.42%        libc-2.28.so
  0.13%         interpreter
  0.04%      hsdis-amd64.so
  0.02%                    
  0.02%  libpthread-2.28.so
  0.02%      perf-16847.map
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 142583 total address lines.
Perf output processed (skipped 7.160 seconds):
 Column 1: cycles (5253 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 494 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f57cc7370a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f57cc7370a4: movabs r12,0x800000000
            0x00007f57cc7370ae: add    r10,r12
            0x00007f57cc7370b1: xor    r12,r12
            0x00007f57cc7370b4: cmp    rax,r10
            0x00007f57cc7370b7: jne    0x00007f57c4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f57cc7370bd: data16 xchg ax,ax
          [Verified Entry Point]
  7.08%     0x00007f57cc7370c0: mov    DWORD PTR [rsp-0x14000],eax
  5.18%     0x00007f57cc7370c7: push   rbp
  3.39%     0x00007f57cc7370c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.43%     0x00007f57cc7370cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  3.16%     0x00007f57cc7370d3: mov    r8d,edx
  3.48%     0x00007f57cc7370d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  4.09%     0x00007f57cc7370dd: mov    r9d,edx
  1.64%     0x00007f57cc7370e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.89%     0x00007f57cc7370e3: cmp    r9d,r8d
         ╭  0x00007f57cc7370e6: je     0x00007f57cc7370f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.92%  │  0x00007f57cc7370e8: add    rsp,0x20
  4.05%  │  0x00007f57cc7370ec: pop    rbp
  2.38%  │  0x00007f57cc7370ed: mov    r10,QWORD PTR [r15+0x108]
  2.84%  │  0x00007f57cc7370f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.42%  │  0x00007f57cc7370f7: ret    
         ↘  0x00007f57cc7370f8: mov    rbp,rsi
            0x00007f57cc7370fb: mov    DWORD PTR [rsp],edx
            0x00007f57cc7370fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f57cc737103: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f57cc737108: mov    esi,0xffffff4d
            0x00007f57cc73710d: xchg   ax,ax
            0x00007f57cc73710f: call   0x00007f57c4c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 53.95%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 523 (46 bytes) 

             0x00007f57cc739c98: mov    r10,QWORD PTR [rsp]
             0x00007f57cc739c9c: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f57cc739d56
             0x00007f57cc739ca4: mov    ebp,0x1
             0x00007f57cc739ca9: test   r11d,r11d
         ╭   0x00007f57cc739cac: jne    0x00007f57cc739ce3  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
         │   0x00007f57cc739cae: xchg   ax,ax              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@36 (line 193)
  4.05%  │↗  0x00007f57cc739cb0: mov    r10,QWORD PTR [rsp+0x40]
  4.23%  ││  0x00007f57cc739cb5: mov    edx,DWORD PTR [r10+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::default2Arguments@2 (line 47)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@17 (line 190)
  5.75%  ││  0x00007f57cc739cb9: mov    rsi,QWORD PTR [rsp+0x38]
  1.52%  ││  0x00007f57cc739cbe: nop
  2.91%  ││  0x00007f57cc739cbf: call   0x00007f57c4c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  5.04%  ││  0x00007f57cc739cc4: mov    r10,QWORD PTR [rsp]
  3.54%  ││  0x00007f57cc739cc8: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
  5.14%  ││  0x00007f57cc739cd0: mov    r11,QWORD PTR [r15+0x108]
  4.40%  ││  0x00007f57cc739cd7: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
  1.29%  ││  0x00007f57cc739cdb: test   DWORD PTR [r11],eax  ;   {poll}
  2.61%  ││  0x00007f57cc739cde: test   r10d,r10d
         │╰  0x00007f57cc739ce1: je     0x00007f57cc739cb0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f57cc739ce3: movabs r10,0x7f57e17d8a00
             0x00007f57cc739ced: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@37 (line 193)
             0x00007f57cc739cf0: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f57cc739cf5: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@52 (line 195)
             0x00007f57cc739cf9: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 40.49%  <total for region 2>

....[Hottest Regions]...............................................................................
 53.95%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 494 (55 bytes) 
 40.49%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 523 (46 bytes) 
  2.59%              kernel  [unknown] (6 bytes) 
  0.42%              kernel  [unknown] (45 bytes) 
  0.27%              kernel  [unknown] (0 bytes) 
  0.13%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (26 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (9 bytes) 
  0.06%              kernel  [unknown] (3 bytes) 
  0.06%          ld-2.28.so  __tls_get_addr (22 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (3 bytes) 
  0.04%              kernel  [unknown] (19 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (1 bytes) 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ (0 bytes) 
  0.04%        libc-2.28.so  _IO_fwrite (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.54%  <...other 81 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 53.95%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 494 
 40.49%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 523 
  4.40%              kernel  [unknown] 
  0.13%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%        libc-2.28.so  vfprintf 
  0.06%          ld-2.28.so  __tls_get_addr 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%        libc-2.28.so  _IO_fwrite 
  0.04%           libjvm.so  _Z23resource_allocate_bytesmN17AllocFailStrategy13AllocFailEnumE 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%        libc-2.28.so  __memmove_avx_unaligned_erms 
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%      hsdis-amd64.so  oappend 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%        libc-2.28.so  _IO_fflush 
  0.02%           libjvm.so  _Copy_arrayof_conjoint_jints 
  0.02%      hsdis-amd64.so  putop 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%        libc-2.28.so  __printf_fp 
  0.53%  <...other 28 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.44%         c2, level 4
  4.40%              kernel
  0.63%           libjvm.so
  0.25%        libc-2.28.so
  0.11%      hsdis-amd64.so
  0.08%         interpreter
  0.06%          ld-2.28.so
  0.02%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 138125 total address lines.
Perf output processed (skipped 6.986 seconds):
 Column 1: cycles (5260 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 492 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f364c7384a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f364c7384a4: movabs r12,0x800000000
            0x00007f364c7384ae: add    r10,r12
            0x00007f364c7384b1: xor    r12,r12
            0x00007f364c7384b4: cmp    rax,r10
            0x00007f364c7384b7: jne    0x00007f3644c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f364c7384bd: data16 xchg ax,ax
          [Verified Entry Point]
  7.98%     0x00007f364c7384c0: mov    DWORD PTR [rsp-0x14000],eax
  4.37%     0x00007f364c7384c7: push   rbp
  3.63%     0x00007f364c7384c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.40%     0x00007f364c7384cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  3.08%     0x00007f364c7384d3: mov    r8d,edx
  3.76%     0x00007f364c7384d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  4.11%     0x00007f364c7384dd: mov    r9d,edx
  1.73%     0x00007f364c7384e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.98%     0x00007f364c7384e3: cmp    r9d,r8d
         ╭  0x00007f364c7384e6: je     0x00007f364c7384f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.13%  │  0x00007f364c7384e8: add    rsp,0x20
  3.67%  │  0x00007f364c7384ec: pop    rbp
  2.13%  │  0x00007f364c7384ed: mov    r10,QWORD PTR [r15+0x108]
  3.46%  │  0x00007f364c7384f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.98%  │  0x00007f364c7384f7: ret    
         ↘  0x00007f364c7384f8: mov    rbp,rsi
            0x00007f364c7384fb: mov    DWORD PTR [rsp],edx
            0x00007f364c7384fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f364c738503: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f364c738508: mov    esi,0xffffff4d
            0x00007f364c73850d: xchg   ax,ax
            0x00007f364c73850f: call   0x00007f3644c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 55.42%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 525 (46 bytes) 

             0x00007f364c73b818: mov    r10,QWORD PTR [rsp]
             0x00007f364c73b81c: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f364c73b8d6
             0x00007f364c73b824: mov    ebp,0x1
             0x00007f364c73b829: test   r11d,r11d
         ╭   0x00007f364c73b82c: jne    0x00007f364c73b863  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
         │   0x00007f364c73b82e: xchg   ax,ax              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@36 (line 193)
  3.97%  │↗  0x00007f364c73b830: mov    r10,QWORD PTR [rsp+0x40]
  4.01%  ││  0x00007f364c73b835: mov    edx,DWORD PTR [r10+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::default2Arguments@2 (line 47)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@17 (line 190)
  5.38%  ││  0x00007f364c73b839: mov    rsi,QWORD PTR [rsp+0x38]
  1.37%  ││  0x00007f364c73b83e: nop
  3.10%  ││  0x00007f364c73b83f: call   0x00007f3644c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  4.62%  ││  0x00007f364c73b844: mov    r10,QWORD PTR [rsp]
  3.61%  ││  0x00007f364c73b848: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
  4.77%  ││  0x00007f364c73b850: mov    r11,QWORD PTR [r15+0x108]
  3.92%  ││  0x00007f364c73b857: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
  1.39%  ││  0x00007f364c73b85b: test   DWORD PTR [r11],eax  ;   {poll}
  2.95%  ││  0x00007f364c73b85e: test   r10d,r10d
         │╰  0x00007f364c73b861: je     0x00007f364c73b830  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f364c73b863: movabs r10,0x7f36627bda00
             0x00007f364c73b86d: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@37 (line 193)
             0x00007f364c73b870: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f364c73b875: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@52 (line 195)
             0x00007f364c73b879: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 39.09%  <total for region 2>

....[Hottest Regions]...............................................................................
 55.42%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 492 (55 bytes) 
 39.09%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 525 (46 bytes) 
  2.09%              kernel  [unknown] (6 bytes) 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (52 bytes) 
  0.15%              kernel  [unknown] (1 bytes) 
  0.11%              kernel  [unknown] (39 bytes) 
  0.10%              kernel  [unknown] (7 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (29 bytes) 
  0.06%              kernel  [unknown] (2 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%        libc-2.28.so  syscall (8 bytes) 
  0.04%              kernel  [unknown] (9 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm (23 bytes) 
  2.15%  <...other 109 warm regions...>
....................................................................................................
 99.92%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 55.42%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 492 
 39.09%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 525 
  3.75%              kernel  [unknown] 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.13%        libc-2.28.so  vfprintf 
  0.06%        libc-2.28.so  __strchr_avx2 
  0.06%        libc-2.28.so  syscall 
  0.06%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.06%           libjvm.so  _Z23resource_allocate_bytesmN17AllocFailStrategy13AllocFailEnumE 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%        libc-2.28.so  __strchrnul_avx2 
  0.04%        libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.04%        libc-2.28.so  __memmove_avx_unaligned_erms 
  0.04%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.04%           libjvm.so  _ZN12outputStream5printEPKcz 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.02%           libjvm.so  _ZN7VMError17is_error_reportedEv 
  0.02%        libc-2.28.so  _IO_file_sync@@GLIBC_2.2.5 
  0.72%  <...other 38 warm methods...>
....................................................................................................
 99.92%  <totals>

....[Distribution by Source]........................................................................
 94.51%         c2, level 4
  3.75%              kernel
  0.91%           libjvm.so
  0.49%        libc-2.28.so
  0.10%      hsdis-amd64.so
  0.10%         interpreter
  0.06%         c1, level 3
  0.02%  libpthread-2.28.so
....................................................................................................
 99.92%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsJavaBenchmark.noDefault
# Parameters: (delta = 1, factor = 2, value = 8)

# Run progress: 33.33% complete, ETA 00:02:32
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.808 ns/op
# Warmup Iteration   2: 2.640 ns/op
# Warmup Iteration   3: 2.532 ns/op
# Warmup Iteration   4: 2.537 ns/op
# Warmup Iteration   5: 2.534 ns/op
Iteration   1: 2.541 ns/op
Iteration   2: 2.552 ns/op
Iteration   3: 2.556 ns/op
Iteration   4: 2.544 ns/op
Iteration   5: 2.565 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 38.89% complete, ETA 00:02:19
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.261 ns/op
# Warmup Iteration   2: 2.938 ns/op
# Warmup Iteration   3: 3.039 ns/op
# Warmup Iteration   4: 2.895 ns/op
# Warmup Iteration   5: 2.555 ns/op
Iteration   1: 2.907 ns/op
Iteration   2: 2.920 ns/op
Iteration   3: 2.893 ns/op
Iteration   4: 2.893 ns/op
Iteration   5: 2.911 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 44.44% complete, ETA 00:02:06
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.169 ns/op
# Warmup Iteration   2: 2.888 ns/op
# Warmup Iteration   3: 3.035 ns/op
# Warmup Iteration   4: 2.922 ns/op
# Warmup Iteration   5: 2.901 ns/op
Iteration   1: 2.828 ns/op
Iteration   2: 2.853 ns/op
Iteration   3: 2.846 ns/op
Iteration   4: 2.827 ns/op
Iteration   5: 2.847 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.noDefault":
  2.766 ±(99.9%) 0.170 ns/op [Average]
  (min, avg, max) = (2.541, 2.766, 2.920), stdev = 0.159
  CI (99.9%): [2.595, 2.936] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsJavaBenchmark.noDefault:·asm":
PrintAssembly processed: 142810 total address lines.
Perf output processed (skipped 7.067 seconds):
 Column 1: cycles (5272 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 523 (54 bytes) 

             0x00007fe3f473bca4: mov    r10,QWORD PTR [rsp]
             0x00007fe3f473bca8: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fe3f473bd6e
             0x00007fe3f473bcb0: mov    ebp,0x1
             0x00007fe3f473bcb5: test   r11d,r11d
         ╭   0x00007fe3f473bcb8: jne    0x00007fe3f473bcfb  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
         │   0x00007fe3f473bcba: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@36 (line 193)
  4.14%  │↗  0x00007fe3f473bcc0: mov    r10,QWORD PTR [rsp+0x40]
  0.13%  ││  0x00007fe3f473bcc5: mov    edx,DWORD PTR [r10+0x10]
  6.05%  ││  0x00007fe3f473bcc9: imul   edx,DWORD PTR [r10+0xc]
 11.74%  ││  0x00007fe3f473bcce: add    edx,DWORD PTR [r10+0x14]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@4 (line 61)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::noDefault@13 (line 57)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@17 (line 190)
  7.11%  ││  0x00007fe3f473bcd2: mov    rsi,QWORD PTR [rsp+0x38]
         ││  0x00007fe3f473bcd7: call   0x00007fe3ecc68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  0.83%  ││  0x00007fe3f473bcdc: mov    r10,QWORD PTR [rsp]
  6.60%  ││  0x00007fe3f473bce0: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
  4.29%  ││  0x00007fe3f473bce8: mov    r10,QWORD PTR [r15+0x108]
  0.27%  ││  0x00007fe3f473bcef: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
  5.41%  ││  0x00007fe3f473bcf3: test   DWORD PTR [r10],eax  ;   {poll}
  1.18%  ││  0x00007fe3f473bcf6: test   r11d,r11d
         │╰  0x00007fe3f473bcf9: je     0x00007fe3f473bcc0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@36 (line 193)
         ↘   0x00007fe3f473bcfb: movabs r10,0x7fe40a563a00
             0x00007fe3f473bd05: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@37 (line 193)
             0x00007fe3f473bd08: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fe3f473bd0d: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@52 (line 195)
             0x00007fe3f473bd11: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@40 (line 193)
....................................................................................................
 47.74%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 497 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fe3f4739820: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fe3f4739824: movabs r12,0x800000000
            0x00007fe3f473982e: add    r10,r12
            0x00007fe3f4739831: xor    r12,r12
            0x00007fe3f4739834: cmp    rax,r10
            0x00007fe3f4739837: jne    0x00007fe3ecc68c80  ;   {runtime_call ic_miss_stub}
            0x00007fe3f473983d: data16 xchg ax,ax
          [Verified Entry Point]
  2.86%     0x00007fe3f4739840: mov    DWORD PTR [rsp-0x14000],eax
  7.72%     0x00007fe3f4739847: push   rbp
  3.09%     0x00007fe3f4739848: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  7.51%     0x00007fe3f473984c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.04%     0x00007fe3f4739853: mov    r8d,edx
  2.81%     0x00007fe3f4739856: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.02%     0x00007fe3f473985d: mov    r9d,edx
  8.27%     0x00007fe3f4739860: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.02%     0x00007fe3f4739863: cmp    r9d,r8d
         ╭  0x00007fe3f4739866: je     0x00007fe3f4739878  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.19%  │  0x00007fe3f4739868: add    rsp,0x20
         │  0x00007fe3f473986c: pop    rbp
  7.45%  │  0x00007fe3f473986d: mov    r10,QWORD PTR [r15+0x108]
  0.02%  │  0x00007fe3f4739874: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.47%  │  0x00007fe3f4739877: ret    
         ↘  0x00007fe3f4739878: mov    rbp,rsi
            0x00007fe3f473987b: mov    DWORD PTR [rsp],edx
            0x00007fe3f473987e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fe3f4739883: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fe3f4739888: mov    esi,0xffffff4d
            0x00007fe3f473988d: xchg   ax,ax
            0x00007fe3f473988f: call   0x00007fe3ecc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 46.47%  <total for region 2>

....[Hottest Regions]...............................................................................
 47.74%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 523 (54 bytes) 
 46.47%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 497 (55 bytes) 
  2.66%              kernel  [unknown] (6 bytes) 
  0.27%              kernel  [unknown] (30 bytes) 
  0.19%              kernel  [unknown] (0 bytes) 
  0.11%              kernel  [unknown] (6 bytes) 
  0.08%              kernel  [unknown] (17 bytes) 
  0.06%              kernel  [unknown] (17 bytes) 
  0.06%              kernel  [unknown] (9 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb (27 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (6 bytes) 
  0.04%              kernel  [unknown] (32 bytes) 
  0.04%              kernel  [unknown] (29 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (1 bytes) 
  0.04%              kernel  [unknown] (9 bytes) 
  1.90%  <...other 96 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 47.74%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 523 
 46.47%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 497 
  4.65%              kernel  [unknown] 
  0.08%      hsdis-amd64.so  print_insn 
  0.06%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.04%      hsdis-amd64.so  putop 
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%  libpthread-2.28.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.04%        libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.04%      hsdis-amd64.so  ckprefix 
  0.04%        libc-2.28.so  __strlen_avx2 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.02%           libjvm.so  _ZN12LinkResolver23resolve_invokeinterfaceER8CallInfo6HandleRK18constantPoolHandleiP6Thread 
  0.02%    Unknown, level 0  java.lang.Thread::isInterrupted, version 526 
  0.02%         c1, level 3  java.io.ObjectOutputStream::writeObject0, version 550 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%        libc-2.28.so  __libc_enable_asynccancel 
  0.02%         c2, level 4  java.lang.String::coder, version 181 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.55%  <...other 29 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.23%         c2, level 4
  4.65%              kernel
  0.51%           libjvm.so
  0.21%        libc-2.28.so
  0.17%      hsdis-amd64.so
  0.08%  libpthread-2.28.so
  0.04%         interpreter
  0.02%        runtime stub
  0.02%         c1, level 1
  0.02%         c1, level 3
  0.02%    Unknown, level 0
  0.02%      perf-16965.map
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 140353 total address lines.
Perf output processed (skipped 7.017 seconds):
 Column 1: cycles (5282 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 517 (54 bytes) 

             0x00007f855473b2a4: mov    r10,QWORD PTR [rsp]
             0x00007f855473b2a8: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f855473b36e
             0x00007f855473b2b0: mov    ebp,0x1
             0x00007f855473b2b5: test   r11d,r11d
         ╭   0x00007f855473b2b8: jne    0x00007f855473b2fb  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
         │   0x00007f855473b2ba: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@36 (line 193)
  4.70%  │↗  0x00007f855473b2c0: mov    r10,QWORD PTR [rsp+0x40]
  0.17%  ││  0x00007f855473b2c5: mov    edx,DWORD PTR [r10+0x10]
  6.61%  ││  0x00007f855473b2c9: imul   edx,DWORD PTR [r10+0xc]
 11.95%  ││  0x00007f855473b2ce: add    edx,DWORD PTR [r10+0x14]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@4 (line 61)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::noDefault@13 (line 57)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@17 (line 190)
  7.46%  ││  0x00007f855473b2d2: mov    rsi,QWORD PTR [rsp+0x38]
         ││  0x00007f855473b2d7: call   0x00007f854cc68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  0.66%  ││  0x00007f855473b2dc: mov    r10,QWORD PTR [rsp]
  6.63%  ││  0x00007f855473b2e0: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
  4.20%  ││  0x00007f855473b2e8: mov    r10,QWORD PTR [r15+0x108]
  0.30%  ││  0x00007f855473b2ef: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
  5.57%  ││  0x00007f855473b2f3: test   DWORD PTR [r10],eax  ;   {poll}
  0.95%  ││  0x00007f855473b2f6: test   r11d,r11d
         │╰  0x00007f855473b2f9: je     0x00007f855473b2c0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@36 (line 193)
         ↘   0x00007f855473b2fb: movabs r10,0x7f856a92ea00
             0x00007f855473b305: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@37 (line 193)
             0x00007f855473b308: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f855473b30d: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@52 (line 195)
             0x00007f855473b311: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@40 (line 193)
....................................................................................................
 49.19%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 484 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f8554737a20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f8554737a24: movabs r12,0x800000000
            0x00007f8554737a2e: add    r10,r12
            0x00007f8554737a31: xor    r12,r12
            0x00007f8554737a34: cmp    rax,r10
            0x00007f8554737a37: jne    0x00007f854cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007f8554737a3d: data16 xchg ax,ax
          [Verified Entry Point]
  2.76%     0x00007f8554737a40: mov    DWORD PTR [rsp-0x14000],eax
  7.21%     0x00007f8554737a47: push   rbp
  2.76%     0x00007f8554737a48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  7.27%     0x00007f8554737a4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.02%     0x00007f8554737a53: mov    r8d,edx
  3.07%     0x00007f8554737a56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.02%     0x00007f8554737a5d: mov    r9d,edx
  7.31%     0x00007f8554737a60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.02%     0x00007f8554737a63: cmp    r9d,r8d
         ╭  0x00007f8554737a66: je     0x00007f8554737a78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  2.84%  │  0x00007f8554737a68: add    rsp,0x20
         │  0x00007f8554737a6c: pop    rbp
  7.74%  │  0x00007f8554737a6d: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007f8554737a74: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.48%  │  0x00007f8554737a77: ret    
         ↘  0x00007f8554737a78: mov    rbp,rsi
            0x00007f8554737a7b: mov    DWORD PTR [rsp],edx
            0x00007f8554737a7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f8554737a83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f8554737a88: mov    esi,0xffffff4d
            0x00007f8554737a8d: xchg   ax,ax
            0x00007f8554737a8f: call   0x00007f854cc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 44.51%  <total for region 2>

....[Hottest Regions]...............................................................................
 49.19%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 517 (54 bytes) 
 44.51%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 484 (55 bytes) 
  2.08%              kernel  [unknown] (6 bytes) 
  0.28%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.21%              kernel  [unknown] (39 bytes) 
  0.21%              kernel  [unknown] (3 bytes) 
  0.09%        libc-2.28.so  syscall (25 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (16 bytes) 
  0.06%              kernel  [unknown] (33 bytes) 
  0.06%      hsdis-amd64.so  ckprefix (27 bytes) 
  0.06%        libc-2.28.so  _IO_fwrite (0 bytes) 
  0.06%          ld-2.28.so  __tls_get_addr (33 bytes) 
  0.04%              kernel  [unknown] (26 bytes) 
  0.04%              kernel  [unknown] (3 bytes) 
  0.04%              kernel  [unknown] (6 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (13 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  2.80%  <...other 136 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 49.19%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 517 
 44.51%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 484 
  4.49%              kernel  [unknown] 
  0.28%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.11%        libc-2.28.so  vfprintf 
  0.09%        libc-2.28.so  syscall 
  0.09%      hsdis-amd64.so  print_insn 
  0.08%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%        libc-2.28.so  _IO_fwrite 
  0.06%          ld-2.28.so  __tls_get_addr 
  0.06%  libpthread-2.28.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.06%      hsdis-amd64.so  ckprefix 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.06%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.04%        libc-2.28.so  _IO_vsnprintf 
  0.04%         interpreter  invokestatic  184 invokestatic  
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%           libjvm.so  _ZN9xmlStream10begin_elemEPKcz 
  0.02%    Unknown, level 0  java.lang.System::arraycopy, version 70 
  0.02%           libjvm.so  _ZNVK8Metadata8is_klassEv 
  0.62%  <...other 33 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 93.70%         c2, level 4
  4.49%              kernel
  0.87%           libjvm.so
  0.40%        libc-2.28.so
  0.21%      hsdis-amd64.so
  0.15%         interpreter
  0.09%  libpthread-2.28.so
  0.06%          ld-2.28.so
  0.02%    Unknown, level 0
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 141736 total address lines.
Perf output processed (skipped 7.166 seconds):
 Column 1: cycles (5270 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 526 (54 bytes) 

             0x00007f7ea073bfa4: mov    r10,QWORD PTR [rsp]
             0x00007f7ea073bfa8: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f7ea073c06e
             0x00007f7ea073bfb0: mov    ebp,0x1
             0x00007f7ea073bfb5: test   r11d,r11d
         ╭   0x00007f7ea073bfb8: jne    0x00007f7ea073bffb  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
         │   0x00007f7ea073bfba: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@36 (line 193)
  4.00%  │↗  0x00007f7ea073bfc0: mov    r10,QWORD PTR [rsp+0x40]
  0.17%  ││  0x00007f7ea073bfc5: mov    edx,DWORD PTR [r10+0x10]
  6.07%  ││  0x00007f7ea073bfc9: imul   edx,DWORD PTR [r10+0xc]
 11.94%  ││  0x00007f7ea073bfce: add    edx,DWORD PTR [r10+0x14]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::expression@4 (line 61)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsJavaBenchmark::noDefault@13 (line 57)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@17 (line 190)
  7.34%  ││  0x00007f7ea073bfd2: mov    rsi,QWORD PTR [rsp+0x38]
  0.02%  ││  0x00007f7ea073bfd7: call   0x00007f7e98c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  0.76%  ││  0x00007f7ea073bfdc: mov    r10,QWORD PTR [rsp]
  6.91%  ││  0x00007f7ea073bfe0: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
  4.97%  ││  0x00007f7ea073bfe8: mov    r10,QWORD PTR [r15+0x108]
  0.23%  ││  0x00007f7ea073bfef: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
  4.84%  ││  0x00007f7ea073bff3: test   DWORD PTR [r10],eax  ;   {poll}
  1.10%  ││  0x00007f7ea073bff6: test   r11d,r11d
         │╰  0x00007f7ea073bff9: je     0x00007f7ea073bfc0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@36 (line 193)
         ↘   0x00007f7ea073bffb: movabs r10,0x7f7eb6258a00
             0x00007f7ea073c005: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@37 (line 193)
             0x00007f7ea073c008: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f7ea073c00d: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@52 (line 195)
             0x00007f7ea073c011: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@40 (line 193)
....................................................................................................
 48.35%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 498 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f7ea0738920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f7ea0738924: movabs r12,0x800000000
            0x00007f7ea073892e: add    r10,r12
            0x00007f7ea0738931: xor    r12,r12
            0x00007f7ea0738934: cmp    rax,r10
            0x00007f7ea0738937: jne    0x00007f7e98c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f7ea073893d: data16 xchg ax,ax
          [Verified Entry Point]
  3.07%     0x00007f7ea0738940: mov    DWORD PTR [rsp-0x14000],eax
  7.42%     0x00007f7ea0738947: push   rbp
  3.13%     0x00007f7ea0738948: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  7.61%     0x00007f7ea073894c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.02%     0x00007f7ea0738953: mov    r8d,edx
  3.15%     0x00007f7ea0738956: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
            0x00007f7ea073895d: mov    r9d,edx
  6.81%     0x00007f7ea0738960: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
            0x00007f7ea0738963: cmp    r9d,r8d
         ╭  0x00007f7ea0738966: je     0x00007f7ea0738978  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  2.96%  │  0x00007f7ea0738968: add    rsp,0x20
         │  0x00007f7ea073896c: pop    rbp
  8.06%  │  0x00007f7ea073896d: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007f7ea0738974: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.24%  │  0x00007f7ea0738977: ret    
         ↘  0x00007f7ea0738978: mov    rbp,rsi
            0x00007f7ea073897b: mov    DWORD PTR [rsp],edx
            0x00007f7ea073897e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f7ea0738983: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f7ea0738988: mov    esi,0xffffff4d
            0x00007f7ea073898d: xchg   ax,ax
            0x00007f7ea073898f: call   0x00007f7e98c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 45.48%  <total for region 2>

....[Hottest Regions]...............................................................................
 48.35%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 526 (54 bytes) 
 45.48%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 498 (55 bytes) 
  3.15%              kernel  [unknown] (6 bytes) 
  0.25%              kernel  [unknown] (30 bytes) 
  0.23%              kernel  [unknown] (3 bytes) 
  0.13%              kernel  [unknown] (43 bytes) 
  0.11%              kernel  [unknown] (0 bytes) 
  0.11%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (28 bytes) 
  0.08%              kernel  [unknown] (22 bytes) 
  0.08%              kernel  [unknown] (21 bytes) 
  0.08%        libc-2.28.so  _IO_fwrite (0 bytes) 
  0.08%        libc-2.28.so  __strchr_avx2 (2 bytes) 
  0.06%              kernel  [unknown] (1 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (16 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  0.04%              kernel  [unknown] (16 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  1.52%  <...other 75 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 48.35%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsJavaBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 526 
 45.48%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 498 
  5.18%              kernel  [unknown] 
  0.11%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.09%        libc-2.28.so  __strchr_avx2 
  0.08%        libc-2.28.so  _IO_fwrite 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.02%           libjvm.so  _ZNK12MemAllocator8allocateEv 
  0.02%        libc-2.28.so  _IO_fflush 
  0.02%           libjvm.so  _ZN13BiasedLocking17revoke_and_rebiasE6HandlebP6Thread 
  0.02%         interpreter  fast_aputfield  211 fast_aputfield  
  0.02%        libc-2.28.so  fclose@@GLIBC_2.2.5 
  0.02%      hsdis-amd64.so  print_insn 
  0.02%        libc-2.28.so  _IO_do_write@@GLIBC_2.2.5 
  0.02%      hsdis-amd64.so  hsdis_read_memory_func 
  0.02%        libc-2.28.so  __strlen_avx2 
  0.32%  <...other 17 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 93.83%         c2, level 4
  5.18%              kernel
  0.42%           libjvm.so
  0.40%        libc-2.28.so
  0.06%      hsdis-amd64.so
  0.06%         interpreter
  0.04%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsKtBenchmark.default1Argument
# Parameters: (delta = 1, factor = 2, value = 8)

# Run progress: 50.00% complete, ETA 00:01:53
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.550 ns/op
# Warmup Iteration   2: 2.548 ns/op
# Warmup Iteration   3: 2.362 ns/op
# Warmup Iteration   4: 2.356 ns/op
# Warmup Iteration   5: 2.355 ns/op
Iteration   1: 2.360 ns/op
Iteration   2: 2.380 ns/op
Iteration   3: 2.357 ns/op
Iteration   4: 2.361 ns/op
Iteration   5: 2.387 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 55.56% complete, ETA 00:01:41
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.551 ns/op
# Warmup Iteration   2: 2.576 ns/op
# Warmup Iteration   3: 2.359 ns/op
# Warmup Iteration   4: 2.361 ns/op
# Warmup Iteration   5: 2.363 ns/op
Iteration   1: 2.366 ns/op
Iteration   2: 2.355 ns/op
Iteration   3: 2.362 ns/op
Iteration   4: 2.352 ns/op
Iteration   5: 2.360 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 61.11% complete, ETA 00:01:28
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.009 ns/op
# Warmup Iteration   2: 2.790 ns/op
# Warmup Iteration   3: 2.857 ns/op
# Warmup Iteration   4: 2.657 ns/op
# Warmup Iteration   5: 2.652 ns/op
Iteration   1: 2.650 ns/op
Iteration   2: 2.645 ns/op
Iteration   3: 2.634 ns/op
Iteration   4: 2.626 ns/op
Iteration   5: 2.650 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsKtBenchmark.default1Argument":
  2.456 ±(99.9%) 0.145 ns/op [Average]
  (min, avg, max) = (2.352, 2.456, 2.650), stdev = 0.136
  CI (99.9%): [2.311, 2.601] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsKtBenchmark.default1Argument:·asm":
PrintAssembly processed: 138451 total address lines.
Perf output processed (skipped 7.132 seconds):
 Column 1: cycles (5241 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 482 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007efc48735f20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007efc48735f24: movabs r12,0x800000000
            0x00007efc48735f2e: add    r10,r12
            0x00007efc48735f31: xor    r12,r12
            0x00007efc48735f34: cmp    rax,r10
            0x00007efc48735f37: jne    0x00007efc40c68c80  ;   {runtime_call ic_miss_stub}
            0x00007efc48735f3d: data16 xchg ax,ax
          [Verified Entry Point]
  5.72%     0x00007efc48735f40: mov    DWORD PTR [rsp-0x14000],eax
  5.82%     0x00007efc48735f47: push   rbp
  3.03%     0x00007efc48735f48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  7.65%     0x00007efc48735f4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.80%     0x00007efc48735f53: mov    r8d,edx
  2.90%     0x00007efc48735f56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.71%     0x00007efc48735f5d: mov    r9d,edx
  4.79%     0x00007efc48735f60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.86%     0x00007efc48735f63: cmp    r9d,r8d
         ╭  0x00007efc48735f66: je     0x00007efc48735f78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.49%  │  0x00007efc48735f68: add    rsp,0x20
  3.17%  │  0x00007efc48735f6c: pop    rbp
  5.74%  │  0x00007efc48735f6d: mov    r10,QWORD PTR [r15+0x108]
  0.99%  │  0x00007efc48735f74: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.26%  │  0x00007efc48735f77: ret    
         ↘  0x00007efc48735f78: mov    rbp,rsi
            0x00007efc48735f7b: mov    DWORD PTR [rsp],edx
            0x00007efc48735f7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007efc48735f83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007efc48735f88: mov    esi,0xffffff4d
            0x00007efc48735f8d: xchg   ax,ax
            0x00007efc48735f8f: call   0x00007efc40c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 50.94%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 514 (50 bytes) 

             0x00007efc4873aca4: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007efc4873ad6a
             0x00007efc4873acac: mov    ebp,0x1
             0x00007efc4873acb1: test   r10d,r10d
         ╭   0x00007efc4873acb4: jne    0x00007efc4873acf7  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
         │   0x00007efc4873acb6: data16 nop WORD PTR [rax+rax*1+0x0]
         │                                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@36 (line 193)
  2.35%  │↗  0x00007efc4873acc0: mov    r10,QWORD PTR [rsp+0x40]
  4.77%  ││  0x00007efc4873acc5: mov    edx,DWORD PTR [r10+0x10]
  4.39%  ││  0x00007efc4873acc9: imul   edx,DWORD PTR [r10+0xc]  ;*imul {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@2 (line 63)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression$default@37 (line 62)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::default1Argument@12 (line 54)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@17 (line 190)
  7.17%  ││  0x00007efc4873acce: mov    rsi,QWORD PTR [rsp+0x38]
  0.74%  ││  0x00007efc4873acd3: call   0x00007efc40c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  8.47%  ││  0x00007efc4873acd8: mov    r10,QWORD PTR [rsp]
  5.00%  ││  0x00007efc4873acdc: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
  1.55%  ││  0x00007efc4873ace4: mov    r10,QWORD PTR [r15+0x108]
  4.60%  ││  0x00007efc4873aceb: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
  3.78%  ││  0x00007efc4873acef: test   DWORD PTR [r10],eax  ;   {poll}
  0.71%  ││  0x00007efc4873acf2: test   r11d,r11d
         │╰  0x00007efc4873acf5: je     0x00007efc4873acc0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@36 (line 193)
         ↘   0x00007efc4873acf7: movabs r10,0x7efc6076ba00
             0x00007efc4873ad01: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@37 (line 193)
             0x00007efc4873ad04: mov    r10,QWORD PTR [rsp+0x30]
             0x00007efc4873ad09: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@52 (line 195)
             0x00007efc4873ad0d: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@40 (line 193)
....................................................................................................
 43.52%  <total for region 2>

....[Hottest Regions]...............................................................................
 50.94%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 482 (55 bytes) 
 43.52%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 514 (50 bytes) 
  2.82%              kernel  [unknown] (6 bytes) 
  0.21%              kernel  [unknown] (6 bytes) 
  0.17%              kernel  [unknown] (30 bytes) 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (47 bytes) 
  0.08%              kernel  [unknown] (7 bytes) 
  0.06%              kernel  [unknown] (8 bytes) 
  0.06%              kernel  [unknown] (28 bytes) 
  0.06%              kernel  [unknown] (6 bytes) 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (17 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (32 bytes) 
  0.04%              kernel  [unknown] (8 bytes) 
  0.04%        libc-2.28.so  syscall (0 bytes) 
  0.04%        libc-2.28.so  __strchrnul_avx2 (28 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.55%  <...other 81 warm regions...>
....................................................................................................
 99.94%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 50.94%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 482 
 43.52%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 514 
  4.37%              kernel  [unknown] 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.10%        libc-2.28.so  vfprintf 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%        libc-2.28.so  __strchrnul_avx2 
  0.04%           libjvm.so  _ZN10ValueStackC1EPS_NS_4KindEi 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.04%        libc-2.28.so  syscall 
  0.02%           libjvm.so  _ZN12GraphBuilder12access_fieldEN9Bytecodes4CodeE 
  0.02%           libjvm.so  _ZN11Compilation8emit_lirEv 
  0.02%           libjvm.so  _ZNK22ImplicitExceptionTable2atEj 
  0.02%  libpthread-2.28.so  __pthread_mutex_unlock 
  0.02%           libjvm.so  _ZN16LIR_OpVisitState12all_xhandlerEv 
  0.02%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%        libc-2.28.so  _IO_fflush 
  0.02%      hsdis-amd64.so  putop 
  0.02%      hsdis-amd64.so  prefix_name 
  0.02%      hsdis-amd64.so  print_insn 
  0.44%  <...other 23 warm methods...>
....................................................................................................
 99.94%  <totals>

....[Distribution by Source]........................................................................
 94.47%         c2, level 4
  4.37%              kernel
  0.53%           libjvm.so
  0.34%        libc-2.28.so
  0.11%      hsdis-amd64.so
  0.06%  libpthread-2.28.so
  0.06%         interpreter
....................................................................................................
 99.94%  <totals>

PrintAssembly processed: 140166 total address lines.
Perf output processed (skipped 7.082 seconds):
 Column 1: cycles (5225 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 497 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f41c3ed7920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f41c3ed7924: movabs r12,0x800000000
            0x00007f41c3ed792e: add    r10,r12
            0x00007f41c3ed7931: xor    r12,r12
            0x00007f41c3ed7934: cmp    rax,r10
            0x00007f41c3ed7937: jne    0x00007f41bc408c80  ;   {runtime_call ic_miss_stub}
            0x00007f41c3ed793d: data16 xchg ax,ax
          [Verified Entry Point]
  5.49%     0x00007f41c3ed7940: mov    DWORD PTR [rsp-0x14000],eax
  5.49%     0x00007f41c3ed7947: push   rbp
  3.52%     0x00007f41c3ed7948: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  7.98%     0x00007f41c3ed794c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.75%     0x00007f41c3ed7953: mov    r8d,edx
  2.95%     0x00007f41c3ed7956: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  2.81%     0x00007f41c3ed795d: mov    r9d,edx
  4.80%     0x00007f41c3ed7960: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.80%     0x00007f41c3ed7963: cmp    r9d,r8d
         ╭  0x00007f41c3ed7966: je     0x00007f41c3ed7978  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.41%  │  0x00007f41c3ed7968: add    rsp,0x20
  2.72%  │  0x00007f41c3ed796c: pop    rbp
  5.24%  │  0x00007f41c3ed796d: mov    r10,QWORD PTR [r15+0x108]
  0.84%  │  0x00007f41c3ed7974: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.00%  │  0x00007f41c3ed7977: ret    
         ↘  0x00007f41c3ed7978: mov    rbp,rsi
            0x00007f41c3ed797b: mov    DWORD PTR [rsp],edx
            0x00007f41c3ed797e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f41c3ed7983: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f41c3ed7988: mov    esi,0xffffff4d
            0x00007f41c3ed798d: xchg   ax,ax
            0x00007f41c3ed798f: call   0x00007f41bc40a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 49.82%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 523 (50 bytes) 

             0x00007f41c3ed9e24: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f41c3ed9eea
             0x00007f41c3ed9e2c: mov    ebp,0x1
             0x00007f41c3ed9e31: test   r10d,r10d
         ╭   0x00007f41c3ed9e34: jne    0x00007f41c3ed9e77  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
         │   0x00007f41c3ed9e36: data16 nop WORD PTR [rax+rax*1+0x0]
         │                                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@36 (line 193)
  1.76%  │↗  0x00007f41c3ed9e40: mov    r10,QWORD PTR [rsp+0x40]
  5.28%  ││  0x00007f41c3ed9e45: mov    edx,DWORD PTR [r10+0x10]
  4.94%  ││  0x00007f41c3ed9e49: imul   edx,DWORD PTR [r10+0xc]  ;*imul {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@2 (line 63)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression$default@37 (line 62)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::default1Argument@12 (line 54)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@17 (line 190)
  8.10%  ││  0x00007f41c3ed9e4e: mov    rsi,QWORD PTR [rsp+0x38]
  0.80%  ││  0x00007f41c3ed9e53: call   0x00007f41bc408f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  7.98%  ││  0x00007f41c3ed9e58: mov    r10,QWORD PTR [rsp]
  4.96%  ││  0x00007f41c3ed9e5c: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
  2.22%  ││  0x00007f41c3ed9e64: mov    r10,QWORD PTR [r15+0x108]
  4.71%  ││  0x00007f41c3ed9e6b: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
  3.87%  ││  0x00007f41c3ed9e6f: test   DWORD PTR [r10],eax  ;   {poll}
  0.42%  ││  0x00007f41c3ed9e72: test   r11d,r11d
         │╰  0x00007f41c3ed9e75: je     0x00007f41c3ed9e40  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@36 (line 193)
         ↘   0x00007f41c3ed9e77: movabs r10,0x7f41d8f20a00
             0x00007f41c3ed9e81: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@37 (line 193)
             0x00007f41c3ed9e84: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f41c3ed9e89: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@52 (line 195)
             0x00007f41c3ed9e8d: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@40 (line 193)
....................................................................................................
 45.03%  <total for region 2>

....[Hottest Regions]...............................................................................
 49.82%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 497 (55 bytes) 
 45.03%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 523 (50 bytes) 
  2.28%              kernel  [unknown] (6 bytes) 
  0.17%              kernel  [unknown] (6 bytes) 
  0.15%              kernel  [unknown] (0 bytes) 
  0.10%              kernel  [unknown] (1 bytes) 
  0.06%              kernel  [unknown] (31 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (11 bytes) 
  0.06%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (19 bytes) 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm (13 bytes) 
  0.04%              kernel  [unknown] (12 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (8 bytes) 
  0.04%              kernel  [unknown] (8 bytes) 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (10 bytes) 
  0.04%        libc-2.28.so  __strchr_avx2 (31 bytes) 
  1.78%  <...other 92 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 49.82%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 497 
 45.03%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 523 
  4.13%              kernel  [unknown] 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%        libc-2.28.so  __strchrnul_avx2 
  0.04%  libpthread-2.28.so  __pthread_enable_asynccancel 
  0.04%        libc-2.28.so  vfprintf 
  0.02%        libc-2.28.so  __memmove_avx_unaligned_erms 
  0.02%           libjvm.so  _ZN15ciInstanceKlass19get_field_by_offsetEib 
  0.02%           libjvm.so  _ZN7VMError17is_error_reportedEv 
  0.02%      hsdis-amd64.so  oappend_maybe_intel 
  0.02%           libjvm.so  _ZN13RelocIterator19advance_over_prefixEv 
  0.02%           libjvm.so  _ZN7Monitor10notify_allEv 
  0.02%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%      hsdis-amd64.so  OP_G 
  0.02%           libjvm.so  _ZN3Phi6as_PhiEv 
  0.46%  <...other 24 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.85%         c2, level 4
  4.13%              kernel
  0.59%           libjvm.so
  0.19%        libc-2.28.so
  0.13%      hsdis-amd64.so
  0.04%  libpthread-2.28.so
  0.02%         c1, level 3
  0.02%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 139719 total address lines.
Perf output processed (skipped 7.040 seconds):
 Column 1: cycles (5248 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 494 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f46c0314ba0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f46c0314ba4: movabs r12,0x800000000
            0x00007f46c0314bae: add    r10,r12
            0x00007f46c0314bb1: xor    r12,r12
            0x00007f46c0314bb4: cmp    rax,r10
            0x00007f46c0314bb7: jne    0x00007f46b8843c80  ;   {runtime_call ic_miss_stub}
            0x00007f46c0314bbd: data16 xchg ax,ax
          [Verified Entry Point]
  5.35%     0x00007f46c0314bc0: mov    DWORD PTR [rsp-0x14000],eax
  5.70%     0x00007f46c0314bc7: push   rbp
  3.03%     0x00007f46c0314bc8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  7.89%     0x00007f46c0314bcc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.86%     0x00007f46c0314bd3: mov    r8d,edx
  2.86%     0x00007f46c0314bd6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  3.24%     0x00007f46c0314bdd: mov    r9d,edx
  5.03%     0x00007f46c0314be0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.01%     0x00007f46c0314be3: cmp    r9d,r8d
         ╭  0x00007f46c0314be6: je     0x00007f46c0314bf8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  2.74%  │  0x00007f46c0314be8: add    rsp,0x20
  2.67%  │  0x00007f46c0314bec: pop    rbp
  4.84%  │  0x00007f46c0314bed: mov    r10,QWORD PTR [r15+0x108]
  0.78%  │  0x00007f46c0314bf4: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.70%  │  0x00007f46c0314bf7: ret    
         ↘  0x00007f46c0314bf8: mov    rbp,rsi
            0x00007f46c0314bfb: mov    DWORD PTR [rsp],edx
            0x00007f46c0314bfe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f46c0314c03: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f46c0314c08: mov    esi,0xffffff4d
            0x00007f46c0314c0d: xchg   ax,ax
            0x00007f46c0314c0f: call   0x00007f46b8845900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 49.70%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 523 (50 bytes) 

             0x00007f46c0317824: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f46c03178ea
             0x00007f46c031782c: mov    ebp,0x1
             0x00007f46c0317831: test   r10d,r10d
         ╭   0x00007f46c0317834: jne    0x00007f46c0317877  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
         │   0x00007f46c0317836: data16 nop WORD PTR [rax+rax*1+0x0]
         │                                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@36 (line 193)
  2.06%  │↗  0x00007f46c0317840: mov    r10,QWORD PTR [rsp+0x40]
  5.24%  ││  0x00007f46c0317845: mov    edx,DWORD PTR [r10+0x10]
  4.29%  ││  0x00007f46c0317849: imul   edx,DWORD PTR [r10+0xc]  ;*imul {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@2 (line 63)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression$default@37 (line 62)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::default1Argument@12 (line 54)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@17 (line 190)
  7.43%  ││  0x00007f46c031784e: mov    rsi,QWORD PTR [rsp+0x38]
  0.65%  ││  0x00007f46c0317853: call   0x00007f46b8843f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  8.04%  ││  0x00007f46c0317858: mov    r10,QWORD PTR [rsp]
  5.01%  ││  0x00007f46c031785c: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
  1.71%  ││  0x00007f46c0317864: mov    r10,QWORD PTR [r15+0x108]
  5.20%  ││  0x00007f46c031786b: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@33 (line 192)
  4.25%  ││  0x00007f46c031786f: test   DWORD PTR [r10],eax  ;   {poll}
  0.63%  ││  0x00007f46c0317872: test   r11d,r11d
         │╰  0x00007f46c0317875: je     0x00007f46c0317840  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@36 (line 193)
         ↘   0x00007f46c0317877: movabs r10,0x7f46d548aa00
             0x00007f46c0317881: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@37 (line 193)
             0x00007f46c0317884: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f46c0317889: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@52 (line 195)
             0x00007f46c031788d: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub@40 (line 193)
....................................................................................................
 44.51%  <total for region 2>

....[Hottest Regions]...............................................................................
 49.70%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 494 (55 bytes) 
 44.51%     c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 523 (50 bytes) 
  2.69%          kernel  [unknown] (6 bytes) 
  0.21%          kernel  [unknown] (30 bytes) 
  0.15%          kernel  [unknown] (1 bytes) 
  0.13%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (41 bytes) 
  0.11%          kernel  [unknown] (13 bytes) 
  0.11%          kernel  [unknown] (4 bytes) 
  0.10%          kernel  [unknown] (1 bytes) 
  0.10%          kernel  [unknown] (3 bytes) 
  0.10%          kernel  [unknown] (0 bytes) 
  0.06%          kernel  [unknown] (5 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%       libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ (7 bytes) 
  1.68%  <...other 87 warm regions...>
....................................................................................................
 99.96%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 49.70%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 494 
 44.51%     c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default1Argument_jmhTest::default1Argument_avgt_jmhStub, version 523 
  4.95%          kernel  [unknown] 
  0.13%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%       libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%    libc-2.28.so  __memset_avx2_unaligned_erms 
  0.04%     interpreter  invokevirtual  182 invokevirtual  
  0.04%    libc-2.28.so  __strncmp_avx2 
  0.04%    libc-2.28.so  __libc_disable_asynccancel 
  0.02%     interpreter  fast_zputfield  213 fast_zputfield  
  0.02%     c1, level 3  java.util.HashMap::resize, version 137 
  0.02%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%    libc-2.28.so  _int_malloc 
  0.02%       libjvm.so  _ZN12outputStream5printEPKcz 
  0.02%       libjvm.so  _ZN17ThreadsListHandleC2EP6Thread 
  0.02%  hsdis-amd64.so  OP_E_memory 
  0.02%       libjvm.so  _ZN10BlockBegin14substitute_suxEPS_S0_ 
  0.02%       libjvm.so  _ZN13PhiSimplifier8simplifyEP11Instruction 
  0.02%       libjvm.so  _ZN10MethodData9bci_to_dpEi 
  0.02%       libjvm.so  _ZN2os4freeEPv 
  0.25%  <...other 13 warm methods...>
....................................................................................................
 99.96%  <totals>

....[Distribution by Source]........................................................................
 94.21%     c2, level 4
  4.95%          kernel
  0.46%       libjvm.so
  0.17%    libc-2.28.so
  0.08%     interpreter
  0.06%  hsdis-amd64.so
  0.04%     c1, level 3
....................................................................................................
 99.96%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsKtBenchmark.default2Arguments
# Parameters: (delta = 1, factor = 2, value = 8)

# Run progress: 66.67% complete, ETA 00:01:15
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.801 ns/op
# Warmup Iteration   2: 2.484 ns/op
# Warmup Iteration   3: 2.623 ns/op
# Warmup Iteration   4: 2.456 ns/op
# Warmup Iteration   5: 2.450 ns/op
Iteration   1: 2.446 ns/op
Iteration   2: 2.446 ns/op
Iteration   3: 2.449 ns/op
Iteration   4: 2.444 ns/op
Iteration   5: 2.451 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 72.22% complete, ETA 00:01:03
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.435 ns/op
# Warmup Iteration   2: 2.567 ns/op
# Warmup Iteration   3: 2.708 ns/op
# Warmup Iteration   4: 2.532 ns/op
# Warmup Iteration   5: 2.527 ns/op
Iteration   1: 2.534 ns/op
Iteration   2: 2.456 ns/op
Iteration   3: 2.457 ns/op
Iteration   4: 2.511 ns/op
Iteration   5: 2.506 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 77.78% complete, ETA 00:00:50
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.474 ns/op
# Warmup Iteration   2: 2.660 ns/op
# Warmup Iteration   3: 2.372 ns/op
# Warmup Iteration   4: 2.278 ns/op
# Warmup Iteration   5: 2.234 ns/op
Iteration   1: 2.254 ns/op
Iteration   2: 2.469 ns/op
Iteration   3: 2.284 ns/op
Iteration   4: 2.357 ns/op
Iteration   5: 2.609 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsKtBenchmark.default2Arguments":
  2.445 ±(99.9%) 0.096 ns/op [Average]
  (min, avg, max) = (2.254, 2.445, 2.609), stdev = 0.090
  CI (99.9%): [2.348, 2.541] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsKtBenchmark.default2Arguments:·asm":
PrintAssembly processed: 136316 total address lines.
Perf output processed (skipped 7.064 seconds):
 Column 1: cycles (5173 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 481 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f85ac737920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f85ac737924: movabs r12,0x800000000
            0x00007f85ac73792e: add    r10,r12
            0x00007f85ac737931: xor    r12,r12
            0x00007f85ac737934: cmp    rax,r10
            0x00007f85ac737937: jne    0x00007f85a4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f85ac73793d: data16 xchg ax,ax
          [Verified Entry Point]
  7.31%     0x00007f85ac737940: mov    DWORD PTR [rsp-0x14000],eax
  5.03%     0x00007f85ac737947: push   rbp
  3.67%     0x00007f85ac737948: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.34%     0x00007f85ac73794c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  3.46%     0x00007f85ac737953: mov    r8d,edx
  3.36%     0x00007f85ac737956: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  3.94%     0x00007f85ac73795d: mov    r9d,edx
  2.05%     0x00007f85ac737960: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  3.23%     0x00007f85ac737963: cmp    r9d,r8d
         ╭  0x00007f85ac737966: je     0x00007f85ac737978  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.18%  │  0x00007f85ac737968: add    rsp,0x20
  3.65%  │  0x00007f85ac73796c: pop    rbp
  1.91%  │  0x00007f85ac73796d: mov    r10,QWORD PTR [r15+0x108]
  3.25%  │  0x00007f85ac737974: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.90%  │  0x00007f85ac737977: ret    
         ↘  0x00007f85ac737978: mov    rbp,rsi
            0x00007f85ac73797b: mov    DWORD PTR [rsp],edx
            0x00007f85ac73797e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f85ac737983: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f85ac737988: mov    esi,0xffffff4d
            0x00007f85ac73798d: xchg   ax,ax
            0x00007f85ac73798f: call   0x00007f85a4c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 54.28%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 512 (46 bytes) 

             0x00007f85ac73b098: mov    r10,QWORD PTR [rsp]
             0x00007f85ac73b09c: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f85ac73b156
             0x00007f85ac73b0a4: mov    ebp,0x1
             0x00007f85ac73b0a9: test   r11d,r11d
         ╭   0x00007f85ac73b0ac: jne    0x00007f85ac73b0e3  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
         │   0x00007f85ac73b0ae: xchg   ax,ax              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@36 (line 193)
  3.75%  │↗  0x00007f85ac73b0b0: mov    r10,QWORD PTR [rsp+0x40]
  4.33%  ││  0x00007f85ac73b0b5: mov    edx,DWORD PTR [r10+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::default2Arguments@2 (line 49)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@17 (line 190)
  5.93%  ││  0x00007f85ac73b0b9: mov    rsi,QWORD PTR [rsp+0x38]
  1.64%  ││  0x00007f85ac73b0be: nop
  2.94%  ││  0x00007f85ac73b0bf: call   0x00007f85a4c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  5.26%  ││  0x00007f85ac73b0c4: mov    r10,QWORD PTR [rsp]
  4.00%  ││  0x00007f85ac73b0c8: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
  5.24%  ││  0x00007f85ac73b0d0: mov    r11,QWORD PTR [r15+0x108]
  4.64%  ││  0x00007f85ac73b0d7: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
  1.14%  ││  0x00007f85ac73b0db: test   DWORD PTR [r11],eax  ;   {poll}
  2.80%  ││  0x00007f85ac73b0de: test   r10d,r10d
         │╰  0x00007f85ac73b0e1: je     0x00007f85ac73b0b0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f85ac73b0e3: movabs r10,0x7f85c3ee1a00
             0x00007f85ac73b0ed: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@37 (line 193)
             0x00007f85ac73b0f0: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f85ac73b0f5: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@52 (line 195)
             0x00007f85ac73b0f9: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 41.68%  <total for region 2>

....[Hottest Regions]...............................................................................
 54.28%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 481 (55 bytes) 
 41.68%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 512 (46 bytes) 
  0.99%              kernel  [unknown] (6 bytes) 
  0.29%              kernel  [unknown] (0 bytes) 
  0.19%              kernel  [unknown] (7 bytes) 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (30 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (8 bytes) 
  0.06%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (30 bytes) 
  0.04%              kernel  [unknown] (18 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (19 bytes) 
  0.04%        libc-2.28.so  vfprintf (2 bytes) 
  0.04%        libc-2.28.so  _IO_fwrite (15 bytes) 
  0.04%  libpthread-2.28.so  __libc_write (16 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.76%  <...other 91 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 54.28%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 481 
 41.68%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 512 
  2.76%              kernel  [unknown] 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%        libc-2.28.so  _IO_fwrite 
  0.06%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.04%  libpthread-2.28.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.04%        libc-2.28.so  __strlen_avx2 
  0.02%           libjvm.so  _ZN12GraphBuilder15append_with_bciEP11Instructioni 
  0.02%           libjvm.so  jio_print 
  0.02%        libc-2.28.so  _IO_file_sync@@GLIBC_2.2.5 
  0.02%           libjvm.so  _ZN16LinearScanWalker25free_collect_inactive_anyEP8Interval 
  0.02%           libjvm.so  _ZN2os6strdupEPKc10MemoryType 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%        libc-2.28.so  __libc_enable_asynccancel 
  0.02%      hsdis-amd64.so  hsdis_read_memory_func 
  0.02%           libjvm.so  _ZN10BlockBegin16iterate_preorderER13GrowableArrayIbEP12BlockClosure 
  0.62%  <...other 32 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.96%         c2, level 4
  2.76%              kernel
  0.60%           libjvm.so
  0.39%        libc-2.28.so
  0.12%  libpthread-2.28.so
  0.06%      hsdis-amd64.so
  0.04%         interpreter
  0.04%          ld-2.28.so
  0.02%              [vdso]
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 139705 total address lines.
Perf output processed (skipped 7.018 seconds):
 Column 1: cycles (5264 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 487 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f6d4c7375a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f6d4c7375a4: movabs r12,0x800000000
            0x00007f6d4c7375ae: add    r10,r12
            0x00007f6d4c7375b1: xor    r12,r12
            0x00007f6d4c7375b4: cmp    rax,r10
            0x00007f6d4c7375b7: jne    0x00007f6d44c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f6d4c7375bd: data16 xchg ax,ax
          [Verified Entry Point]
  8.00%     0x00007f6d4c7375c0: mov    DWORD PTR [rsp-0x14000],eax
  4.10%     0x00007f6d4c7375c7: push   rbp
  3.84%     0x00007f6d4c7375c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.47%     0x00007f6d4c7375cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.96%     0x00007f6d4c7375d3: mov    r8d,edx
  3.36%     0x00007f6d4c7375d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  3.74%     0x00007f6d4c7375dd: mov    r9d,edx
  1.35%     0x00007f6d4c7375e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  3.59%     0x00007f6d4c7375e3: cmp    r9d,r8d
         ╭  0x00007f6d4c7375e6: je     0x00007f6d4c7375f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.86%  │  0x00007f6d4c7375e8: add    rsp,0x20
  3.46%  │  0x00007f6d4c7375ec: pop    rbp
  2.43%  │  0x00007f6d4c7375ed: mov    r10,QWORD PTR [r15+0x108]
  2.75%  │  0x00007f6d4c7375f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.77%  │  0x00007f6d4c7375f7: ret    
         ↘  0x00007f6d4c7375f8: mov    rbp,rsi
            0x00007f6d4c7375fb: mov    DWORD PTR [rsp],edx
            0x00007f6d4c7375fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f6d4c737603: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f6d4c737608: mov    esi,0xffffff4d
            0x00007f6d4c73760d: xchg   ax,ax
            0x00007f6d4c73760f: call   0x00007f6d44c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 53.69%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 520 (46 bytes) 

             0x00007f6d4c73b098: mov    r10,QWORD PTR [rsp]
             0x00007f6d4c73b09c: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f6d4c73b156
             0x00007f6d4c73b0a4: mov    ebp,0x1
             0x00007f6d4c73b0a9: test   r11d,r11d
         ╭   0x00007f6d4c73b0ac: jne    0x00007f6d4c73b0e3  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
         │   0x00007f6d4c73b0ae: xchg   ax,ax              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@36 (line 193)
  3.65%  │↗  0x00007f6d4c73b0b0: mov    r10,QWORD PTR [rsp+0x40]
  4.45%  ││  0x00007f6d4c73b0b5: mov    edx,DWORD PTR [r10+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::default2Arguments@2 (line 49)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@17 (line 190)
  5.72%  ││  0x00007f6d4c73b0b9: mov    rsi,QWORD PTR [rsp+0x38]
  1.63%  ││  0x00007f6d4c73b0be: nop
  2.77%  ││  0x00007f6d4c73b0bf: call   0x00007f6d44c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  6.23%  ││  0x00007f6d4c73b0c4: mov    r10,QWORD PTR [rsp]
  3.78%  ││  0x00007f6d4c73b0c8: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
  4.33%  ││  0x00007f6d4c73b0d0: mov    r11,QWORD PTR [r15+0x108]
  3.95%  ││  0x00007f6d4c73b0d7: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
  1.50%  ││  0x00007f6d4c73b0db: test   DWORD PTR [r11],eax  ;   {poll}
  2.60%  ││  0x00007f6d4c73b0de: test   r10d,r10d
         │╰  0x00007f6d4c73b0e1: je     0x00007f6d4c73b0b0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007f6d4c73b0e3: movabs r10,0x7f6d639bea00
             0x00007f6d4c73b0ed: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@37 (line 193)
             0x00007f6d4c73b0f0: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f6d4c73b0f5: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@52 (line 195)
             0x00007f6d4c73b0f9: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 40.62%  <total for region 2>

....[Hottest Regions]...............................................................................
 53.69%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 487 (55 bytes) 
 40.62%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 520 (46 bytes) 
  2.41%              kernel  [unknown] (6 bytes) 
  0.25%              kernel  [unknown] (1 bytes) 
  0.15%              kernel  [unknown] (0 bytes) 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (47 bytes) 
  0.11%              kernel  [unknown] (26 bytes) 
  0.09%              kernel  [unknown] (5 bytes) 
  0.09%        libc-2.28.so  syscall (0 bytes) 
  0.08%          ld-2.28.so  __tls_get_addr (21 bytes) 
  0.06%              kernel  [unknown] (30 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (30 bytes) 
  0.04%              kernel  [unknown] (18 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  0.04%              kernel  [unknown] (18 bytes) 
  1.90%  <...other 97 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 53.69%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 487 
 40.62%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 520 
  4.50%              kernel  [unknown] 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.09%        libc-2.28.so  syscall 
  0.08%          ld-2.28.so  __tls_get_addr 
  0.06%        libc-2.28.so  __strlen_avx2 
  0.04%      hsdis-amd64.so  putop 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%           libjvm.so  _ZN12outputStream12do_vsnprintfEPcmPKcP13__va_list_tagbRm 
  0.04%  libpthread-2.28.so  __pthread_enable_asynccancel 
  0.04%        libc-2.28.so  vfprintf 
  0.02%      hsdis-amd64.so  OP_REG 
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%           libjvm.so  _ZN14MacroAssembler6movptrE7AddressP12RegisterImpl 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%        libc-2.28.so  __printf_fp 
  0.02%        libc-2.28.so  __strchrnul_avx2 
  0.47%  <...other 25 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 94.30%         c2, level 4
  4.50%              kernel
  0.59%           libjvm.so
  0.28%        libc-2.28.so
  0.09%      hsdis-amd64.so
  0.08%  libpthread-2.28.so
  0.08%          ld-2.28.so
  0.06%         interpreter
  0.02%         c1, level 3
....................................................................................................
100.00%  <totals>

PrintAssembly processed: 139365 total address lines.
Perf output processed (skipped 7.226 seconds):
 Column 1: cycles (5205 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 502 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007efd7c51d1a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007efd7c51d1a4: movabs r12,0x800000000
            0x00007efd7c51d1ae: add    r10,r12
            0x00007efd7c51d1b1: xor    r12,r12
            0x00007efd7c51d1b4: cmp    rax,r10
            0x00007efd7c51d1b7: jne    0x00007efd74a4bc80  ;   {runtime_call ic_miss_stub}
            0x00007efd7c51d1bd: data16 xchg ax,ax
          [Verified Entry Point]
  7.22%     0x00007efd7c51d1c0: mov    DWORD PTR [rsp-0x14000],eax
  5.55%     0x00007efd7c51d1c7: push   rbp
  3.88%     0x00007efd7c51d1c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.24%     0x00007efd7c51d1cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  2.79%     0x00007efd7c51d1d3: mov    r8d,edx
  4.05%     0x00007efd7c51d1d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  4.07%     0x00007efd7c51d1dd: mov    r9d,edx
  1.38%     0x00007efd7c51d1e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.88%     0x00007efd7c51d1e3: cmp    r9d,r8d
         ╭  0x00007efd7c51d1e6: je     0x00007efd7c51d1f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.09%  │  0x00007efd7c51d1e8: add    rsp,0x20
  3.44%  │  0x00007efd7c51d1ec: pop    rbp
  2.06%  │  0x00007efd7c51d1ed: mov    r10,QWORD PTR [r15+0x108]
  2.98%  │  0x00007efd7c51d1f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.23%  │  0x00007efd7c51d1f7: ret    
         ↘  0x00007efd7c51d1f8: mov    rbp,rsi
            0x00007efd7c51d1fb: mov    DWORD PTR [rsp],edx
            0x00007efd7c51d1fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007efd7c51d203: mov    DWORD PTR [rsp+0x8],r8d
            0x00007efd7c51d208: mov    esi,0xffffff4d
            0x00007efd7c51d20d: xchg   ax,ax
            0x00007efd7c51d20f: call   0x00007efd74a4d900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 53.87%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 532 (46 bytes) 

             0x00007efd7c520198: mov    r10,QWORD PTR [rsp]
             0x00007efd7c52019c: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007efd7c520256
             0x00007efd7c5201a4: mov    ebp,0x1
             0x00007efd7c5201a9: test   r11d,r11d
         ╭   0x00007efd7c5201ac: jne    0x00007efd7c5201e3  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
         │   0x00007efd7c5201ae: xchg   ax,ax              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@36 (line 193)
  3.44%  │↗  0x00007efd7c5201b0: mov    r10,QWORD PTR [rsp+0x40]
  4.69%  ││  0x00007efd7c5201b5: mov    edx,DWORD PTR [r10+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::default2Arguments@2 (line 49)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@17 (line 190)
  5.17%  ││  0x00007efd7c5201b9: mov    rsi,QWORD PTR [rsp+0x38]
  1.44%  ││  0x00007efd7c5201be: nop
  2.94%  ││  0x00007efd7c5201bf: call   0x00007efd74a4bf00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  6.38%  ││  0x00007efd7c5201c4: mov    r10,QWORD PTR [rsp]
  4.30%  ││  0x00007efd7c5201c8: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
  4.25%  ││  0x00007efd7c5201d0: mov    r11,QWORD PTR [r15+0x108]
  4.17%  ││  0x00007efd7c5201d7: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@33 (line 192)
  1.17%  ││  0x00007efd7c5201db: test   DWORD PTR [r11],eax  ;   {poll}
  2.77%  ││  0x00007efd7c5201de: test   r10d,r10d
         │╰  0x00007efd7c5201e1: je     0x00007efd7c5201b0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@36 (line 193)
         ↘   0x00007efd7c5201e3: movabs r10,0x7efd9161ea00
             0x00007efd7c5201ed: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@37 (line 193)
             0x00007efd7c5201f0: mov    r10,QWORD PTR [rsp+0x30]
             0x00007efd7c5201f5: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@52 (line 195)
             0x00007efd7c5201f9: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub@40 (line 193)
....................................................................................................
 40.71%  <total for region 2>

....[Hottest Regions]...............................................................................
 53.87%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 502 (55 bytes) 
 40.71%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 532 (46 bytes) 
  2.06%              kernel  [unknown] (6 bytes) 
  0.15%              kernel  [unknown] (37 bytes) 
  0.10%              kernel  [unknown] (30 bytes) 
  0.10%              kernel  [unknown] (44 bytes) 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (41 bytes) 
  0.08%              kernel  [unknown] (3 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (23 bytes) 
  0.06%              kernel  [unknown] (21 bytes) 
  0.06%  libpthread-2.28.so  __libc_write (46 bytes) 
  0.04%              kernel  [unknown] (13 bytes) 
  0.04%              kernel  [unknown] (13 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  2.27%  <...other 110 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 53.87%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 502 
 40.71%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_default2Arguments_jmhTest::default2Arguments_avgt_jmhStub, version 532 
  4.21%              kernel  [unknown] 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%  libpthread-2.28.so  __libc_write 
  0.06%           libjvm.so  _ZN12stringStream5writeEPKcm 
  0.06%        libc-2.28.so  _IO_default_xsputn 
  0.04%      hsdis-amd64.so  putop 
  0.04%        libc-2.28.so  __strchrnul_avx2 
  0.04%        libc-2.28.so  _IO_fwrite 
  0.04%        libc-2.28.so  syscall 
  0.04%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%           libjvm.so  _ZN10Relocation19pd_call_destinationEPh 
  0.02%         c2, level 4  java.lang.String::charAt, version 111 
  0.02%           libjvm.so  _ZNK6Symbol11as_C_stringEv 
  0.02%                      <unknown> 
  0.02%         interpreter  iaload  46 iaload  
  0.02%        libc-2.28.so  __strcasecmp_l_avx 
  0.02%           libjvm.so  _ZN22ComputeLinearScanOrder14compute_weightEP10BlockBegin 
  0.02%         interpreter  aload  25 aload  
  0.60%  <...other 31 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 94.60%         c2, level 4
  4.21%              kernel
  0.52%           libjvm.so
  0.37%        libc-2.28.so
  0.12%  libpthread-2.28.so
  0.10%         interpreter
  0.08%      hsdis-amd64.so
  0.02%                    
....................................................................................................
100.00%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.DefaultArgumentsKtBenchmark.noDefault
# Parameters: (delta = 1, factor = 2, value = 8)

# Run progress: 83.33% complete, ETA 00:00:37
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.385 ns/op
# Warmup Iteration   2: 2.766 ns/op
# Warmup Iteration   3: 2.999 ns/op
# Warmup Iteration   4: 2.994 ns/op
# Warmup Iteration   5: 2.898 ns/op
Iteration   1: 2.888 ns/op
Iteration   2: 2.876 ns/op
Iteration   3: 2.868 ns/op
Iteration   4: 2.863 ns/op
Iteration   5: 2.868 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 88.89% complete, ETA 00:00:25
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.807 ns/op
# Warmup Iteration   2: 2.958 ns/op
# Warmup Iteration   3: 2.604 ns/op
# Warmup Iteration   4: 2.869 ns/op
# Warmup Iteration   5: 3.133 ns/op
Iteration   1: 2.944 ns/op
Iteration   2: 3.120 ns/op
Iteration   3: 3.082 ns/op
Iteration   4: 2.968 ns/op
Iteration   5: 3.049 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 94.44% complete, ETA 00:00:12
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.433 ns/op
# Warmup Iteration   2: 2.744 ns/op
# Warmup Iteration   3: 2.727 ns/op
# Warmup Iteration   4: 2.640 ns/op
# Warmup Iteration   5: 2.635 ns/op
Iteration   1: 2.663 ns/op
Iteration   2: 2.700 ns/op
Iteration   3: 2.717 ns/op
Iteration   4: 2.722 ns/op
Iteration   5: 2.712 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.DefaultArgumentsKtBenchmark.noDefault":
  2.869 ±(99.9%) 0.156 ns/op [Average]
  (min, avg, max) = (2.663, 2.869, 3.120), stdev = 0.146
  CI (99.9%): [2.713, 3.025] (assumes normal distribution)

Secondary result "org.ib.benchmark.DefaultArgumentsKtBenchmark.noDefault:·asm":
PrintAssembly processed: 138518 total address lines.
Perf output processed (skipped 7.142 seconds):
 Column 1: cycles (5120 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 514 (54 bytes) 

             0x00007f4c6c739724: mov    r10,QWORD PTR [rsp]
             0x00007f4c6c739728: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f4c6c7397ee
             0x00007f4c6c739730: mov    ebp,0x1
             0x00007f4c6c739735: test   r11d,r11d
         ╭   0x00007f4c6c739738: jne    0x00007f4c6c73977b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
         │   0x00007f4c6c73973a: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@36 (line 193)
  4.14%  │↗  0x00007f4c6c739740: mov    r10,QWORD PTR [rsp+0x40]
  0.14%  ││  0x00007f4c6c739745: mov    edx,DWORD PTR [r10+0x10]
  6.39%  ││  0x00007f4c6c739749: imul   edx,DWORD PTR [r10+0xc]
 12.17%  ││  0x00007f4c6c73974e: add    edx,DWORD PTR [r10+0x14]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@4 (line 63)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::noDefault@13 (line 59)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@17 (line 190)
  8.42%  ││  0x00007f4c6c739752: mov    rsi,QWORD PTR [rsp+0x38]
         ││  0x00007f4c6c739757: call   0x00007f4c64c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  0.66%  ││  0x00007f4c6c73975c: mov    r10,QWORD PTR [rsp]
  6.46%  ││  0x00007f4c6c739760: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
  5.61%  ││  0x00007f4c6c739768: mov    r10,QWORD PTR [r15+0x108]
  0.23%  ││  0x00007f4c6c73976f: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
  5.64%  ││  0x00007f4c6c739773: test   DWORD PTR [r10],eax  ;   {poll}
  1.21%  ││  0x00007f4c6c739776: test   r11d,r11d
         │╰  0x00007f4c6c739779: je     0x00007f4c6c739740  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@36 (line 193)
         ↘   0x00007f4c6c73977b: movabs r10,0x7f4c835bea00
             0x00007f4c6c739785: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@37 (line 193)
             0x00007f4c6c739788: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f4c6c73978d: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@52 (line 195)
             0x00007f4c6c739791: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@40 (line 193)
....................................................................................................
 51.07%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 491 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f4c6c7371a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f4c6c7371a4: movabs r12,0x800000000
            0x00007f4c6c7371ae: add    r10,r12
            0x00007f4c6c7371b1: xor    r12,r12
            0x00007f4c6c7371b4: cmp    rax,r10
            0x00007f4c6c7371b7: jne    0x00007f4c64c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f4c6c7371bd: data16 xchg ax,ax
          [Verified Entry Point]
  3.16%     0x00007f4c6c7371c0: mov    DWORD PTR [rsp-0x14000],eax
  6.91%     0x00007f4c6c7371c7: push   rbp
  3.26%     0x00007f4c6c7371c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  7.75%     0x00007f4c6c7371cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
            0x00007f4c6c7371d3: mov    r8d,edx
  2.71%     0x00007f4c6c7371d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.04%     0x00007f4c6c7371dd: mov    r9d,edx
  7.54%     0x00007f4c6c7371e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.02%     0x00007f4c6c7371e3: cmp    r9d,r8d
         ╭  0x00007f4c6c7371e6: je     0x00007f4c6c7371f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.52%  │  0x00007f4c6c7371e8: add    rsp,0x20
         │  0x00007f4c6c7371ec: pop    rbp
  8.03%  │  0x00007f4c6c7371ed: mov    r10,QWORD PTR [r15+0x108]
  0.02%  │  0x00007f4c6c7371f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.73%  │  0x00007f4c6c7371f7: ret    
         ↘  0x00007f4c6c7371f8: mov    rbp,rsi
            0x00007f4c6c7371fb: mov    DWORD PTR [rsp],edx
            0x00007f4c6c7371fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f4c6c737203: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f4c6c737208: mov    esi,0xffffff4d
            0x00007f4c6c73720d: xchg   ax,ax
            0x00007f4c6c73720f: call   0x00007f4c64c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 45.70%  <total for region 2>

....[Hottest Regions]...............................................................................
 51.07%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 514 (54 bytes) 
 45.70%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 491 (55 bytes) 
  0.29%              kernel  [unknown] (39 bytes) 
  0.25%              kernel  [unknown] (0 bytes) 
  0.21%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.18%              kernel  [unknown] (6 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (16 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (8 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN10CompileLog8identifyEP12ciBaseObject (10 bytes) 
  0.04%        libc-2.28.so  __strchr_avx2 (12 bytes) 
  0.04%  libpthread-2.28.so  __pthread_disable_asynccancel (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.66%  <...other 85 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 51.07%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 514 
 45.70%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 491 
  2.07%              kernel  [unknown] 
  0.21%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.06%        libc-2.28.so  _IO_default_xsputn 
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%           libjvm.so  _ZN10CompileLog8identifyEP12ciBaseObject 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%  libpthread-2.28.so  __pthread_disable_asynccancel 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%           libjvm.so  _ZN16LIR_OpVisitState5visitEP6LIR_Op 
  0.02%         interpreter  invoke return entry points  
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%      hsdis-amd64.so  print_displacement 
  0.02%           libjvm.so  _ZN11ProfileCall5visitEP18InstructionVisitor 
  0.02%        libc-2.28.so  __strchrnul_avx2 
  0.02%           libjvm.so  _ZN12outputStream5printEPKcz 
  0.02%                      <unknown> 
  0.02%         interpreter  astore  58 astore  
  0.43%  <...other 22 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.78%         c2, level 4
  2.07%              kernel
  0.59%           libjvm.so
  0.27%        libc-2.28.so
  0.10%      hsdis-amd64.so
  0.10%         interpreter
  0.06%  libpthread-2.28.so
  0.02%                    
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 137154 total address lines.
Perf output processed (skipped 7.049 seconds):
 Column 1: cycles (5151 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 504 (54 bytes) 

             0x00007f25a7ed8fa4: mov    r10,QWORD PTR [rsp]
             0x00007f25a7ed8fa8: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007f25a7ed906e
             0x00007f25a7ed8fb0: mov    ebp,0x1
             0x00007f25a7ed8fb5: test   r11d,r11d
         ╭   0x00007f25a7ed8fb8: jne    0x00007f25a7ed8ffb  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
         │   0x00007f25a7ed8fba: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@36 (line 193)
  3.86%  │↗  0x00007f25a7ed8fc0: mov    r10,QWORD PTR [rsp+0x40]
  0.21%  ││  0x00007f25a7ed8fc5: mov    edx,DWORD PTR [r10+0x10]
  6.64%  ││  0x00007f25a7ed8fc9: imul   edx,DWORD PTR [r10+0xc]
 12.09%  ││  0x00007f25a7ed8fce: add    edx,DWORD PTR [r10+0x14]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@4 (line 63)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::noDefault@13 (line 59)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@17 (line 190)
  8.11%  ││  0x00007f25a7ed8fd2: mov    rsi,QWORD PTR [rsp+0x38]
  0.04%  ││  0x00007f25a7ed8fd7: call   0x00007f25a0408f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  1.11%  ││  0x00007f25a7ed8fdc: mov    r10,QWORD PTR [rsp]
  6.25%  ││  0x00007f25a7ed8fe0: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
  4.78%  ││  0x00007f25a7ed8fe8: mov    r10,QWORD PTR [r15+0x108]
  0.27%  ││  0x00007f25a7ed8fef: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
  5.46%  ││  0x00007f25a7ed8ff3: test   DWORD PTR [r10],eax  ;   {poll}
  1.22%  ││  0x00007f25a7ed8ff6: test   r11d,r11d
         │╰  0x00007f25a7ed8ff9: je     0x00007f25a7ed8fc0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@36 (line 193)
         ↘   0x00007f25a7ed8ffb: movabs r10,0x7f25bcef4a00
             0x00007f25a7ed9005: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@37 (line 193)
             0x00007f25a7ed9008: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f25a7ed900d: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@52 (line 195)
             0x00007f25a7ed9011: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@40 (line 193)
....................................................................................................
 50.05%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 479 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f25a7ed7120: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f25a7ed7124: movabs r12,0x800000000
            0x00007f25a7ed712e: add    r10,r12
            0x00007f25a7ed7131: xor    r12,r12
            0x00007f25a7ed7134: cmp    rax,r10
            0x00007f25a7ed7137: jne    0x00007f25a0408c80  ;   {runtime_call ic_miss_stub}
            0x00007f25a7ed713d: data16 xchg ax,ax
          [Verified Entry Point]
  3.01%     0x00007f25a7ed7140: mov    DWORD PTR [rsp-0x14000],eax
  7.28%     0x00007f25a7ed7147: push   rbp
  3.20%     0x00007f25a7ed7148: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  7.40%     0x00007f25a7ed714c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.02%     0x00007f25a7ed7153: mov    r8d,edx
  2.83%     0x00007f25a7ed7156: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.10%     0x00007f25a7ed715d: mov    r9d,edx
  7.47%     0x00007f25a7ed7160: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.02%     0x00007f25a7ed7163: cmp    r9d,r8d
         ╭  0x00007f25a7ed7166: je     0x00007f25a7ed7178  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.65%  │  0x00007f25a7ed7168: add    rsp,0x20
  0.02%  │  0x00007f25a7ed716c: pop    rbp
  8.02%  │  0x00007f25a7ed716d: mov    r10,QWORD PTR [r15+0x108]
  0.02%  │  0x00007f25a7ed7174: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.09%  │  0x00007f25a7ed7177: ret    
         ↘  0x00007f25a7ed7178: mov    rbp,rsi
            0x00007f25a7ed717b: mov    DWORD PTR [rsp],edx
            0x00007f25a7ed717e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f25a7ed7183: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f25a7ed7188: mov    esi,0xffffff4d
            0x00007f25a7ed718d: xchg   ax,ax
            0x00007f25a7ed718f: call   0x00007f25a040a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 46.13%  <total for region 2>

....[Hottest Regions]...............................................................................
 50.05%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 504 (54 bytes) 
 46.13%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 479 (55 bytes) 
  0.70%              kernel  [unknown] (0 bytes) 
  0.27%              kernel  [unknown] (37 bytes) 
  0.14%              kernel  [unknown] (0 bytes) 
  0.12%              kernel  [unknown] (32 bytes) 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (32 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (16 bytes) 
  0.06%              kernel  [unknown] (23 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (1 bytes) 
  0.06%        libc-2.28.so  _IO_fwrite (22 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (21 bytes) 
  0.04%              kernel  [unknown] (3 bytes) 
  0.04%              kernel  [unknown] (3 bytes) 
  0.04%              kernel  [unknown] (27 bytes) 
  1.82%  <...other 90 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 50.05%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 504 
 46.13%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 479 
  2.60%              kernel  [unknown] 
  0.12%      hsdis-amd64.so  print_insn 
  0.10%        libc-2.28.so  _IO_fwrite 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.06%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%        libc-2.28.so  __strncmp_avx2 
  0.04%           libjvm.so  _Z23resource_allocate_bytesmN17AllocFailStrategy13AllocFailEnumE 
  0.04%        libc-2.28.so  syscall 
  0.02%        libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.02%        libc-2.28.so  __memmove_avx_unaligned_erms 
  0.02%           libjvm.so  _ZN12GraphBuilder15append_with_bciEP11Instructioni 
  0.02%           libjvm.so  _ZN13LIR_Assembler7comp_opE13LIR_ConditionP11LIR_OprDescS2_P7LIR_Op2 
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%           libjvm.so  _ZN14PhaseIdealLoop15build_loop_lateER9VectorSetR9Node_ListR10Node_Stack 
  0.02%         c1, level 3  java.lang.invoke.VarForm::getMemberName, version 516 
  0.02%           libjvm.so  _ZN13Canonicalizer12do_IntrinsicEP9Intrinsic 
  0.49%  <...other 25 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.18%         c2, level 4
  2.60%              kernel
  0.66%           libjvm.so
  0.31%        libc-2.28.so
  0.12%      hsdis-amd64.so
  0.06%         interpreter
  0.04%  libpthread-2.28.so
  0.02%         c1, level 3
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 143702 total address lines.
Perf output processed (skipped 7.221 seconds):
 Column 1: cycles (5264 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 527 (54 bytes) 

             0x00007fe29473c324: mov    r10,QWORD PTR [rsp]
             0x00007fe29473c328: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@30 (line 192)
                                                           ; implicit exception: dispatches to 0x00007fe29473c3ee
             0x00007fe29473c330: mov    ebp,0x1
             0x00007fe29473c335: test   r11d,r11d
         ╭   0x00007fe29473c338: jne    0x00007fe29473c37b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
         │   0x00007fe29473c33a: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@36 (line 193)
  3.67%  │↗  0x00007fe29473c340: mov    r10,QWORD PTR [rsp+0x40]
  0.19%  ││  0x00007fe29473c345: mov    edx,DWORD PTR [r10+0x10]
  6.16%  ││  0x00007fe29473c349: imul   edx,DWORD PTR [r10+0xc]
 11.78%  ││  0x00007fe29473c34e: add    edx,DWORD PTR [r10+0x14]  ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::expression@4 (line 63)
         ││                                                ; - org.ib.benchmark.DefaultArgumentsKtBenchmark::noDefault@13 (line 59)
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@17 (line 190)
  7.18%  ││  0x00007fe29473c352: mov    rsi,QWORD PTR [rsp+0x38]
         ││  0x00007fe29473c357: call   0x00007fe28cc68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@20 (line 190)
         ││                                                ;   {optimized virtual_call}
  1.54%  ││  0x00007fe29473c35c: mov    r10,QWORD PTR [rsp]
  6.42%  ││  0x00007fe29473c360: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
  4.88%  ││  0x00007fe29473c368: mov    r10,QWORD PTR [r15+0x108]
  0.38%  ││  0x00007fe29473c36f: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@33 (line 192)
  5.78%  ││  0x00007fe29473c373: test   DWORD PTR [r10],eax  ;   {poll}
  1.29%  ││  0x00007fe29473c376: test   r11d,r11d
         │╰  0x00007fe29473c379: je     0x00007fe29473c340  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@36 (line 193)
         ↘   0x00007fe29473c37b: movabs r10,0x7fe2a9f6ea00
             0x00007fe29473c385: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@37 (line 193)
             0x00007fe29473c388: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fe29473c38d: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@52 (line 195)
             0x00007fe29473c391: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub@40 (line 193)
....................................................................................................
 49.26%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 499 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fe294739020: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fe294739024: movabs r12,0x800000000
            0x00007fe29473902e: add    r10,r12
            0x00007fe294739031: xor    r12,r12
            0x00007fe294739034: cmp    rax,r10
            0x00007fe294739037: jne    0x00007fe28cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007fe29473903d: data16 xchg ax,ax
          [Verified Entry Point]
  3.08%     0x00007fe294739040: mov    DWORD PTR [rsp-0x14000],eax
  7.71%     0x00007fe294739047: push   rbp
  2.70%     0x00007fe294739048: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  8.13%     0x00007fe29473904c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.06%     0x00007fe294739053: mov    r8d,edx
  3.04%     0x00007fe294739056: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.06%     0x00007fe29473905d: mov    r9d,edx
  7.12%     0x00007fe294739060: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.08%     0x00007fe294739063: cmp    r9d,r8d
         ╭  0x00007fe294739066: je     0x00007fe294739078  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  3.02%  │  0x00007fe294739068: add    rsp,0x20
         │  0x00007fe29473906c: pop    rbp
  7.22%  │  0x00007fe29473906d: mov    r10,QWORD PTR [r15+0x108]
  0.02%  │  0x00007fe294739074: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.89%  │  0x00007fe294739077: ret    
         ↘  0x00007fe294739078: mov    rbp,rsi
            0x00007fe29473907b: mov    DWORD PTR [rsp],edx
            0x00007fe29473907e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fe294739083: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fe294739088: mov    esi,0xffffff4d
            0x00007fe29473908d: xchg   ax,ax
            0x00007fe29473908f: call   0x00007fe28cc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 45.12%  <total for region 2>

....[Hottest Regions]...............................................................................
 49.26%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 527 (54 bytes) 
 45.12%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 499 (55 bytes) 
  2.34%              kernel  [unknown] (6 bytes) 
  0.36%              kernel  [unknown] (39 bytes) 
  0.21%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.11%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (59 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (12 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%  libpthread-2.28.so  __libc_write (18 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  0.04%              kernel  [unknown] (30 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (31 bytes) 
  0.04%              kernel  [unknown] (21 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN13GrowableArrayIP11ResolveNodeE4growEi (18 bytes) 
  1.94%  <...other 99 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 49.26%         c2, level 4  org.ib.benchmark.generated.DefaultArgumentsKtBenchmark_noDefault_jmhTest::noDefault_avgt_jmhStub, version 527 
 45.12%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 499 
  4.26%              kernel  [unknown] 
  0.21%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%  libpthread-2.28.so  __libc_write 
  0.06%        libc-2.28.so  vfprintf 
  0.06%        libc-2.28.so  _IO_default_xsputn 
  0.04%        libc-2.28.so  _IO_fwrite 
  0.04%           libjvm.so  _ZN13GrowableArrayIP11ResolveNodeE4growEi 
  0.04%          ld-2.28.so  __tls_get_addr 
  0.04%  libpthread-2.28.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%      hsdis-amd64.so  print_insn 
  0.02%           libjvm.so  _ZN13ClassVerifier13verify_methodERK12methodHandleP6Thread 
  0.02%           libjvm.so  _ZN11Instruction12as_IntrinsicEv 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%      hsdis-amd64.so  oappend_maybe_intel 
  0.02%                      <unknown> 
  0.02%           libjvm.so  JVM_CurrentThread 
  0.61%  <...other 32 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 94.38%         c2, level 4
  4.26%              kernel
  0.74%           libjvm.so
  0.28%        libc-2.28.so
  0.09%  libpthread-2.28.so
  0.09%      hsdis-amd64.so
  0.08%         interpreter
  0.04%          ld-2.28.so
  0.02%                    
  0.02%         c1, level 3
....................................................................................................
100.00%  <totals>



# Run complete. Total time: 00:03:47

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                             (delta)  (factor)  (value)  Mode  Cnt  Score   Error  Units
DefaultArgumentsJavaBenchmark.default1Argument              1         2        8  avgt   15  2.569 ± 0.160  ns/op
DefaultArgumentsJavaBenchmark.default1Argument:·asm         1         2        8  avgt         NaN            ---
DefaultArgumentsJavaBenchmark.default2Arguments             1         2        8  avgt   15  2.481 ± 0.032  ns/op
DefaultArgumentsJavaBenchmark.default2Arguments:·asm        1         2        8  avgt         NaN            ---
DefaultArgumentsJavaBenchmark.noDefault                     1         2        8  avgt   15  2.766 ± 0.170  ns/op
DefaultArgumentsJavaBenchmark.noDefault:·asm                1         2        8  avgt         NaN            ---
DefaultArgumentsKtBenchmark.default1Argument                1         2        8  avgt   15  2.456 ± 0.145  ns/op
DefaultArgumentsKtBenchmark.default1Argument:·asm           1         2        8  avgt         NaN            ---
DefaultArgumentsKtBenchmark.default2Arguments               1         2        8  avgt   15  2.445 ± 0.096  ns/op
DefaultArgumentsKtBenchmark.default2Arguments:·asm          1         2        8  avgt         NaN            ---
DefaultArgumentsKtBenchmark.noDefault                       1         2        8  avgt   15  2.869 ± 0.156  ns/op
DefaultArgumentsKtBenchmark.noDefault:·asm                  1         2        8  avgt         NaN            ---
