# JMH version: 1.21
# VM version: JDK 1.8.0_202, Java HotSpot(TM) GraalVM EE 1.0.0-rc13, 25.202-b08-jvmci-0.55
# VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc13/jre/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallKtBenchmark.BimorphicKt
# Parameters: (param = 3)

# Run progress: 0.00% complete, ETA 00:02:00
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 13296.979 ns/op
# Warmup Iteration   2: 6.037 ns/op
# Warmup Iteration   3: 4.276 ns/op
# Warmup Iteration   4: 4.566 ns/op
# Warmup Iteration   5: 4.337 ns/op
Iteration   1: 4.042 ns/op
Iteration   2: 3.999 ns/op
Iteration   3: 4.033 ns/op
Iteration   4: 4.317 ns/op
Iteration   5: 4.212 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 8.33% complete, ETA 00:06:11
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 13246.448 ns/op
# Warmup Iteration   2: 6.800 ns/op
# Warmup Iteration   3: 4.585 ns/op
# Warmup Iteration   4: 4.722 ns/op
# Warmup Iteration   5: 4.471 ns/op
Iteration   1: 4.530 ns/op
Iteration   2: 4.480 ns/op
Iteration   3: 4.550 ns/op
Iteration   4: 4.412 ns/op
Iteration   5: 4.417 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 16.67% complete, ETA 00:05:37
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 18450.125 ns/op
# Warmup Iteration   2: 6.551 ns/op
# Warmup Iteration   3: 4.195 ns/op
# Warmup Iteration   4: 4.200 ns/op
# Warmup Iteration   5: 4.237 ns/op
Iteration   1: 4.246 ns/op
Iteration   2: 4.214 ns/op
Iteration   3: 4.231 ns/op
Iteration   4: 4.234 ns/op
Iteration   5: 4.226 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallKtBenchmark.BimorphicKt":
  4.276 ±(99.9%) 0.187 ns/op [Average]
  (min, avg, max) = (3.999, 4.276, 4.550), stdev = 0.175
  CI (99.9%): [4.090, 4.463] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallKtBenchmark.BimorphicKt:·asm":
PrintAssembly processed: 89719 total address lines.
Perf output processed (skipped 27.202 seconds):
 Column 1: cycles (15310 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
JVMCI, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 2187 (130 bytes) 

              0x00007efc900f404c: mov    rdx,QWORD PTR [rsp+0x28]
              0x00007efc900f4051: mov    QWORD PTR [rdx+0x28],rax
              0x00007efc900f4055: movabs r10,0x770c28d50    ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$BimorphicKtState&apos;)}
              0x00007efc900f405f: mov    QWORD PTR [rsp+0x8],0x0
         ╭    0x00007efc900f4068: jmp    0x00007efc900f40d8  ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@13 (line 195)
         │    0x00007efc900f406d: data16 xchg ax,ax         ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@18 (line 161)
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.41%  │ ↗  0x00007efc900f4070: mov    r9d,DWORD PTR [r11+0x10]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@13 (line 195)
         │ │  0x00007efc900f4074: cmp    DWORD PTR [r9*8+0x8],0xf80661e9
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=116}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
  0.33%  │ │  0x00007efc900f4080: jne    0x00007efc900f4131  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.35%  │ │  0x00007efc900f4086: mov    r9d,DWORD PTR [r10+0x6c]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@9 (line 70)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
         │ │  0x00007efc900f408a: mov    ecx,r9d
         │ │  0x00007efc900f408d: shl    ecx,0x4
  0.19%  │ │  0x00007efc900f4090: add    ecx,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@18 (line 161)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.43%  │ │  0x00007efc900f4093: imul   r9d,r9d,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg2::compute@6 (line 126)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
         │ │  0x00007efc900f4097: add    ecx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@50 (line 70)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  0.01%  │ │  0x00007efc900f409a: mov    rsi,rdi            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@22 (line 195)
  0.23%  │ │  0x00007efc900f409d: mov    edx,ecx
  2.29%  │ │  0x00007efc900f409f: call   0x00007efc900480a0  ; OopMap{[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=164}
         │ │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@22 (line 195)
         │ │                                                ;   {optimized virtual_call}
  2.55%  │ │  0x00007efc900f40a4: nop
         │ │  0x00007efc900f40a5: mov    rsi,QWORD PTR [rsp+0x30]
  0.16%  │ │  0x00007efc900f40aa: movsx  r10d,BYTE PTR [rsi+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@32 (line 197)
  2.25%  │ │  0x00007efc900f40b2: mov    r11,QWORD PTR [rsp+0x8]
         │ │  0x00007efc900f40b7: inc    r11                ;*ladd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@28 (line 196)
  0.01%  │ │  0x00007efc900f40ba: test   r10b,r10b          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
         │╭│  0x00007efc900f40bd: jne    0x00007efc900f40fd  ; OopMap{rsi=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=195}
         │││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  0.27%  │││  0x00007efc900f40c3: test   DWORD PTR [rip+0xcc99f3d],eax        # 0x00007efc9cd8e006
         │││                                                ;   {poll}
  2.74%  │││  0x00007efc900f40c9: mov    QWORD PTR [rsp+0x8],r11
         │││  0x00007efc900f40ce: movabs r10,0x770c28d50    ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@13 (line 195)
         │││                                                ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$BimorphicKtState&apos;)}
         ↘││  0x00007efc900f40d8: mov    r11,QWORD PTR [rsp+0x18]
  0.21%   ││  0x00007efc900f40dd: mov    rdi,QWORD PTR [rsp+0x20]
  2.38%   ││  0x00007efc900f40e2: mov    r9d,DWORD PTR [r11+0xc]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@13 (line 195)
  0.01%   ││  0x00007efc900f40e6: cmp    DWORD PTR [r9*8+0x8],0xf80661aa
          ││                                                ; implicit exception: deoptimizes
          ││                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=230}
          ││                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
  0.39%   │╰  0x00007efc900f40f2: je     0x00007efc900f4070
          │   0x00007efc900f40f8: jmp    0x00007efc900f4131  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@18 (line 161)
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
          │                                                 ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
          ↘   0x00007efc900f40fd: mov    QWORD PTR [rsp+0x18],r11
              0x00007efc900f4102: call   0x00007efc9c2374b0  ;   {runtime_call}
              0x00007efc900f4107: nop
....................................................................................................
 21.21%  <total for region 1>

....[Hottest Region 2]..............................................................................
JVMCI, org.openjdk.jmh.infra.Blackhole::consume, version 2130 (66 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007efc900afe20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007efc900afe24: shl    r10,0x3
            0x00007efc900afe28: cmp    rax,r10
            0x00007efc900afe2b: jne    0x00007efc90047e60  ;   {runtime_call}
            0x00007efc900afe31: nop
            0x00007efc900afe32: nop    DWORD PTR [rax+0x0]
            0x00007efc900afe39: nop    DWORD PTR [rax+0x0]
          [Verified Entry Point]
  0.02%     0x00007efc900afe40: mov    DWORD PTR [rsp-0x14000],eax
  2.63%     0x00007efc900afe47: sub    rsp,0x18
            0x00007efc900afe4b: mov    QWORD PTR [rsp+0x10],rbp
  0.01%     0x00007efc900afe50: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.28%     0x00007efc900afe57: mov    r11d,edx
  2.40%     0x00007efc900afe5a: xor    r11d,r10d          ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
            0x00007efc900afe5d: mov    r8d,edx
  0.01%     0x00007efc900afe60: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.22%     0x00007efc900afe67: cmp    r8d,r11d
         ╭  0x00007efc900afe6a: je     0x00007efc900afe83
  2.38%  │  0x00007efc900afe70: mov    rbp,QWORD PTR [rsp+0x10]
  0.01%  │  0x00007efc900afe75: add    rsp,0x18
  0.01%  │  0x00007efc900afe79: test   DWORD PTR [rip+0xccde187],eax        # 0x00007efc9cd8e006
         │                                                ;   {poll_return}
  0.25%  │  0x00007efc900afe7f: vzeroupper 
  2.86%  │  0x00007efc900afe82: ret    
         ↘  0x00007efc900afe83: mov    DWORD PTR [r15+0x29c],0xffffffed
                                                          ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
            0x00007efc900afe8e: mov    QWORD PTR [r15+0x2a8],r12
            0x00007efc900afe95: call   0x00007efc900495fe  ; OopMap{rsi=Oop off=122}
                                                          ;*istore_2 {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@4 (line 378)
                                                          ;   {runtime_call}
            0x00007efc900afe9a: nop
          [Exception Handler]
....................................................................................................
 11.10%  <total for region 2>

....[Hottest Regions]...............................................................................
 21.21%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 2187 (130 bytes) 
 11.10%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2130 (66 bytes) 
  3.60%         interpreter  method entry point (kind = zerolocals)  (14 bytes) 
  3.32%         interpreter  method entry point (kind = zerolocals)  (139 bytes) 
  2.34%         interpreter  invokevirtual  182 invokevirtual  (77 bytes) 
  1.99%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (56 bytes) 
  1.93%         interpreter  method entry point (kind = zerolocals)  (211 bytes) 
  1.48%         interpreter  invokevirtual  182 invokevirtual  (121 bytes) 
  1.39%         interpreter  ireturn  172 ireturn  (4 bytes) 
  1.17%         interpreter  areturn  176 areturn  (8 bytes) 
  1.14%         interpreter  getstatic  178 getstatic  (76 bytes) 
  1.03%         interpreter  invokeinterface  185 invokeinterface  (95 bytes) 
  1.00%              kernel  [unknown] (6 bytes) 
  0.94%         interpreter  fast_aload_0  220 fast_aload_0  (35 bytes) 
  0.80%         interpreter  ireturn  172 ireturn  (37 bytes) 
  0.74%         interpreter  invoke return entry points  (115 bytes) 
  0.73%         interpreter  invokevirtual  182 invokevirtual  (97 bytes) 
  0.71%         interpreter  invoke return entry points  (115 bytes) 
  0.69%         interpreter  invokespecial  183 invokespecial  (91 bytes) 
  0.69%         interpreter  areturn  176 areturn  (23 bytes) 
 42.00%  <...other 824 warm regions...>
....................................................................................................
 99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 21.21%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 2187 
 11.10%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2130 
  9.18%         interpreter  method entry point (kind = zerolocals)  
  5.28%         interpreter  invokevirtual  182 invokevirtual  
  3.04%         interpreter  invoke return entry points  
  2.99%              kernel  [unknown] 
  2.42%         interpreter  ireturn  172 ireturn  
  2.21%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  1.99%         interpreter  invokeinterface  185 invokeinterface  
  1.99%         interpreter  areturn  176 areturn  
  1.97%         interpreter  method entry point (kind = accessor)  
  1.75%         interpreter  getstatic  178 getstatic  
  1.69%         interpreter  invokespecial  183 invokespecial  
  1.37%         interpreter  checkcast  192 checkcast  
  1.20%         interpreter  fast_aload_0  220 fast_aload_0  
  1.16%         interpreter  instanceof  193 instanceof  
  0.99%         interpreter  aload_1  43 aload_1  
  0.90%         interpreter  _shouldnotreachhere  234 _shouldnotreachhere  
  0.89%         interpreter  invokestatic  184 invokestatic  
  0.84%         interpreter  ifeq  153 ifeq  
 25.81%  <...other 344 warm methods...>
....................................................................................................
 99.99%  <totals>

....[Distribution by Source]........................................................................
 55.88%         interpreter
 33.22%               JVMCI
  6.57%           libjvm.so
  2.99%              kernel
  0.29%        libc-2.28.so
  0.28%       perf-1490.map
  0.27%             Unknown
  0.25%  libpthread-2.28.so
  0.16%      hsdis-amd64.so
  0.05%          libjava.so
  0.01%           libzip.so
  0.01%        runtime stub
  0.01%              [vdso]
  0.01%        libverify.so
....................................................................................................
 99.99%  <totals>

PrintAssembly processed: 89891 total address lines.
Perf output processed (skipped 27.229 seconds):
 Column 1: cycles (15691 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
perf-1564.map, [unknown] (130 bytes) 

 <no assembly is recorded, native region>
....................................................................................................
 20.91%  <total for region 1>

....[Hottest Region 2]..............................................................................
JVMCI, org.openjdk.jmh.infra.Blackhole::consume, version 2195 (59 bytes) 

            #           [sp+0x20]  (sp of caller)
            0x00007fa89c0f2ea0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fa89c0f2ea4: shl    r10,0x3
            0x00007fa89c0f2ea8: cmp    rax,r10
            0x00007fa89c0f2eab: jne    0x00007fa89c047e60  ;   {runtime_call}
            0x00007fa89c0f2eb1: nop
            0x00007fa89c0f2eb2: nop    DWORD PTR [rax+0x0]
            0x00007fa89c0f2eb9: nop    DWORD PTR [rax+0x0]
          [Verified Entry Point]
            0x00007fa89c0f2ec0: mov    DWORD PTR [rsp-0x14000],eax
  2.61%     0x00007fa89c0f2ec7: sub    rsp,0x18
            0x00007fa89c0f2ecb: mov    QWORD PTR [rsp+0x10],rbp
  0.01%     0x00007fa89c0f2ed0: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.11%     0x00007fa89c0f2ed7: mov    r11d,edx
  2.22%     0x00007fa89c0f2eda: xor    r11d,r10d          ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
            0x00007fa89c0f2edd: mov    r8d,edx
  0.01%     0x00007fa89c0f2ee0: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.15%     0x00007fa89c0f2ee7: cmp    r8d,r11d
         ╭  0x00007fa89c0f2eea: je     0x00007fa89c0f2f03
  2.40%  │  0x00007fa89c0f2ef0: mov    rbp,QWORD PTR [rsp+0x10]
  0.05%  │  0x00007fa89c0f2ef5: add    rsp,0x18
  0.01%  │  0x00007fa89c0f2ef9: test   DWORD PTR [rip+0xb1b7107],eax        # 0x00007fa8a72aa006
         │                                                ;   {poll_return}
  0.11%  │  0x00007fa89c0f2eff: vzeroupper 
  2.59%  │  0x00007fa89c0f2f02: ret    
         ↘  0x00007fa89c0f2f03: mov    DWORD PTR [r15+0x29c],0xffffffed
                                                          ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
            0x00007fa89c0f2f0e: mov    QWORD PTR [r15+0x2a8],r12
            0x00007fa89c0f2f15: call   0x00007fa89c0495fe  ; OopMap{rsi=Oop off=122}
                                                          ;*istore_2 {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@4 (line 378)
                                                          ;   {runtime_call}
            0x00007fa89c0f2f1a: nop
          [Exception Handler]
....................................................................................................
 10.28%  <total for region 2>

....[Hottest Regions]...............................................................................
 20.91%       perf-1564.map  [unknown] (130 bytes) 
 10.28%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2195 (59 bytes) 
  3.75%         interpreter  method entry point (kind = zerolocals)  (14 bytes) 
  3.25%         interpreter  method entry point (kind = zerolocals)  (174 bytes) 
  2.40%         interpreter  invokevirtual  182 invokevirtual  (77 bytes) 
  2.09%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (56 bytes) 
  2.07%         interpreter  method entry point (kind = zerolocals)  (211 bytes) 
  1.63%         interpreter  invokevirtual  182 invokevirtual  (121 bytes) 
  1.17%         interpreter  getstatic  178 getstatic  (93 bytes) 
  1.15%         interpreter  areturn  176 areturn  (8 bytes) 
  1.13%         interpreter  ireturn  172 ireturn  (0 bytes) 
  1.10%         interpreter  invokeinterface  185 invokeinterface  (95 bytes) 
  0.97%         interpreter  fast_aload_0  220 fast_aload_0  (35 bytes) 
  0.90%         interpreter  aload  25 aload  (69 bytes) 
  0.80%         interpreter  invoke return entry points  (115 bytes) 
  0.80%         interpreter  ireturn  172 ireturn  (37 bytes) 
  0.79%         interpreter  invokespecial  183 invokespecial  (43 bytes) 
  0.78%         interpreter  goto  167 goto  (88 bytes) 
  0.77%         interpreter  invokevirtual  182 invokevirtual  (171 bytes) 
  0.74%         interpreter  areturn  176 areturn  (23 bytes) 
 42.50%  <...other 826 warm regions...>
....................................................................................................
 99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 21.12%       perf-1564.map  [unknown] 
 10.28%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2195 
  9.41%         interpreter  method entry point (kind = zerolocals)  
  5.45%         interpreter  invokevirtual  182 invokevirtual  
  3.04%         interpreter  invoke return entry points  
  2.26%         interpreter  invokeinterface  185 invokeinterface  
  2.24%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  2.21%              kernel  [unknown] 
  2.19%         interpreter  ireturn  172 ireturn  
  2.12%         interpreter  areturn  176 areturn  
  1.94%         interpreter  invokespecial  183 invokespecial  
  1.94%         interpreter  method entry point (kind = accessor)  
  1.92%         interpreter  getstatic  178 getstatic  
  1.22%         interpreter  fast_aload_0  220 fast_aload_0  
  1.20%         interpreter  checkcast  192 checkcast  
  1.10%         interpreter  instanceof  193 instanceof  
  1.09%         interpreter  aload_1  43 aload_1  
  1.04%         interpreter  invokestatic  184 invokestatic  
  0.98%         interpreter  goto  167 goto  
  0.94%         interpreter  _shouldnotreachhere  234 _shouldnotreachhere  
 26.30%  <...other 360 warm methods...>
....................................................................................................
 99.99%  <totals>

....[Distribution by Source]........................................................................
 57.07%         interpreter
 21.12%       perf-1564.map
 11.46%               JVMCI
  7.16%           libjvm.so
  2.21%              kernel
  0.38%        libc-2.28.so
  0.23%             Unknown
  0.17%  libpthread-2.28.so
  0.16%      hsdis-amd64.so
  0.02%          libjava.so
  0.01%              [vdso]
  0.01%           libzip.so
....................................................................................................
 99.99%  <totals>

PrintAssembly processed: 90972 total address lines.
Perf output processed (skipped 27.675 seconds):
 Column 1: cycles (15285 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
JVMCI, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 2202 (130 bytes) 

              0x00007f67140de64c: mov    rdx,QWORD PTR [rsp+0x28]
              0x00007f67140de651: mov    QWORD PTR [rdx+0x28],rax
              0x00007f67140de655: movabs r10,0x6cd13dbc8    ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$BimorphicKtState&apos;)}
              0x00007f67140de65f: mov    QWORD PTR [rsp+0x8],0x0
         ╭    0x00007f67140de668: jmp    0x00007f67140de6d8  ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@13 (line 195)
         │    0x00007f67140de66d: data16 xchg ax,ax         ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@18 (line 161)
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.39%  │ ↗  0x00007f67140de670: mov    r9d,DWORD PTR [r11+0x10]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@13 (line 195)
         │ │  0x00007f67140de674: cmp    DWORD PTR [r9*8+0x8],0xf80661e9
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=116}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
  0.10%  │ │  0x00007f67140de680: jne    0x00007f67140de731  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.45%  │ │  0x00007f67140de686: mov    r9d,DWORD PTR [r10+0x6c]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@9 (line 70)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
         │ │  0x00007f67140de68a: mov    ecx,r9d
         │ │  0x00007f67140de68d: shl    ecx,0x4
  0.11%  │ │  0x00007f67140de690: add    ecx,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@18 (line 161)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
  2.52%  │ │  0x00007f67140de693: imul   r9d,r9d,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg2::compute@6 (line 126)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
         │ │  0x00007f67140de697: add    ecx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@50 (line 70)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
         │ │  0x00007f67140de69a: mov    rsi,rdi            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@22 (line 195)
  0.14%  │ │  0x00007f67140de69d: mov    edx,ecx
  2.50%  │ │  0x00007f67140de69f: call   0x00007f67140480a0  ; OopMap{[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=164}
         │ │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@22 (line 195)
         │ │                                                ;   {optimized virtual_call}
  2.67%  │ │  0x00007f67140de6a4: nop
         │ │  0x00007f67140de6a5: mov    rsi,QWORD PTR [rsp+0x30]
  0.09%  │ │  0x00007f67140de6aa: movsx  r10d,BYTE PTR [rsi+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@32 (line 197)
  2.45%  │ │  0x00007f67140de6b2: mov    r11,QWORD PTR [rsp+0x8]
         │ │  0x00007f67140de6b7: inc    r11                ;*ladd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@28 (line 196)
         │ │  0x00007f67140de6ba: test   r10b,r10b          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
         │╭│  0x00007f67140de6bd: jne    0x00007f67140de6fd  ; OopMap{rsi=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=195}
         │││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@35 (line 197)
  0.07%  │││  0x00007f67140de6c3: test   DWORD PTR [rip+0xce5b93d],eax        # 0x00007f6720f3a006
         │││                                                ;   {poll}
  2.76%  │││  0x00007f67140de6c9: mov    QWORD PTR [rsp+0x8],r11
         │││  0x00007f67140de6ce: movabs r10,0x6cd13dbc8    ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@13 (line 195)
         │││                                                ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$BimorphicKtState&apos;)}
         ↘││  0x00007f67140de6d8: mov    r11,QWORD PTR [rsp+0x18]
  0.10%   ││  0x00007f67140de6dd: mov    rdi,QWORD PTR [rsp+0x20]
  2.45%   ││  0x00007f67140de6e2: mov    r9d,DWORD PTR [r11+0xc]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@13 (line 195)
  0.01%   ││  0x00007f67140de6e6: cmp    DWORD PTR [r9*8+0x8],0xf80661aa
          ││                                                ; implicit exception: deoptimizes
          ││                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=230}
          ││                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
  0.10%   │╰  0x00007f67140de6f2: je     0x00007f67140de670
          │   0x00007f67140de6f8: jmp    0x00007f67140de731  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark$BimorphicKtState::bimorphicCall$kotlin_vs_java_benchmarks@18 (line 161)
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark::bimorphicCall@7 (line 33)
          │                                                 ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub@19 (line 195)
          ↘   0x00007f67140de6fd: mov    QWORD PTR [rsp+0x18],r11
              0x00007f67140de702: call   0x00007f67203e34b0  ;   {runtime_call}
              0x00007f67140de707: nop
....................................................................................................
 20.92%  <total for region 1>

....[Hottest Region 2]..............................................................................
JVMCI, org.openjdk.jmh.infra.Blackhole::consume, version 2148 (66 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f67140f4a20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f67140f4a24: shl    r10,0x3
            0x00007f67140f4a28: cmp    rax,r10
            0x00007f67140f4a2b: jne    0x00007f6714047e60  ;   {runtime_call}
            0x00007f67140f4a31: nop
            0x00007f67140f4a32: nop    DWORD PTR [rax+0x0]
            0x00007f67140f4a39: nop    DWORD PTR [rax+0x0]
          [Verified Entry Point]
  0.01%     0x00007f67140f4a40: mov    DWORD PTR [rsp-0x14000],eax
  2.56%     0x00007f67140f4a47: sub    rsp,0x18
            0x00007f67140f4a4b: mov    QWORD PTR [rsp+0x10],rbp
  0.02%     0x00007f67140f4a50: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.12%     0x00007f67140f4a57: mov    r11d,edx
  2.66%     0x00007f67140f4a5a: xor    r11d,r10d          ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.01%     0x00007f67140f4a5d: mov    r8d,edx
            0x00007f67140f4a60: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.09%     0x00007f67140f4a67: cmp    r8d,r11d
         ╭  0x00007f67140f4a6a: je     0x00007f67140f4a83
  2.64%  │  0x00007f67140f4a70: mov    rbp,QWORD PTR [rsp+0x10]
  0.01%  │  0x00007f67140f4a75: add    rsp,0x18
         │  0x00007f67140f4a79: test   DWORD PTR [rip+0xce45587],eax        # 0x00007f6720f3a006
         │                                                ;   {poll_return}
  0.09%  │  0x00007f67140f4a7f: vzeroupper 
  2.87%  │  0x00007f67140f4a82: ret    
         ↘  0x00007f67140f4a83: mov    DWORD PTR [r15+0x29c],0xffffffed
                                                          ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
            0x00007f67140f4a8e: mov    QWORD PTR [r15+0x2a8],r12
            0x00007f67140f4a95: call   0x00007f67140495fe  ; OopMap{rsi=Oop off=122}
                                                          ;*istore_2 {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@4 (line 378)
                                                          ;   {runtime_call}
            0x00007f67140f4a9a: nop
          [Exception Handler]
....................................................................................................
 11.06%  <total for region 2>

....[Hottest Regions]...............................................................................
 20.92%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 2202 (130 bytes) 
 11.06%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2148 (66 bytes) 
  3.42%         interpreter  method entry point (kind = zerolocals)  (130 bytes) 
  3.19%         interpreter  method entry point (kind = zerolocals)  (14 bytes) 
  2.41%         interpreter  invokevirtual  182 invokevirtual  (77 bytes) 
  2.26%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (56 bytes) 
  2.09%         interpreter  method entry point (kind = zerolocals)  (211 bytes) 
  1.73%         interpreter  invokevirtual  182 invokevirtual  (121 bytes) 
  1.27%         interpreter  areturn  176 areturn  (8 bytes) 
  1.09%         interpreter  getstatic  178 getstatic  (93 bytes) 
  1.09%         interpreter  ireturn  172 ireturn  (4 bytes) 
  0.99%         interpreter  invokeinterface  185 invokeinterface  (150 bytes) 
  0.86%         interpreter  fast_aload_0  220 fast_aload_0  (35 bytes) 
  0.73%         interpreter  ireturn  172 ireturn  (40 bytes) 
  0.73%         interpreter  invokevirtual  182 invokevirtual  (32 bytes) 
  0.72%         interpreter  invoke return entry points  (111 bytes) 
  0.71%         interpreter  invokevirtual  182 invokevirtual  (92 bytes) 
  0.69%         interpreter  areturn  176 areturn  (23 bytes) 
  0.69%         interpreter  method entry point (kind = accessor)  (14 bytes) 
  0.69%         interpreter  invokespecial  183 invokespecial  (43 bytes) 
 42.67%  <...other 835 warm regions...>
....................................................................................................
 99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 20.92%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_BimorphicKt_jmhTest::bimorphicCall_avgt_jmhStub, version 2202 
 11.06%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2148 
  8.96%         interpreter  method entry point (kind = zerolocals)  
  5.75%         interpreter  invokevirtual  182 invokevirtual  
  3.17%         interpreter  invoke return entry points  
  2.65%              kernel  [unknown] 
  2.40%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  2.26%         interpreter  invokeinterface  185 invokeinterface  
  2.13%         interpreter  areturn  176 areturn  
  1.98%         interpreter  ireturn  172 ireturn  
  1.94%         interpreter  method entry point (kind = accessor)  
  1.90%         interpreter  invokespecial  183 invokespecial  
  1.71%         interpreter  getstatic  178 getstatic  
  1.33%         interpreter  checkcast  192 checkcast  
  1.33%         interpreter  instanceof  193 instanceof  
  1.11%         interpreter  fast_aload_0  220 fast_aload_0  
  1.10%         interpreter  aload_1  43 aload_1  
  0.98%         interpreter  _shouldnotreachhere  234 _shouldnotreachhere  
  0.93%         interpreter  invokestatic  184 invokestatic  
  0.92%         interpreter  return  177 return  
 25.46%  <...other 345 warm methods...>
....................................................................................................
 99.99%  <totals>

....[Distribution by Source]........................................................................
 56.78%         interpreter
 33.16%               JVMCI
  6.31%           libjvm.so
  2.65%              kernel
  0.40%        libc-2.28.so
  0.23%  libpthread-2.28.so
  0.18%       perf-1633.map
  0.18%             Unknown
  0.05%      hsdis-amd64.so
  0.03%        runtime stub
  0.02%          libjava.so
  0.01%                    
  0.01%              [vdso]
....................................................................................................
 99.99%  <totals>



# JMH version: 1.21
# VM version: JDK 1.8.0_202, Java HotSpot(TM) GraalVM EE 1.0.0-rc13, 25.202-b08-jvmci-0.55
# VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc13/jre/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic3Kt
# Parameters: (param = 3)

# Run progress: 25.00% complete, ETA 00:05:04
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 113905.031 ns/op
# Warmup Iteration   2: 9.514 ns/op
# Warmup Iteration   3: 4.727 ns/op
# Warmup Iteration   4: 4.727 ns/op
# Warmup Iteration   5: 4.710 ns/op
Iteration   1: 4.726 ns/op
Iteration   2: 4.745 ns/op
Iteration   3: 4.798 ns/op
Iteration   4: 4.787 ns/op
Iteration   5: 4.754 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 33.33% complete, ETA 00:04:29
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 60.382 ns/op
# Warmup Iteration   2: 6.868 ns/op
# Warmup Iteration   3: 4.825 ns/op
# Warmup Iteration   4: 4.895 ns/op
# Warmup Iteration   5: 4.903 ns/op
Iteration   1: 4.825 ns/op
Iteration   2: 4.999 ns/op
Iteration   3: 5.059 ns/op
Iteration   4: 5.147 ns/op
Iteration   5: 4.804 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 41.67% complete, ETA 00:03:57
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 50.984 ns/op
# Warmup Iteration   2: 16.787 ns/op
# Warmup Iteration   3: 5.280 ns/op
# Warmup Iteration   4: 5.309 ns/op
# Warmup Iteration   5: 5.367 ns/op
Iteration   1: 5.302 ns/op
Iteration   2: 5.285 ns/op
Iteration   3: 5.067 ns/op
Iteration   4: 5.022 ns/op
Iteration   5: 5.048 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic3Kt":
  4.958 ±(99.9%) 0.209 ns/op [Average]
  (min, avg, max) = (4.726, 4.958, 5.302), stdev = 0.195
  CI (99.9%): [4.749, 5.166] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic3Kt:·asm":
PrintAssembly processed: 91309 total address lines.
Perf output processed (skipped 26.811 seconds):
 Column 1: cycles (15668 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
JVMCI, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 2173 (162 bytes) 

              0x00007f2cf40f2b0c: mov    rdx,QWORD PTR [rsp+0x28]
              0x00007f2cf40f2b11: mov    QWORD PTR [rdx+0x28],rax
              0x00007f2cf40f2b15: movabs r10,0x6cd144308    ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic3KtState&apos;)}
              0x00007f2cf40f2b1f: mov    QWORD PTR [rsp+0x8],0x0
         ╭    0x00007f2cf40f2b28: jmp    0x00007f2cf40f2bb8  ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
         │    0x00007f2cf40f2b2d: data16 xchg ax,ax         ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 161)
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.41%  │ ↗  0x00007f2cf40f2b30: mov    r9d,DWORD PTR [r11+0x10]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
  1.03%  │ │  0x00007f2cf40f2b34: cmp    DWORD PTR [r9*8+0x8],0xf80661e9
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=116}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
  0.79%  │ │  0x00007f2cf40f2b40: jne    0x00007f2cf40f2c11  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.07%  │ │  0x00007f2cf40f2b46: mov    r9d,DWORD PTR [r11+0x14]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
  0.58%  │ │  0x00007f2cf40f2b4a: cmp    DWORD PTR [r9*8+0x8],0xf8066228
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=138}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
  0.73%  │ │  0x00007f2cf40f2b56: jne    0x00007f2cf40f2c11  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@71 (line 163)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.18%  │ │  0x00007f2cf40f2b5c: mov    r9d,DWORD PTR [r10+0x6c]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@9 (line 87)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.36%  │ │  0x00007f2cf40f2b60: mov    ecx,r9d
  0.29%  │ │  0x00007f2cf40f2b63: shl    ecx,0x4
  0.35%  │ │  0x00007f2cf40f2b66: add    ecx,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 161)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.15%  │ │  0x00007f2cf40f2b69: imul   ebx,r9d,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg2::compute@6 (line 126)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.54%  │ │  0x00007f2cf40f2b6d: add    ecx,ebx            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@50 (line 87)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.32%  │ │  0x00007f2cf40f2b6f: imul   r9d,r9d,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg3::compute@6 (line 132)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@71 (line 163)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.29%  │ │  0x00007f2cf40f2b73: add    ecx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@80 (line 87)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.20%  │ │  0x00007f2cf40f2b76: mov    rsi,rdi            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
  0.61%  │ │  0x00007f2cf40f2b79: mov    edx,ecx
  0.26%  │ │  0x00007f2cf40f2b7b: nop    DWORD PTR [rax+0x0]
  0.29%  │ │  0x00007f2cf40f2b7f: call   0x00007f2cf40480a0  ; OopMap{[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=196}
         │ │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │ │                                                ;   {optimized virtual_call}
  0.38%  │ │  0x00007f2cf40f2b84: nop
  1.07%  │ │  0x00007f2cf40f2b85: mov    rsi,QWORD PTR [rsp+0x30]
  0.78%  │ │  0x00007f2cf40f2b8a: movsx  r10d,BYTE PTR [rsi+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
  0.40%  │ │  0x00007f2cf40f2b92: mov    r11,QWORD PTR [rsp+0x8]
  1.15%  │ │  0x00007f2cf40f2b97: inc    r11                ;*ladd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@28 (line 196)
  0.47%  │ │  0x00007f2cf40f2b9a: test   r10b,r10b          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
         │╭│  0x00007f2cf40f2b9d: jne    0x00007f2cf40f2bdd  ; OopMap{rsi=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=227}
         │││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  0.34%  │││  0x00007f2cf40f2ba3: test   DWORD PTR [rip+0xb58d45d],eax        # 0x00007f2cff680006
         │││                                                ;   {poll}
  0.33%  │││  0x00007f2cf40f2ba9: mov    QWORD PTR [rsp+0x8],r11
  1.12%  │││  0x00007f2cf40f2bae: movabs r10,0x6cd144308    ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
         │││                                                ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic3KtState&apos;)}
  0.49%  ↘││  0x00007f2cf40f2bb8: mov    r11,QWORD PTR [rsp+0x18]
  0.28%   ││  0x00007f2cf40f2bbd: mov    rdi,QWORD PTR [rsp+0x20]
  0.31%   ││  0x00007f2cf40f2bc2: mov    r9d,DWORD PTR [r11+0xc]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
  1.16%   ││  0x00007f2cf40f2bc6: cmp    DWORD PTR [r9*8+0x8],0xf80661aa
          ││                                                ; implicit exception: deoptimizes
          ││                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=262}
          ││                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
  1.03%   │╰  0x00007f2cf40f2bd2: je     0x00007f2cf40f2b30
          │   0x00007f2cf40f2bd8: jmp    0x00007f2cf40f2c11  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 161)
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
          │                                                 ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
          ↘   0x00007f2cf40f2bdd: mov    QWORD PTR [rsp+0x18],r11
              0x00007f2cf40f2be2: call   0x00007f2cfeb294b0  ;   {runtime_call}
              0x00007f2cf40f2be7: nop
....................................................................................................
 20.76%  <total for region 1>

....[Hottest Region 2]..............................................................................
JVMCI, org.openjdk.jmh.infra.Blackhole::consume, version 2153 (66 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f2cf40f4860: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f2cf40f4864: shl    r10,0x3
            0x00007f2cf40f4868: cmp    rax,r10
            0x00007f2cf40f486b: jne    0x00007f2cf4047e60  ;   {runtime_call}
            0x00007f2cf40f4871: nop
            0x00007f2cf40f4872: nop    DWORD PTR [rax+0x0]
            0x00007f2cf40f4879: nop    DWORD PTR [rax+0x0]
          [Verified Entry Point]
  1.55%     0x00007f2cf40f4880: mov    DWORD PTR [rsp-0x14000],eax
  0.64%     0x00007f2cf40f4887: sub    rsp,0x18
  1.14%     0x00007f2cf40f488b: mov    QWORD PTR [rsp+0x10],rbp
  0.47%     0x00007f2cf40f4890: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.36%     0x00007f2cf40f4897: mov    r11d,edx
  0.33%     0x00007f2cf40f489a: xor    r11d,r10d          ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.05%     0x00007f2cf40f489d: mov    r8d,edx
  0.48%     0x00007f2cf40f48a0: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.39%     0x00007f2cf40f48a7: cmp    r8d,r11d
         ╭  0x00007f2cf40f48aa: je     0x00007f2cf40f48c3
  0.23%  │  0x00007f2cf40f48b0: mov    rbp,QWORD PTR [rsp+0x10]
  1.08%  │  0x00007f2cf40f48b5: add    rsp,0x18
  0.47%  │  0x00007f2cf40f48b9: test   DWORD PTR [rip+0xb58b747],eax        # 0x00007f2cff680006
         │                                                ;   {poll_return}
  0.31%  │  0x00007f2cf40f48bf: vzeroupper 
  2.29%  │  0x00007f2cf40f48c2: ret    
         ↘  0x00007f2cf40f48c3: mov    DWORD PTR [r15+0x29c],0xffffffed
                                                          ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
            0x00007f2cf40f48ce: mov    QWORD PTR [r15+0x2a8],r12
            0x00007f2cf40f48d5: call   0x00007f2cf40495fe  ; OopMap{rsi=Oop off=122}
                                                          ;*istore_2 {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@4 (line 378)
                                                          ;   {runtime_call}
            0x00007f2cf40f48da: nop
          [Exception Handler]
....................................................................................................
 10.78%  <total for region 2>

....[Hottest Regions]...............................................................................
 20.76%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 2173 (162 bytes) 
 10.78%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2153 (66 bytes) 
  3.50%         interpreter  method entry point (kind = zerolocals)  (165 bytes) 
  3.28%         interpreter  method entry point (kind = zerolocals)  (14 bytes) 
  2.06%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (56 bytes) 
  1.76%         interpreter  method entry point (kind = zerolocals)  (211 bytes) 
  1.65%         interpreter  invokevirtual  182 invokevirtual  (121 bytes) 
  1.32%         interpreter  areturn  176 areturn  (8 bytes) 
  1.26%         interpreter  ireturn  172 ireturn  (0 bytes) 
  1.25%         interpreter  invokevirtual  182 invokevirtual  (43 bytes) 
  1.10%         interpreter  getstatic  178 getstatic  (93 bytes) 
  1.07%         interpreter  invokevirtual  182 invokevirtual  (1 bytes) 
  0.94%         interpreter  fast_aload_0  220 fast_aload_0  (35 bytes) 
  0.92%         interpreter  invokevirtual  182 invokevirtual  (203 bytes) 
  0.86%         interpreter  invokeinterface  185 invokeinterface  (95 bytes) 
  0.85%           libjvm.so  _ZNK8CodeHeap10find_startEPv (83 bytes) 
  0.75%         interpreter  invoke return entry points  (111 bytes) 
  0.73%         interpreter  ireturn  172 ireturn  (40 bytes) 
  0.72%         interpreter  checkcast  192 checkcast  (40 bytes) 
  0.71%         interpreter  invoke return entry points  (111 bytes) 
 43.71%  <...other 882 warm regions...>
....................................................................................................
 99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 20.76%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 2173 
 10.78%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2153 
  8.78%         interpreter  method entry point (kind = zerolocals)  
  5.52%         interpreter  invokevirtual  182 invokevirtual  
  3.09%         interpreter  invoke return entry points  
  2.89%              kernel  [unknown] 
  2.23%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  2.23%         interpreter  ireturn  172 ireturn  
  2.11%         interpreter  areturn  176 areturn  
  2.04%         interpreter  invokeinterface  185 invokeinterface  
  1.93%         interpreter  method entry point (kind = accessor)  
  1.81%         interpreter  getstatic  178 getstatic  
  1.67%         interpreter  invokespecial  183 invokespecial  
  1.40%         interpreter  checkcast  192 checkcast  
  1.16%         interpreter  fast_aload_0  220 fast_aload_0  
  1.03%         interpreter  aload_1  43 aload_1  
  1.03%         interpreter  invokestatic  184 invokestatic  
  0.94%         interpreter  instanceof  193 instanceof  
  0.94%         interpreter  _shouldnotreachhere  234 _shouldnotreachhere  
  0.91%         interpreter  aload  25 aload  
 26.76%  <...other 377 warm methods...>
....................................................................................................
 99.99%  <totals>

....[Distribution by Source]........................................................................
 56.06%         interpreter
 32.68%               JVMCI
  7.00%           libjvm.so
  2.89%              kernel
  0.42%       perf-1680.map
  0.32%        libc-2.28.so
  0.26%             Unknown
  0.22%  libpthread-2.28.so
  0.08%      hsdis-amd64.so
  0.02%          libjava.so
  0.01%                    
  0.01%        runtime stub
  0.01%              [vdso]
  0.01%           libzip.so
  0.01%        libverify.so
....................................................................................................
 99.99%  <totals>

PrintAssembly processed: 91972 total address lines.
Perf output processed (skipped 28.790 seconds):
 Column 1: cycles (15464 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
JVMCI, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 2244 (162 bytes) 

              0x00007fb5ac10fb4c: mov    rdx,QWORD PTR [rsp+0x28]
              0x00007fb5ac10fb51: mov    QWORD PTR [rdx+0x28],rax
              0x00007fb5ac10fb55: movabs r10,0x76ef6e288    ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic3KtState&apos;)}
              0x00007fb5ac10fb5f: mov    QWORD PTR [rsp+0x8],0x0
         ╭    0x00007fb5ac10fb68: jmp    0x00007fb5ac10fbf8  ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
         │    0x00007fb5ac10fb6d: data16 xchg ax,ax         ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 161)
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.30%  │ ↗  0x00007fb5ac10fb70: mov    r9d,DWORD PTR [r11+0x10]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
  1.48%  │ │  0x00007fb5ac10fb74: cmp    DWORD PTR [r9*8+0x8],0xf80672e9
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=116}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
  0.73%  │ │  0x00007fb5ac10fb80: jne    0x00007fb5ac10fc51  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.49%  │ │  0x00007fb5ac10fb86: mov    r9d,DWORD PTR [r11+0x14]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
  0.41%  │ │  0x00007fb5ac10fb8a: cmp    DWORD PTR [r9*8+0x8],0xf8067328
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=138}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
  0.37%  │ │  0x00007fb5ac10fb96: jne    0x00007fb5ac10fc51  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@71 (line 163)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.51%  │ │  0x00007fb5ac10fb9c: mov    r9d,DWORD PTR [r10+0x6c]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@9 (line 87)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.38%  │ │  0x00007fb5ac10fba0: mov    ecx,r9d
  0.19%  │ │  0x00007fb5ac10fba3: shl    ecx,0x4
  0.17%  │ │  0x00007fb5ac10fba6: add    ecx,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 161)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.39%  │ │  0x00007fb5ac10fba9: imul   ebx,r9d,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg2::compute@6 (line 126)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.36%  │ │  0x00007fb5ac10fbad: add    ecx,ebx            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@50 (line 87)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.20%  │ │  0x00007fb5ac10fbaf: imul   r9d,r9d,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg3::compute@6 (line 132)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@71 (line 163)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.15%  │ │  0x00007fb5ac10fbb3: add    ecx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@80 (line 87)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.43%  │ │  0x00007fb5ac10fbb6: mov    rsi,rdi            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
  0.38%  │ │  0x00007fb5ac10fbb9: mov    edx,ecx
  0.22%  │ │  0x00007fb5ac10fbbb: nop    DWORD PTR [rax+0x0]
  0.16%  │ │  0x00007fb5ac10fbbf: call   0x00007fb5ac0480a0  ; OopMap{[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=196}
         │ │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │ │                                                ;   {optimized virtual_call}
  0.38%  │ │  0x00007fb5ac10fbc4: nop
  1.47%  │ │  0x00007fb5ac10fbc5: mov    rsi,QWORD PTR [rsp+0x30]
  0.52%  │ │  0x00007fb5ac10fbca: movsx  r10d,BYTE PTR [rsi+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
  0.23%  │ │  0x00007fb5ac10fbd2: mov    r11,QWORD PTR [rsp+0x8]
  1.31%  │ │  0x00007fb5ac10fbd7: inc    r11                ;*ladd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@28 (line 196)
  0.41%  │ │  0x00007fb5ac10fbda: test   r10b,r10b          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
         │╭│  0x00007fb5ac10fbdd: jne    0x00007fb5ac10fc1d  ; OopMap{rsi=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=227}
         │││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  0.19%  │││  0x00007fb5ac10fbe3: test   DWORD PTR [rip+0xa37c41d],eax        # 0x00007fb5b648c006
         │││                                                ;   {poll}
  0.22%  │││  0x00007fb5ac10fbe9: mov    QWORD PTR [rsp+0x8],r11
  1.42%  │││  0x00007fb5ac10fbee: movabs r10,0x76ef6e288    ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
         │││                                                ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic3KtState&apos;)}
  0.45%  ↘││  0x00007fb5ac10fbf8: mov    r11,QWORD PTR [rsp+0x18]
  0.29%   ││  0x00007fb5ac10fbfd: mov    rdi,QWORD PTR [rsp+0x20]
  0.21%   ││  0x00007fb5ac10fc02: mov    r9d,DWORD PTR [r11+0xc]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
  1.47%   ││  0x00007fb5ac10fc06: cmp    DWORD PTR [r9*8+0x8],0xf80672aa
          ││                                                ; implicit exception: deoptimizes
          ││                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=262}
          ││                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
  0.73%   │╰  0x00007fb5ac10fc12: je     0x00007fb5ac10fb70
          │   0x00007fb5ac10fc18: jmp    0x00007fb5ac10fc51  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 161)
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
          │                                                 ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
          ↘   0x00007fb5ac10fc1d: mov    QWORD PTR [rsp+0x18],r11
              0x00007fb5ac10fc22: call   0x00007fb5b59354b0  ;   {runtime_call}
              0x00007fb5ac10fc27: nop
....................................................................................................
 20.60%  <total for region 1>

....[Hottest Region 2]..............................................................................
JVMCI, org.openjdk.jmh.infra.Blackhole::consume, version 2221 (66 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007fb5ac10a8a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fb5ac10a8a4: shl    r10,0x3
            0x00007fb5ac10a8a8: cmp    rax,r10
            0x00007fb5ac10a8ab: jne    0x00007fb5ac047e60  ;   {runtime_call}
            0x00007fb5ac10a8b1: nop
            0x00007fb5ac10a8b2: nop    DWORD PTR [rax+0x0]
            0x00007fb5ac10a8b9: nop    DWORD PTR [rax+0x0]
          [Verified Entry Point]
  1.86%     0x00007fb5ac10a8c0: mov    DWORD PTR [rsp-0x14000],eax
  0.45%     0x00007fb5ac10a8c7: sub    rsp,0x18
  1.58%     0x00007fb5ac10a8cb: mov    QWORD PTR [rsp+0x10],rbp
  0.41%     0x00007fb5ac10a8d0: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.22%     0x00007fb5ac10a8d7: mov    r11d,edx
  0.24%     0x00007fb5ac10a8da: xor    r11d,r10d          ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.47%     0x00007fb5ac10a8dd: mov    r8d,edx
  0.43%     0x00007fb5ac10a8e0: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.21%     0x00007fb5ac10a8e7: cmp    r8d,r11d
         ╭  0x00007fb5ac10a8ea: je     0x00007fb5ac10a903
  0.18%  │  0x00007fb5ac10a8f0: mov    rbp,QWORD PTR [rsp+0x10]
  1.38%  │  0x00007fb5ac10a8f5: add    rsp,0x18
  0.39%  │  0x00007fb5ac10a8f9: test   DWORD PTR [rip+0xa381707],eax        # 0x00007fb5b648c006
         │                                                ;   {poll_return}
  0.17%  │  0x00007fb5ac10a8ff: vzeroupper 
  2.32%  │  0x00007fb5ac10a902: ret    
         ↘  0x00007fb5ac10a903: mov    DWORD PTR [r15+0x29c],0xffffffed
                                                          ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
            0x00007fb5ac10a90e: mov    QWORD PTR [r15+0x2a8],r12
            0x00007fb5ac10a915: call   0x00007fb5ac0495fe  ; OopMap{rsi=Oop off=122}
                                                          ;*istore_2 {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@4 (line 378)
                                                          ;   {runtime_call}
            0x00007fb5ac10a91a: nop
          [Exception Handler]
....................................................................................................
 11.31%  <total for region 2>

....[Hottest Regions]...............................................................................
 20.60%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 2244 (162 bytes) 
 11.31%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2221 (66 bytes) 
  3.47%         interpreter  method entry point (kind = zerolocals)  (14 bytes) 
  3.29%         interpreter  method entry point (kind = zerolocals)  (139 bytes) 
  2.24%         interpreter  invokevirtual  182 invokevirtual  (77 bytes) 
  2.06%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (56 bytes) 
  1.94%         interpreter  method entry point (kind = zerolocals)  (211 bytes) 
  1.47%         interpreter  invokevirtual  182 invokevirtual  (121 bytes) 
  1.33%         interpreter  areturn  176 areturn  (8 bytes) 
  1.09%         interpreter  ireturn  172 ireturn  (4 bytes) 
  1.07%         interpreter  getstatic  178 getstatic  (94 bytes) 
  1.00%         interpreter  fast_aload_0  220 fast_aload_0  (31 bytes) 
  0.98%         interpreter  invokeinterface  185 invokeinterface  (100 bytes) 
  0.87%         interpreter  ireturn  172 ireturn  (37 bytes) 
  0.81%         interpreter  invoke return entry points  (115 bytes) 
  0.80%         interpreter  invokevirtual  182 invokevirtual  (129 bytes) 
  0.78%         interpreter  method entry point (kind = accessor)  (115 bytes) 
  0.75%         interpreter  areturn  176 areturn  (23 bytes) 
  0.74%         interpreter  invokespecial  183 invokespecial  (91 bytes) 
  0.73%         interpreter  invoke return entry points  (134 bytes) 
 42.66%  <...other 850 warm regions...>
....................................................................................................
 99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 20.60%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 2244 
 11.31%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2221 
  8.96%         interpreter  method entry point (kind = zerolocals)  
  5.14%         interpreter  invokevirtual  182 invokevirtual  
  3.05%         interpreter  invoke return entry points  
  2.75%              kernel  [unknown] 
  2.29%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  2.24%         interpreter  invokeinterface  185 invokeinterface  
  2.24%         interpreter  areturn  176 areturn  
  2.22%         interpreter  ireturn  172 ireturn  
  2.00%         interpreter  method entry point (kind = accessor)  
  1.90%         interpreter  invokespecial  183 invokespecial  
  1.67%         interpreter  getstatic  178 getstatic  
  1.23%         interpreter  instanceof  193 instanceof  
  1.16%         interpreter  fast_aload_0  220 fast_aload_0  
  1.13%         interpreter  checkcast  192 checkcast  
  1.04%         interpreter  aload_1  43 aload_1  
  1.00%         interpreter  _shouldnotreachhere  234 _shouldnotreachhere  
  0.95%         interpreter  goto  167 goto  
  0.85%         interpreter  invokestatic  184 invokestatic  
 26.25%  <...other 357 warm methods...>
....................................................................................................
 99.99%  <totals>

....[Distribution by Source]........................................................................
 55.61%         interpreter
 33.26%               JVMCI
  7.10%           libjvm.so
  2.75%              kernel
  0.36%        libc-2.28.so
  0.33%       perf-1734.map
  0.25%  libpthread-2.28.so
  0.21%             Unknown
  0.09%      hsdis-amd64.so
  0.03%          libjava.so
  0.01%        runtime stub
  0.01%           libzip.so
....................................................................................................
 99.99%  <totals>

PrintAssembly processed: 91786 total address lines.
Perf output processed (skipped 27.706 seconds):
 Column 1: cycles (15609 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
JVMCI, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 2248 (162 bytes) 

              0x00007fb93fedf30c: mov    rdx,QWORD PTR [rsp+0x28]
              0x00007fb93fedf311: mov    QWORD PTR [rdx+0x28],rax
              0x00007fb93fedf315: movabs r10,0x6cd14c9f0    ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic3KtState&apos;)}
              0x00007fb93fedf31f: mov    QWORD PTR [rsp+0x8],0x0
         ╭    0x00007fb93fedf328: jmp    0x00007fb93fedf3b8  ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
         │    0x00007fb93fedf32d: data16 xchg ax,ax         ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 161)
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.33%  │ ↗  0x00007fb93fedf330: mov    r9d,DWORD PTR [r11+0x10]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
  1.41%  │ │  0x00007fb93fedf334: cmp    DWORD PTR [r9*8+0x8],0xf80670e9
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=116}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
  0.65%  │ │  0x00007fb93fedf340: jne    0x00007fb93fedf411  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.29%  │ │  0x00007fb93fedf346: mov    r9d,DWORD PTR [r11+0x14]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
  0.45%  │ │  0x00007fb93fedf34a: cmp    DWORD PTR [r9*8+0x8],0xf8067128
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=138}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
  0.58%  │ │  0x00007fb93fedf356: jne    0x00007fb93fedf411  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@71 (line 163)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.20%  │ │  0x00007fb93fedf35c: mov    r9d,DWORD PTR [r10+0x6c]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@9 (line 87)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.42%  │ │  0x00007fb93fedf360: mov    ecx,r9d
  0.24%  │ │  0x00007fb93fedf363: shl    ecx,0x4
  0.21%  │ │  0x00007fb93fedf366: add    ecx,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 161)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.47%  │ │  0x00007fb93fedf369: imul   ebx,r9d,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg2::compute@6 (line 126)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.44%  │ │  0x00007fb93fedf36d: add    ecx,ebx            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@50 (line 87)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.27%  │ │  0x00007fb93fedf36f: imul   r9d,r9d,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg3::compute@6 (line 132)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@71 (line 163)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  0.22%  │ │  0x00007fb93fedf373: add    ecx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@80 (line 87)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
  1.45%  │ │  0x00007fb93fedf376: mov    rsi,rdi            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
  0.42%  │ │  0x00007fb93fedf379: mov    edx,ecx
  0.21%  │ │  0x00007fb93fedf37b: nop    DWORD PTR [rax+0x0]
  0.23%  │ │  0x00007fb93fedf37f: call   0x00007fb93fe2c0a0  ; OopMap{[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=196}
         │ │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@22 (line 195)
         │ │                                                ;   {optimized virtual_call}
  0.30%  │ │  0x00007fb93fedf384: nop
  1.38%  │ │  0x00007fb93fedf385: mov    rsi,QWORD PTR [rsp+0x30]
  0.61%  │ │  0x00007fb93fedf38a: movsx  r10d,BYTE PTR [rsi+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@32 (line 197)
  0.24%  │ │  0x00007fb93fedf392: mov    r11,QWORD PTR [rsp+0x8]
  1.37%  │ │  0x00007fb93fedf397: inc    r11                ;*ladd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@28 (line 196)
  0.51%  │ │  0x00007fb93fedf39a: test   r10b,r10b          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
         │╭│  0x00007fb93fedf39d: jne    0x00007fb93fedf3dd  ; OopMap{rsi=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=227}
         │││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@35 (line 197)
  0.33%  │││  0x00007fb93fedf3a3: test   DWORD PTR [rip+0x9e1cc5d],eax        # 0x00007fb949cfc006
         │││                                                ;   {poll}
  0.29%  │││  0x00007fb93fedf3a9: mov    QWORD PTR [rsp+0x8],r11
  1.33%  │││  0x00007fb93fedf3ae: movabs r10,0x6cd14c9f0    ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
         │││                                                ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic3KtState&apos;)}
  0.38%  ↘││  0x00007fb93fedf3b8: mov    r11,QWORD PTR [rsp+0x18]
  0.20%   ││  0x00007fb93fedf3bd: mov    rdi,QWORD PTR [rsp+0x20]
  0.24%   ││  0x00007fb93fedf3c2: mov    r9d,DWORD PTR [r11+0xc]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@13 (line 195)
  1.43%   ││  0x00007fb93fedf3c6: cmp    DWORD PTR [r9*8+0x8],0xf80670aa
          ││                                                ; implicit exception: deoptimizes
          ││                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=262}
          ││                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
  0.74%   │╰  0x00007fb93fedf3d2: je     0x00007fb93fedf330
          │   0x00007fb93fedf3d8: jmp    0x00007fb93fedf411  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic3KtState::megamorphic3Call$kotlin_vs_java_benchmarks@18 (line 161)
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic3Call@7 (line 39)
          │                                                 ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub@19 (line 195)
          ↘   0x00007fb93fedf3dd: mov    QWORD PTR [rsp+0x18],r11
              0x00007fb93fedf3e2: call   0x00007fb9491a54b0  ;   {runtime_call}
              0x00007fb93fedf3e7: nop
....................................................................................................
 20.83%  <total for region 1>

....[Hottest Region 2]..............................................................................
JVMCI, org.openjdk.jmh.infra.Blackhole::consume, version 2216 (66 bytes) 

             # parm0:    rdx       = int
             #           [sp+0x20]  (sp of caller)
             0x00007fb93fe93ca0: mov    r10d,DWORD PTR [rsi+0x8]
             0x00007fb93fe93ca4: shl    r10,0x3
             0x00007fb93fe93ca8: cmp    rax,r10
             0x00007fb93fe93cab: jne    0x00007fb93fe2be60  ;   {runtime_call}
             0x00007fb93fe93cb1: nop
             0x00007fb93fe93cb2: nop    DWORD PTR [rax+0x0]
         │   0x00007fb93fe93cb9: nop    DWORD PTR [rax+0x0]
         │ [Verified Entry Point]
  1.82%  │   0x00007fb93fe93cc0: mov    DWORD PTR [rsp-0x14000],eax
  0.35%  │   0x00007fb93fe93cc7: sub    rsp,0x18
  1.29%  │   0x00007fb93fe93ccb: mov    QWORD PTR [rsp+0x10],rbp
  0.49%  │   0x00007fb93fe93cd0: mov    r10d,DWORD PTR [rsi+0xb0]
         │                                                 ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.19%  │   0x00007fb93fe93cd7: mov    r11d,edx
  0.24%  │   0x00007fb93fe93cda: xor    r11d,r10d          ;*ixor {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  1.51%  │   0x00007fb93fe93cdd: mov    r8d,edx
  0.34%  │   0x00007fb93fe93ce0: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.21%  │   0x00007fb93fe93ce7: cmp    r8d,r11d
         │╭  0x00007fb93fe93cea: je     0x00007fb93fe93d03
  0.16%  ││  0x00007fb93fe93cf0: mov    rbp,QWORD PTR [rsp+0x10]
  1.33%  ││  0x00007fb93fe93cf5: add    rsp,0x18
  0.37%  ││  0x00007fb93fe93cf9: test   DWORD PTR [rip+0x9e68307],eax        # 0x00007fb949cfc006
         ││                                                ;   {poll_return}
  0.21%  ││  0x00007fb93fe93cff: vzeroupper 
  2.29%  ││  0x00007fb93fe93d02: ret    
         │↘  0x00007fb93fe93d03: mov    DWORD PTR [r15+0x29c],0xffffffed
         │                                                 ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
         │   0x00007fb93fe93d0e: mov    QWORD PTR [r15+0x2a8],r12
         │   0x00007fb93fe93d15: call   0x00007fb93fe2d5fe  ; OopMap{rsi=Oop off=122}
         │                                                 ;*istore_2 {reexecute=1 rethrow=0 return_oop=0}
         │                                                 ; - org.openjdk.jmh.infra.Blackhole::consume@4 (line 378)
         │                                                 ;   {runtime_call}
             0x00007fb93fe93d1a: nop
           [Exception Handler]
....................................................................................................
 10.81%  <total for region 2>

....[Hottest Regions]...............................................................................
 20.83%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 2248 (162 bytes) 
 10.81%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2216 (66 bytes) 
  3.18%         interpreter  method entry point (kind = zerolocals)  (14 bytes) 
  3.13%         interpreter  method entry point (kind = zerolocals)  (115 bytes) 
  2.31%         interpreter  areturn  176 areturn  (4 bytes) 
  2.09%         interpreter  method entry point (kind = zerolocals)  (211 bytes) 
  2.02%         interpreter  ireturn  172 ireturn  (8 bytes) 
  1.93%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (56 bytes) 
  1.61%         interpreter  invokevirtual  182 invokevirtual  (121 bytes) 
  1.31%         interpreter  invokevirtual  182 invokevirtual  (30 bytes) 
  1.10%         interpreter  fast_aload_0  220 fast_aload_0  (69 bytes) 
  1.09%         interpreter  getstatic  178 getstatic  (93 bytes) 
  1.05%         interpreter  invokevirtual  182 invokevirtual  (1 bytes) 
  0.94%         interpreter  invokeinterface  185 invokeinterface  (109 bytes) 
  0.86%         interpreter  invokevirtual  182 invokevirtual  (161 bytes) 
  0.83%         interpreter  aload  25 aload  (60 bytes) 
  0.80%         interpreter  ireturn  172 ireturn  (37 bytes) 
  0.77%         interpreter  invoke return entry points  (105 bytes) 
  0.71%         interpreter  method entry point (kind = accessor)  (14 bytes) 
  0.69%         interpreter  goto  167 goto  (93 bytes) 
 41.92%  <...other 822 warm regions...>
....................................................................................................
 99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 20.83%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic3Kt_jmhTest::megamorphic3Call_avgt_jmhStub, version 2248 
 10.81%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2216 
  8.67%         interpreter  method entry point (kind = zerolocals)  
  5.40%         interpreter  invokevirtual  182 invokevirtual  
  3.13%         interpreter  areturn  176 areturn  
  2.99%         interpreter  ireturn  172 ireturn  
  2.81%              kernel  [unknown] 
  2.75%         interpreter  invoke return entry points  
  2.33%         interpreter  invokeinterface  185 invokeinterface  
  2.11%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  1.86%         interpreter  method entry point (kind = accessor)  
  1.76%         interpreter  getstatic  178 getstatic  
  1.74%         interpreter  invokespecial  183 invokespecial  
  1.23%         interpreter  checkcast  192 checkcast  
  1.16%         interpreter  instanceof  193 instanceof  
  1.10%         interpreter  fast_aload_0  220 fast_aload_0  
  1.02%         interpreter  aload_1  43 aload_1  
  0.97%         interpreter  return  177 return  
  0.95%         interpreter  invokestatic  184 invokestatic  
  0.90%         interpreter  goto  167 goto  
 25.45%  <...other 337 warm methods...>
....................................................................................................
 99.99%  <totals>

....[Distribution by Source]........................................................................
 56.54%         interpreter
 32.75%               JVMCI
  6.68%           libjvm.so
  2.81%              kernel
  0.38%        libc-2.28.so
  0.24%             Unknown
  0.23%  libpthread-2.28.so
  0.18%       perf-1775.map
  0.11%      hsdis-amd64.so
  0.04%          libjava.so
  0.02%           libzip.so
  0.01%        runtime stub
....................................................................................................
 99.99%  <totals>



# JMH version: 1.21
# VM version: JDK 1.8.0_202, Java HotSpot(TM) GraalVM EE 1.0.0-rc13, 25.202-b08-jvmci-0.55
# VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc13/jre/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic4Kt
# Parameters: (param = 3)

# Run progress: 50.00% complete, ETA 00:03:23
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 11257.882 ns/op
# Warmup Iteration   2: 31.128 ns/op
# Warmup Iteration   3: 5.047 ns/op
# Warmup Iteration   4: 5.187 ns/op
# Warmup Iteration   5: 5.527 ns/op
Iteration   1: 5.534 ns/op
Iteration   2: 5.450 ns/op
Iteration   3: 5.493 ns/op
Iteration   4: 5.502 ns/op
Iteration   5: 5.474 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 58.33% complete, ETA 00:02:49
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 12855.131 ns/op
# Warmup Iteration   2: 9.397 ns/op
# Warmup Iteration   3: 5.762 ns/op
# Warmup Iteration   4: 5.550 ns/op
# Warmup Iteration   5: 5.473 ns/op
Iteration   1: 5.112 ns/op
Iteration   2: 5.109 ns/op
Iteration   3: 5.128 ns/op
Iteration   4: 5.232 ns/op
Iteration   5: 5.364 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 66.67% complete, ETA 00:02:15
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 13022.461 ns/op
# Warmup Iteration   2: 10.399 ns/op
# Warmup Iteration   3: 5.438 ns/op
# Warmup Iteration   4: 5.277 ns/op
# Warmup Iteration   5: 5.280 ns/op
Iteration   1: 4.939 ns/op
Iteration   2: 4.914 ns/op
Iteration   3: 5.016 ns/op
Iteration   4: 5.106 ns/op
Iteration   5: 5.062 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic4Kt":
  5.229 ±(99.9%) 0.235 ns/op [Average]
  (min, avg, max) = (4.914, 5.229, 5.534), stdev = 0.219
  CI (99.9%): [4.994, 5.463] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallKtBenchmark.Megamorphic4Kt:·asm":
PrintAssembly processed: 92068 total address lines.
Perf output processed (skipped 27.759 seconds):
 Column 1: cycles (15252 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
JVMCI, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 2248 (186 bytes) 

              0x00007f6cefa5928c: mov    rdx,QWORD PTR [rsp+0x28]
              0x00007f6cefa59291: mov    QWORD PTR [rdx+0x28],rax
              0x00007f6cefa59295: movabs r10,0x772a34898    ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic4KtState&apos;)}
              0x00007f6cefa5929f: mov    QWORD PTR [rsp+0x8],0x0
         ╭    0x00007f6cefa592a8: jmp    0x00007f6cefa59350  ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@13 (line 195)
         │    0x00007f6cefa592ad: data16 xchg ax,ax         ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 161)
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.97%  │ ↗  0x00007f6cefa592b0: mov    r9d,DWORD PTR [r11+0x10]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@13 (line 195)
  0.01%  │ │  0x00007f6cefa592b4: cmp    DWORD PTR [r9*8+0x8],0xf80662e9
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=116}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
  0.10%  │ │  0x00007f6cefa592c0: jne    0x00007f6cefa593c6  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.05%  │ │  0x00007f6cefa592c6: mov    r9d,DWORD PTR [r11+0x14]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@13 (line 195)
  0.01%  │ │  0x00007f6cefa592ca: cmp    DWORD PTR [r9*8+0x8],0xf8066328
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=138}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
  0.05%  │ │  0x00007f6cefa592d6: jne    0x00007f6cefa593c6  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@71 (line 163)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.02%  │ │  0x00007f6cefa592dc: mov    r9d,DWORD PTR [r11+0x18]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@13 (line 195)
  0.02%  │ │  0x00007f6cefa592e0: cmp    DWORD PTR [r9*8+0x8],0xf8066367
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=160}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg4&apos;)}
  0.10%  │ │  0x00007f6cefa592ec: jne    0x00007f6cefa593c6  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@101 (line 164)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.00%  │ │  0x00007f6cefa592f2: mov    r9d,DWORD PTR [r10+0x6c]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@9 (line 105)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.01%  │ │  0x00007f6cefa592f6: mov    ecx,r9d
  0.01%  │ │  0x00007f6cefa592f9: shl    ecx,0x4
  0.03%  │ │  0x00007f6cefa592fc: add    ecx,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 161)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  1.95%  │ │  0x00007f6cefa592ff: imul   ebx,r9d,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg2::compute@6 (line 126)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.01%  │ │  0x00007f6cefa59303: add    ecx,ebx            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@50 (line 105)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │ │  0x00007f6cefa59305: imul   ebx,r9d,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg3::compute@6 (line 132)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@71 (line 163)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.05%  │ │  0x00007f6cefa59309: add    ecx,ebx            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@80 (line 105)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.13%  │ │  0x00007f6cefa5930b: imul   r9d,r9d,0x1d       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg4::compute@6 (line 138)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@101 (line 164)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.02%  │ │  0x00007f6cefa5930f: add    ecx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@110 (line 105)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.01%  │ │  0x00007f6cefa59312: mov    rsi,rdi            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
  0.07%  │ │  0x00007f6cefa59315: mov    edx,ecx
  2.19%  │ │  0x00007f6cefa59317: call   0x00007f6cef9bc0a0  ; OopMap{[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=220}
         │ │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │ │                                                ;   {optimized virtual_call}
  2.28%  │ │  0x00007f6cefa5931c: nop
  0.04%  │ │  0x00007f6cefa5931d: mov    rsi,QWORD PTR [rsp+0x30]
  0.02%  │ │  0x00007f6cefa59322: movsx  r10d,BYTE PTR [rsi+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
  1.96%  │ │  0x00007f6cefa5932a: mov    r11,QWORD PTR [rsp+0x8]
  0.01%  │ │  0x00007f6cefa5932f: inc    r11                ;*ladd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@28 (line 196)
  0.01%  │ │  0x00007f6cefa59332: test   r10b,r10b          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
         │╭│  0x00007f6cefa59335: jne    0x00007f6cefa59375  ; OopMap{rsi=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=251}
         │││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.07%  │││  0x00007f6cefa5933b: test   DWORD PTR [rip+0x9d47cc5],eax        # 0x00007f6cf97a1006
         │││                                                ;   {poll}
  1.98%  │││  0x00007f6cefa59341: mov    QWORD PTR [rsp+0x8],r11
  0.01%  │││  0x00007f6cefa59346: movabs r10,0x772a34898    ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@13 (line 195)
         │││                                                ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic4KtState&apos;)}
  0.01%  ↘││  0x00007f6cefa59350: mov    r11,QWORD PTR [rsp+0x18]
  0.04%   ││  0x00007f6cefa59355: mov    rdi,QWORD PTR [rsp+0x20]
  2.13%   ││  0x00007f6cefa5935a: mov    r9d,DWORD PTR [r11+0xc]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@13 (line 195)
  0.02%   ││  0x00007f6cefa5935e: cmp    DWORD PTR [r9*8+0x8],0xf80662aa
          ││                                                ; implicit exception: deoptimizes
          ││                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=286}
          ││                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
  0.15%   │╰  0x00007f6cefa5936a: je     0x00007f6cefa592b0
          │   0x00007f6cefa59370: jmp    0x00007f6cefa593c6  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 161)
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
          │                                                 ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
          ↘   0x00007f6cefa59375: mov    QWORD PTR [rsp+0x18],r11
              0x00007f6cefa5937a: call   0x00007f6cf8c4a4b0  ;   {runtime_call}
              0x00007f6cefa5937f: nop
....................................................................................................
 23.54%  <total for region 1>

....[Hottest Regions]...............................................................................
 23.54%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 2248 (186 bytes) 
  8.68%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2220 (66 bytes) 
  3.65%         interpreter  method entry point (kind = zerolocals)  (14 bytes) 
  3.42%         interpreter  method entry point (kind = zerolocals)  (139 bytes) 
  2.07%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (56 bytes) 
  1.97%         interpreter  method entry point (kind = zerolocals)  (211 bytes) 
  1.55%         interpreter  invokevirtual  182 invokevirtual  (121 bytes) 
  1.27%         interpreter  invokevirtual  182 invokevirtual  (43 bytes) 
  1.25%         interpreter  areturn  176 areturn  (4 bytes) 
  1.19%         interpreter  ireturn  172 ireturn  (8 bytes) 
  1.05%         interpreter  invokevirtual  182 invokevirtual  (1 bytes) 
  0.95%         interpreter  invokevirtual  182 invokevirtual  (129 bytes) 
  0.92%         interpreter  aload  25 aload  (69 bytes) 
  0.85%         interpreter  fast_aload_0  220 fast_aload_0  (31 bytes) 
  0.85%         interpreter  invokeinterface  185 invokeinterface  (95 bytes) 
  0.77%         interpreter  invoke return entry points  (134 bytes) 
  0.73%         interpreter  invokespecial  183 invokespecial  (60 bytes) 
  0.73%         interpreter  goto  167 goto  (70 bytes) 
  0.73%         interpreter  areturn  176 areturn  (23 bytes) 
  0.71%         interpreter  method entry point (kind = accessor)  (115 bytes) 
 43.14%  <...other 847 warm regions...>
....................................................................................................
 99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 23.54%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 2248 
  9.27%         interpreter  method entry point (kind = zerolocals)  
  8.68%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2220 
  5.52%         interpreter  invokevirtual  182 invokevirtual  
  2.95%         interpreter  invoke return entry points  
  2.51%              kernel  [unknown] 
  2.28%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  2.14%         interpreter  areturn  176 areturn  
  2.11%         interpreter  ireturn  172 ireturn  
  1.91%         interpreter  invokeinterface  185 invokeinterface  
  1.88%         interpreter  method entry point (kind = accessor)  
  1.80%         interpreter  invokespecial  183 invokespecial  
  1.72%         interpreter  getstatic  178 getstatic  
  1.15%         interpreter  instanceof  193 instanceof  
  1.09%         interpreter  checkcast  192 checkcast  
  1.09%         interpreter  fast_aload_0  220 fast_aload_0  
  1.08%         interpreter  invokestatic  184 invokestatic  
  1.07%         interpreter  aload_1  43 aload_1  
  1.02%         interpreter  goto  167 goto  
  0.92%         interpreter  aload  25 aload  
 26.27%  <...other 356 warm methods...>
....................................................................................................
 99.99%  <totals>

....[Distribution by Source]........................................................................
 55.95%         interpreter
 33.37%               JVMCI
  6.75%           libjvm.so
  2.51%              kernel
  0.45%        libc-2.28.so
  0.32%       perf-1831.map
  0.29%  libpthread-2.28.so
  0.26%             Unknown
  0.07%      hsdis-amd64.so
  0.02%          libjava.so
  0.01%           libzip.so
....................................................................................................
 99.99%  <totals>

PrintAssembly processed: 91454 total address lines.
Perf output processed (skipped 29.719 seconds):
 Column 1: cycles (10725 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
perf-1872.map, [unknown] (186 bytes) 

 <no assembly is recorded, native region>
....................................................................................................
 24.16%  <total for region 1>

....[Hottest Regions]...............................................................................
 24.16%       perf-1872.map  [unknown] (186 bytes) 
  8.90%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2228 (59 bytes) 
  3.34%         interpreter  method entry point (kind = zerolocals)  (14 bytes) 
  3.01%         interpreter  method entry point (kind = zerolocals)  (115 bytes) 
  1.96%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (56 bytes) 
  1.85%         interpreter  method entry point (kind = zerolocals)  (211 bytes) 
  1.72%         interpreter  invokevirtual  182 invokevirtual  (121 bytes) 
  1.38%         interpreter  invokevirtual  182 invokevirtual  (43 bytes) 
  1.23%         interpreter  areturn  176 areturn  (4 bytes) 
  1.22%         interpreter  ireturn  172 ireturn  (0 bytes) 
  1.10%         interpreter  aload_1  43 aload_1  (70 bytes) 
  1.10%         interpreter  invokevirtual  182 invokevirtual  (1 bytes) 
  1.05%         interpreter  invokeinterface  185 invokeinterface  (95 bytes) 
  1.03%         interpreter  getstatic  178 getstatic  (76 bytes) 
  0.88%         interpreter  goto  167 goto  (117 bytes) 
  0.83%         interpreter  ireturn  172 ireturn  (37 bytes) 
  0.82%         interpreter  fast_aload_0  220 fast_aload_0  (35 bytes) 
  0.79%         interpreter  invokevirtual  182 invokevirtual  (129 bytes) 
  0.78%         interpreter  method entry point (kind = accessor)  (115 bytes) 
  0.74%         interpreter  invokespecial  183 invokespecial  (91 bytes) 
 42.08%  <...other 728 warm regions...>
....................................................................................................
 99.97%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 24.43%       perf-1872.map  [unknown] 
  8.90%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2228 
  8.44%         interpreter  method entry point (kind = zerolocals)  
  5.64%         interpreter  invokevirtual  182 invokevirtual  
  3.01%         interpreter  invoke return entry points  
  2.47%         interpreter  invokeinterface  185 invokeinterface  
  2.20%         interpreter  ireturn  172 ireturn  
  2.12%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  2.09%         interpreter  areturn  176 areturn  
  2.08%              kernel  [unknown] 
  2.00%         interpreter  method entry point (kind = accessor)  
  1.79%         interpreter  invokespecial  183 invokespecial  
  1.75%         interpreter  getstatic  178 getstatic  
  1.28%         interpreter  checkcast  192 checkcast  
  1.13%         interpreter  _shouldnotreachhere  234 _shouldnotreachhere  
  1.10%         interpreter  aload_1  43 aload_1  
  1.05%         interpreter  instanceof  193 instanceof  
  1.01%         interpreter  goto  167 goto  
  1.00%         interpreter  fast_aload_0  220 fast_aload_0  
  0.99%         interpreter  invokestatic  184 invokestatic  
 25.51%  <...other 320 warm methods...>
....................................................................................................
 99.97%  <totals>

....[Distribution by Source]........................................................................
 55.78%         interpreter
 24.43%       perf-1872.map
 10.73%               JVMCI
  6.00%           libjvm.so
  2.08%              kernel
  0.44%        libc-2.28.so
  0.23%             Unknown
  0.19%  libpthread-2.28.so
  0.06%      hsdis-amd64.so
  0.03%          libjava.so
  0.01%        runtime stub
  0.01%           libzip.so
....................................................................................................
 99.97%  <totals>

PrintAssembly processed: 91505 total address lines.
Perf output processed (skipped 27.149 seconds):
 Column 1: cycles (15583 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
JVMCI, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 2216 (186 bytes) 

              0x00007fcec4108a4c: mov    rdx,QWORD PTR [rsp+0x28]
              0x00007fcec4108a51: mov    QWORD PTR [rdx+0x28],rax
              0x00007fcec4108a55: movabs r10,0x6cd150c80    ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic4KtState&apos;)}
              0x00007fcec4108a5f: mov    QWORD PTR [rsp+0x8],0x0
         ╭    0x00007fcec4108a68: jmp    0x00007fcec4108b10  ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@13 (line 195)
         │    0x00007fcec4108a6d: data16 xchg ax,ax         ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 161)
         │                                                  ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │                                                  ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.16%  │ ↗  0x00007fcec4108a70: mov    r9d,DWORD PTR [r11+0x10]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@13 (line 195)
         │ │  0x00007fcec4108a74: cmp    DWORD PTR [r9*8+0x8],0xf80661e9
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=116}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg2&apos;)}
  0.04%  │ │  0x00007fcec4108a80: jne    0x00007fcec4108b86  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.18%  │ │  0x00007fcec4108a86: mov    r9d,DWORD PTR [r11+0x14]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@13 (line 195)
         │ │  0x00007fcec4108a8a: cmp    DWORD PTR [r9*8+0x8],0xf8066228
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=138}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg3&apos;)}
  0.02%  │ │  0x00007fcec4108a96: jne    0x00007fcec4108b86  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@71 (line 163)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.02%  │ │  0x00007fcec4108a9c: mov    r9d,DWORD PTR [r11+0x18]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@13 (line 195)
         │ │  0x00007fcec4108aa0: cmp    DWORD PTR [r9*8+0x8],0xf8066267
         │ │                                                ; implicit exception: deoptimizes
         │ │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=160}
         │ │                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg4&apos;)}
  0.01%  │ │  0x00007fcec4108aac: jne    0x00007fcec4108b86  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@101 (line 164)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.02%  │ │  0x00007fcec4108ab2: mov    r9d,DWORD PTR [r10+0x6c]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@9 (line 105)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │ │  0x00007fcec4108ab6: mov    ecx,r9d
         │ │  0x00007fcec4108ab9: shl    ecx,0x4
  0.01%  │ │  0x00007fcec4108abc: add    ecx,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 161)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.27%  │ │  0x00007fcec4108abf: imul   ebx,r9d,0x13       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg2::compute@6 (line 126)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@41 (line 162)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │ │  0x00007fcec4108ac3: add    ecx,ebx            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@50 (line 105)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.01%  │ │  0x00007fcec4108ac5: imul   ebx,r9d,0x17       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg3::compute@6 (line 132)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@71 (line 163)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  0.01%  │ │  0x00007fcec4108ac9: add    ecx,ebx            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@80 (line 105)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
  2.05%  │ │  0x00007fcec4108acb: imul   r9d,r9d,0x1d       ;*imul {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg4::compute@6 (line 138)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@101 (line 164)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │ │  0x00007fcec4108acf: add    ecx,r9d            ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@110 (line 105)
         │ │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
         │ │  0x00007fcec4108ad2: mov    rsi,rdi            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
  0.01%  │ │  0x00007fcec4108ad5: mov    edx,ecx
  2.03%  │ │  0x00007fcec4108ad7: call   0x00007fcec40480a0  ; OopMap{[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=220}
         │ │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@22 (line 195)
         │ │                                                ;   {optimized virtual_call}
  2.34%  │ │  0x00007fcec4108adc: nop
         │ │  0x00007fcec4108add: mov    rsi,QWORD PTR [rsp+0x30]
         │ │  0x00007fcec4108ae2: movsx  r10d,BYTE PTR [rsi+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@32 (line 197)
  2.02%  │ │  0x00007fcec4108aea: mov    r11,QWORD PTR [rsp+0x8]
         │ │  0x00007fcec4108aef: inc    r11                ;*ladd {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@28 (line 196)
  0.01%  │ │  0x00007fcec4108af2: test   r10b,r10b          ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │ │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
         │╭│  0x00007fcec4108af5: jne    0x00007fcec4108b35  ; OopMap{rsi=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=251}
         │││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@35 (line 197)
  0.01%  │││  0x00007fcec4108afb: test   DWORD PTR [rip+0xa2e0505],eax        # 0x00007fcece3e9006
         │││                                                ;   {poll}
  2.08%  │││  0x00007fcec4108b01: mov    QWORD PTR [rsp+0x8],r11
  0.01%  │││  0x00007fcec4108b06: movabs r10,0x6cd150c80    ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@13 (line 195)
         │││                                                ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$Megamorphic4KtState&apos;)}
         ↘││  0x00007fcec4108b10: mov    r11,QWORD PTR [rsp+0x18]
  0.01%   ││  0x00007fcec4108b15: mov    rdi,QWORD PTR [rsp+0x20]
  2.12%   ││  0x00007fcec4108b1a: mov    r9d,DWORD PTR [r11+0xc]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@13 (line 195)
  0.01%   ││  0x00007fcec4108b1e: cmp    DWORD PTR [r9*8+0x8],0xf80661aa
          ││                                                ; implicit exception: deoptimizes
          ││                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=286}
          ││                                                ;   {metadata(&apos;org/ib/benchmark/MegamorphicCallKtBenchmark$VirtualCallKtAlg1&apos;)}
  0.10%   │╰  0x00007fcec4108b2a: je     0x00007fcec4108a70
          │   0x00007fcec4108b30: jmp    0x00007fcec4108b86  ;*invokevirtual compute {reexecute=0 rethrow=0 return_oop=0}
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark$Megamorphic4KtState::megamorphic4Call$kotlin_vs_java_benchmarks@18 (line 161)
          │                                                 ; - org.ib.benchmark.MegamorphicCallKtBenchmark::megamorphic4Call@7 (line 45)
          │                                                 ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub@19 (line 195)
          ↘   0x00007fcec4108b35: mov    QWORD PTR [rsp+0x18],r11
              0x00007fcec4108b3a: call   0x00007fcecd8924b0  ;   {runtime_call}
              0x00007fcec4108b3f: nop
....................................................................................................
 23.51%  <total for region 1>

....[Hottest Regions]...............................................................................
 23.51%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 2216 (186 bytes) 
  8.30%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2182 (59 bytes) 
  3.56%         interpreter  method entry point (kind = zerolocals)  (14 bytes) 
  3.40%         interpreter  method entry point (kind = zerolocals)  (146 bytes) 
  2.00%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (103 bytes) 
  1.92%         interpreter  method entry point (kind = zerolocals)  (211 bytes) 
  1.41%         interpreter  invokevirtual  182 invokevirtual  (121 bytes) 
  1.30%         interpreter  invokevirtual  182 invokevirtual  (43 bytes) 
  1.19%         interpreter  areturn  176 areturn  (8 bytes) 
  1.14%         interpreter  ireturn  172 ireturn  (4 bytes) 
  1.11%         interpreter  invokevirtual  182 invokevirtual  (1 bytes) 
  1.08%         interpreter  getstatic  178 getstatic  (76 bytes) 
  1.05%         interpreter  invokeinterface  185 invokeinterface  (95 bytes) 
  1.02%              kernel  [unknown] (6 bytes) 
  1.01%         interpreter  fast_aload_0  220 fast_aload_0  (31 bytes) 
  0.83%         interpreter  invokevirtual  182 invokevirtual  (180 bytes) 
  0.79%         interpreter  areturn  176 areturn  (23 bytes) 
  0.76%         interpreter  method entry point (kind = accessor)  (14 bytes) 
  0.76%         interpreter  invokespecial  183 invokespecial  (43 bytes) 
  0.75%         interpreter  invoke return entry points  (105 bytes) 
 43.10%  <...other 845 warm regions...>
....................................................................................................
 99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 23.51%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_Megamorphic4Kt_jmhTest::megamorphic4Call_avgt_jmhStub, version 2216 
  9.16%         interpreter  method entry point (kind = zerolocals)  
  8.30%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2182 
  5.29%         interpreter  invokevirtual  182 invokevirtual  
  3.16%              kernel  [unknown] 
  3.13%         interpreter  invoke return entry points  
  2.18%         interpreter  invokeinterface  185 invokeinterface  
  2.12%         interpreter  areturn  176 areturn  
  2.12%         interpreter  ireturn  172 ireturn  
  2.01%         interpreter  method entry point (kind = accessor)  
  2.00%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  1.79%         interpreter  getstatic  178 getstatic  
  1.76%         interpreter  invokespecial  183 invokespecial  
  1.23%         interpreter  fast_aload_0  220 fast_aload_0  
  1.23%         interpreter  checkcast  192 checkcast  
  1.10%         interpreter  aload_1  43 aload_1  
  1.01%         interpreter  instanceof  193 instanceof  
  0.97%         interpreter  invokestatic  184 invokestatic  
  0.89%         interpreter  _shouldnotreachhere  234 _shouldnotreachhere  
  0.89%         interpreter  ifeq  153 ifeq  
 26.14%  <...other 359 warm methods...>
....................................................................................................
 99.99%  <totals>

....[Distribution by Source]........................................................................
 55.59%         interpreter
 33.02%               JVMCI
  7.01%           libjvm.so
  3.16%              kernel
  0.40%        libc-2.28.so
  0.25%             Unknown
  0.24%  libpthread-2.28.so
  0.19%       perf-1910.map
  0.08%      hsdis-amd64.so
  0.01%          libjava.so
  0.01%           libzip.so
  0.01%              [vdso]
  0.01%        runtime stub
....................................................................................................
 99.99%  <totals>



# JMH version: 1.21
# VM version: JDK 1.8.0_202, Java HotSpot(TM) GraalVM EE 1.0.0-rc13, 25.202-b08-jvmci-0.55
# VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc13/jre/bin/java
# VM options: -XX:-TieredCompilation -Xbatch
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.MegamorphicCallKtBenchmark.MonomorphicKt
# Parameters: (param = 3)

# Run progress: 75.00% complete, ETA 00:01:41
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 11112.865 ns/op
# Warmup Iteration   2: 5.099 ns/op
# Warmup Iteration   3: 3.743 ns/op
# Warmup Iteration   4: 4.077 ns/op
# Warmup Iteration   5: 4.068 ns/op
Iteration   1: 4.029 ns/op
Iteration   2: 3.990 ns/op
Iteration   3: 3.944 ns/op
Iteration   4: 3.907 ns/op
Iteration   5: 3.938 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 83.33% complete, ETA 00:01:08
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 7.757 ns/op
# Warmup Iteration   2: 14.268 ns/op
# Warmup Iteration   3: 4.079 ns/op
# Warmup Iteration   4: 4.100 ns/op
# Warmup Iteration   5: 4.085 ns/op
Iteration   1: 4.189 ns/op
Iteration   2: 4.001 ns/op
Iteration   3: 4.082 ns/op
Iteration   4: 4.029 ns/op
Iteration   5: 3.990 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 91.67% complete, ETA 00:00:33
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 9.706 ns/op
# Warmup Iteration   2: 7.787 ns/op
# Warmup Iteration   3: 4.012 ns/op
# Warmup Iteration   4: 3.737 ns/op
# Warmup Iteration   5: 3.762 ns/op
Iteration   1: 3.805 ns/op
Iteration   2: 3.746 ns/op
Iteration   3: 3.754 ns/op
Iteration   4: 3.722 ns/op
Iteration   5: 3.751 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.MegamorphicCallKtBenchmark.MonomorphicKt":
  3.925 ±(99.9%) 0.151 ns/op [Average]
  (min, avg, max) = (3.722, 3.925, 4.189), stdev = 0.141
  CI (99.9%): [3.774, 4.076] (assumes normal distribution)

Secondary result "org.ib.benchmark.MegamorphicCallKtBenchmark.MonomorphicKt:·asm":
PrintAssembly processed: 91703 total address lines.
Perf output processed (skipped 29.253 seconds):
 Column 1: cycles (17320 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
JVMCI, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 2231 (87 bytes) 

             0x00007f613c10db2b: nop
             0x00007f613c10db2c: mov    rdx,QWORD PTR [rsp+0x28]
             0x00007f613c10db31: mov    QWORD PTR [rdx+0x28],rax
             0x00007f613c10db35: movabs r10,0x772a1e450    ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$MonomorphicKtState&apos;)}
             0x00007f613c10db3f: mov    QWORD PTR [rsp+0x8],0x0
         ╭   0x00007f613c10db48: jmp    0x00007f613c10db65  ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@13 (line 195)
         │   0x00007f613c10db4d: data16 xchg ax,ax         ; OopMap{rsi=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=112}
         │                                                 ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
  0.21%  │↗  0x00007f613c10db50: test   DWORD PTR [rip+0xbee44b0],eax        # 0x00007f6147ff2006
         ││                                                ;   {poll}
  0.06%  ││  0x00007f613c10db56: mov    QWORD PTR [rsp+0x8],r11
  2.29%  ││  0x00007f613c10db5b: movabs r10,0x772a1e450    ;*aload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@13 (line 195)
         ││                                                ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$MonomorphicKtState&apos;)}
         ↘│  0x00007f613c10db65: mov    r11,QWORD PTR [rsp+0x18]
  0.20%   │  0x00007f613c10db6a: mov    rdi,QWORD PTR [rsp+0x20]
  0.05%   │  0x00007f613c10db6f: mov    r9d,DWORD PTR [r11+0xc]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@13 (line 195)
  2.50%   │  0x00007f613c10db73: test   DWORD PTR [r12+r9*8],eax  ; implicit exception: deoptimizes
          │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=147}
  2.59%   │  0x00007f613c10db77: mov    r9d,DWORD PTR [r10+0x6c]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@9 (line 54)
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
  0.01%   │  0x00007f613c10db7b: mov    ecx,r9d
  0.24%   │  0x00007f613c10db7e: shl    ecx,0x4
          │  0x00007f613c10db81: add    ecx,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@18 (line 161)
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
  2.03%   │  0x00007f613c10db84: mov    rsi,rdi            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@22 (line 195)
  0.01%   │  0x00007f613c10db87: mov    edx,ecx
  0.21%   │  0x00007f613c10db89: nop    WORD PTR [rax+rax*1+0x0]
          │  0x00007f613c10db8f: call   0x00007f613c0480a0  ; OopMap{[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=180}
          │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@22 (line 195)
          │                                                ;   {optimized virtual_call}
  0.19%   │  0x00007f613c10db94: nop
  2.27%   │  0x00007f613c10db95: mov    rsi,QWORD PTR [rsp+0x30]
  0.23%   │  0x00007f613c10db9a: movsx  r10d,BYTE PTR [rsi+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@32 (line 197)
  0.06%   │  0x00007f613c10dba2: mov    r11,QWORD PTR [rsp+0x8]
  2.25%   │  0x00007f613c10dba7: inc    r11                ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@28 (line 196)
          │  0x00007f613c10dbaa: test   r10b,r10b
          ╰  0x00007f613c10dbad: je     0x00007f613c10db50  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
             0x00007f613c10dbaf: mov    QWORD PTR [rsp+0x20],r11
             0x00007f613c10dbb4: call   0x00007f614749b4b0  ;   {runtime_call}
             0x00007f613c10dbb9: nop
             0x00007f613c10dbba: mov    rdx,QWORD PTR [rsp+0x28]
             0x00007f613c10dbbf: mov    QWORD PTR [rdx+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 15.40%  <total for region 1>

....[Hottest Region 2]..............................................................................
JVMCI, org.openjdk.jmh.infra.Blackhole::consume, version 2210 (66 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f613c0f9920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f613c0f9924: shl    r10,0x3
            0x00007f613c0f9928: cmp    rax,r10
            0x00007f613c0f992b: jne    0x00007f613c047e60  ;   {runtime_call}
            0x00007f613c0f9931: nop
            0x00007f613c0f9932: nop    DWORD PTR [rax+0x0]
            0x00007f613c0f9939: nop    DWORD PTR [rax+0x0]
          [Verified Entry Point]
  2.32%     0x00007f613c0f9940: mov    DWORD PTR [rsp-0x14000],eax
  0.33%     0x00007f613c0f9947: sub    rsp,0x18
  2.30%     0x00007f613c0f994b: mov    QWORD PTR [rsp+0x10],rbp
  0.01%     0x00007f613c0f9950: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.22%     0x00007f613c0f9957: mov    r11d,edx
            0x00007f613c0f995a: xor    r11d,r10d          ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.47%     0x00007f613c0f995d: mov    r8d,edx
  0.01%     0x00007f613c0f9960: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.23%     0x00007f613c0f9967: cmp    r8d,r11d
         ╭  0x00007f613c0f996a: je     0x00007f613c0f9983
         │  0x00007f613c0f9970: mov    rbp,QWORD PTR [rsp+0x10]
  2.44%  │  0x00007f613c0f9975: add    rsp,0x18
  0.01%  │  0x00007f613c0f9979: test   DWORD PTR [rip+0xbef8687],eax        # 0x00007f6147ff2006
         │                                                ;   {poll_return}
  0.23%  │  0x00007f613c0f997f: vzeroupper 
  2.67%  │  0x00007f613c0f9982: ret    
         ↘  0x00007f613c0f9983: mov    DWORD PTR [r15+0x29c],0xffffffed
                                                          ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
            0x00007f613c0f998e: mov    QWORD PTR [r15+0x2a8],r12
            0x00007f613c0f9995: call   0x00007f613c0495fe  ; OopMap{rsi=Oop off=122}
                                                          ;*istore_2 {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@4 (line 378)
                                                          ;   {runtime_call}
            0x00007f613c0f999a: nop
          [Exception Handler]
....................................................................................................
 13.23%  <total for region 2>

....[Hottest Regions]...............................................................................
 15.40%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 2231 (87 bytes) 
 13.23%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2210 (66 bytes) 
  3.53%         interpreter  method entry point (kind = zerolocals)  (115 bytes) 
  3.26%         interpreter  method entry point (kind = zerolocals)  (14 bytes) 
  2.55%         interpreter  invokevirtual  182 invokevirtual  (77 bytes) 
  2.11%         interpreter  method entry point (kind = zerolocals)  (211 bytes) 
  1.93%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (56 bytes) 
  1.66%         interpreter  invokevirtual  182 invokevirtual  (121 bytes) 
  1.24%         interpreter  ireturn  172 ireturn  (8 bytes) 
  1.21%         interpreter  areturn  176 areturn  (8 bytes) 
  1.18%         interpreter  getstatic  178 getstatic  (94 bytes) 
  1.05%         interpreter  invokeinterface  185 invokeinterface  (95 bytes) 
  0.92%         interpreter  goto  167 goto  (79 bytes) 
  0.89%         interpreter  invokevirtual  182 invokevirtual  (221 bytes) 
  0.85%         interpreter  fast_aload_0  220 fast_aload_0  (35 bytes) 
  0.84%         interpreter  method entry point (kind = accessor)  (115 bytes) 
  0.81%         interpreter  ireturn  172 ireturn  (40 bytes) 
  0.79%         interpreter  areturn  176 areturn  (23 bytes) 
  0.70%              kernel  [unknown] (6 bytes) 
  0.70%         interpreter  invoke return entry points  (105 bytes) 
 45.14%  <...other 927 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 15.40%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 2231 
 13.23%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2210 
  9.18%         interpreter  method entry point (kind = zerolocals)  
  5.68%         interpreter  invokevirtual  182 invokevirtual  
  3.12%         interpreter  invoke return entry points  
  2.70%              kernel  [unknown] 
  2.29%         interpreter  invokeinterface  185 invokeinterface  
  2.28%         interpreter  ireturn  172 ireturn  
  2.16%         interpreter  areturn  176 areturn  
  2.14%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  2.05%         interpreter  method entry point (kind = accessor)  
  2.01%         interpreter  getstatic  178 getstatic  
  1.67%         interpreter  invokespecial  183 invokespecial  
  1.36%         interpreter  checkcast  192 checkcast  
  1.16%         interpreter  goto  167 goto  
  1.13%         interpreter  aload_1  43 aload_1  
  1.12%         interpreter  fast_aload_0  220 fast_aload_0  
  1.09%         interpreter  instanceof  193 instanceof  
  1.06%           libjvm.so  _ZN13CompileBroker14compile_methodE12methodHandleiiS0_iPKcP6Thread 
  1.05%         interpreter  _shouldnotreachhere  234 _shouldnotreachhere  
 28.12%  <...other 400 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 58.01%         interpreter
 30.06%               JVMCI
  7.96%           libjvm.so
  2.70%              kernel
  0.37%        libc-2.28.so
  0.28%  libpthread-2.28.so
  0.25%             Unknown
  0.23%       perf-1982.map
  0.10%      hsdis-amd64.so
  0.02%        runtime stub
  0.01%          libjava.so
  0.01%           libzip.so
....................................................................................................
100.00%  <totals>

PrintAssembly processed: 86379 total address lines.
Perf output processed (skipped 25.524 seconds):
 Column 1: cycles (15706 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
JVMCI, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 2152 (87 bytes) 

             0x00007f51dc0df16b: nop
             0x00007f51dc0df16c: mov    rdx,QWORD PTR [rsp+0x28]
             0x00007f51dc0df171: mov    QWORD PTR [rdx+0x28],rax
             0x00007f51dc0df175: movabs r10,0x772a09740    ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$MonomorphicKtState&apos;)}
             0x00007f51dc0df17f: mov    QWORD PTR [rsp+0x8],0x0
         ╭   0x00007f51dc0df188: jmp    0x00007f51dc0df1a5  ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@13 (line 195)
         │   0x00007f51dc0df18d: data16 xchg ax,ax         ; OopMap{rsi=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=112}
         │                                                 ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
  0.26%  │↗  0x00007f51dc0df190: test   DWORD PTR [rip+0xaadbe70],eax        # 0x00007f51e6bbb006
         ││                                                ;   {poll}
  0.13%  ││  0x00007f51dc0df196: mov    QWORD PTR [rsp+0x8],r11
  2.36%  ││  0x00007f51dc0df19b: movabs r10,0x772a09740    ;*aload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@13 (line 195)
         ││                                                ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$MonomorphicKtState&apos;)}
  0.01%  ↘│  0x00007f51dc0df1a5: mov    r11,QWORD PTR [rsp+0x18]
  0.24%   │  0x00007f51dc0df1aa: mov    rdi,QWORD PTR [rsp+0x20]
  0.17%   │  0x00007f51dc0df1af: mov    r9d,DWORD PTR [r11+0xc]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@13 (line 195)
  2.34%   │  0x00007f51dc0df1b3: test   DWORD PTR [r12+r9*8],eax  ; implicit exception: deoptimizes
          │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=147}
  2.87%   │  0x00007f51dc0df1b7: mov    r9d,DWORD PTR [r10+0x6c]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@9 (line 54)
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
  0.01%   │  0x00007f51dc0df1bb: mov    ecx,r9d
  0.30%   │  0x00007f51dc0df1be: shl    ecx,0x4
          │  0x00007f51dc0df1c1: add    ecx,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@18 (line 161)
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
  2.38%   │  0x00007f51dc0df1c4: mov    rsi,rdi            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@22 (line 195)
  0.01%   │  0x00007f51dc0df1c7: mov    edx,ecx
  0.26%   │  0x00007f51dc0df1c9: nop    WORD PTR [rax+rax*1+0x0]
          │  0x00007f51dc0df1cf: call   0x00007f51dc0480a0  ; OopMap{[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=180}
          │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@22 (line 195)
          │                                                ;   {optimized virtual_call}
  0.60%   │  0x00007f51dc0df1d4: nop
  2.50%   │  0x00007f51dc0df1d5: mov    rsi,QWORD PTR [rsp+0x30]
  0.31%   │  0x00007f51dc0df1da: movsx  r10d,BYTE PTR [rsi+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@32 (line 197)
  0.15%   │  0x00007f51dc0df1e2: mov    r11,QWORD PTR [rsp+0x8]
  2.50%   │  0x00007f51dc0df1e7: inc    r11                ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@28 (line 196)
          │  0x00007f51dc0df1ea: test   r10b,r10b
          ╰  0x00007f51dc0df1ed: je     0x00007f51dc0df190  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
             0x00007f51dc0df1ef: mov    QWORD PTR [rsp+0x20],r11
             0x00007f51dc0df1f4: call   0x00007f51e60644b0  ;   {runtime_call}
             0x00007f51dc0df1f9: nop
             0x00007f51dc0df1fa: mov    rdx,QWORD PTR [rsp+0x28]
             0x00007f51dc0df1ff: mov    QWORD PTR [rdx+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 17.40%  <total for region 1>

....[Hottest Region 2]..............................................................................
JVMCI, org.openjdk.jmh.infra.Blackhole::consume, version 2115 (66 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f51dc0f2320: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f51dc0f2324: shl    r10,0x3
            0x00007f51dc0f2328: cmp    rax,r10
            0x00007f51dc0f232b: jne    0x00007f51dc047e60  ;   {runtime_call}
            0x00007f51dc0f2331: nop
            0x00007f51dc0f2332: nop    DWORD PTR [rax+0x0]
            0x00007f51dc0f2339: nop    DWORD PTR [rax+0x0]
          [Verified Entry Point]
  2.49%     0x00007f51dc0f2340: mov    DWORD PTR [rsp-0x14000],eax
  0.31%     0x00007f51dc0f2347: sub    rsp,0x18
  2.51%     0x00007f51dc0f234b: mov    QWORD PTR [rsp+0x10],rbp
  0.03%     0x00007f51dc0f2350: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.29%     0x00007f51dc0f2357: mov    r11d,edx
  0.01%     0x00007f51dc0f235a: xor    r11d,r10d          ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.29%     0x00007f51dc0f235d: mov    r8d,edx
  0.02%     0x00007f51dc0f2360: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.25%     0x00007f51dc0f2367: cmp    r8d,r11d
         ╭  0x00007f51dc0f236a: je     0x00007f51dc0f2383
  0.01%  │  0x00007f51dc0f2370: mov    rbp,QWORD PTR [rsp+0x10]
  2.60%  │  0x00007f51dc0f2375: add    rsp,0x18
  0.02%  │  0x00007f51dc0f2379: test   DWORD PTR [rip+0xaac8c87],eax        # 0x00007f51e6bbb006
         │                                                ;   {poll_return}
  0.31%  │  0x00007f51dc0f237f: vzeroupper 
  2.80%  │  0x00007f51dc0f2382: ret    
         ↘  0x00007f51dc0f2383: mov    DWORD PTR [r15+0x29c],0xffffffed
                                                          ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
            0x00007f51dc0f238e: mov    QWORD PTR [r15+0x2a8],r12
            0x00007f51dc0f2395: call   0x00007f51dc0495fe  ; OopMap{rsi=Oop off=122}
                                                          ;*istore_2 {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@4 (line 378)
                                                          ;   {runtime_call}
            0x00007f51dc0f239a: nop
          [Exception Handler]
....................................................................................................
 13.94%  <total for region 2>

....[Hottest Regions]...............................................................................
 17.40%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 2152 (87 bytes) 
 13.94%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2115 (66 bytes) 
  3.85%         interpreter  method entry point (kind = zerolocals)  (14 bytes) 
  3.61%         interpreter  method entry point (kind = zerolocals)  (165 bytes) 
  2.49%         interpreter  invokevirtual  182 invokevirtual  (77 bytes) 
  2.39%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (103 bytes) 
  1.97%         interpreter  method entry point (kind = zerolocals)  (211 bytes) 
  1.54%         interpreter  invokevirtual  182 invokevirtual  (114 bytes) 
  1.36%         interpreter  ireturn  172 ireturn  (4 bytes) 
  1.17%         interpreter  areturn  176 areturn  (8 bytes) 
  1.11%              kernel  [unknown] (6 bytes) 
  0.99%         interpreter  invokeinterface  185 invokeinterface  (109 bytes) 
  0.86%         interpreter  invokevirtual  182 invokevirtual  (129 bytes) 
  0.80%         interpreter  invokespecial  183 invokespecial  (43 bytes) 
  0.78%         interpreter  fast_aload_0  220 fast_aload_0  (35 bytes) 
  0.78%         interpreter  method entry point (kind = accessor)  (115 bytes) 
  0.76%         interpreter  ireturn  172 ireturn  (40 bytes) 
  0.71%         interpreter  areturn  176 areturn  (23 bytes) 
  0.68%         interpreter  aload  25 aload  (65 bytes) 
  0.66%           libjvm.so  _ZNK8CodeHeap10find_startEPv (78 bytes) 
 42.13%  <...other 823 warm regions...>
....................................................................................................
 99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 17.40%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 2152 
 13.94%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2115 
  9.63%         interpreter  method entry point (kind = zerolocals)  
  5.67%         interpreter  invokevirtual  182 invokevirtual  
  3.08%              kernel  [unknown] 
  3.00%         interpreter  invoke return entry points  
  2.39%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  2.37%         interpreter  ireturn  172 ireturn  
  2.27%         interpreter  invokeinterface  185 invokeinterface  
  2.10%         interpreter  areturn  176 areturn  
  1.89%         interpreter  method entry point (kind = accessor)  
  1.84%         interpreter  invokespecial  183 invokespecial  
  1.69%         interpreter  getstatic  178 getstatic  
  1.42%         interpreter  checkcast  192 checkcast  
  1.20%         interpreter  instanceof  193 instanceof  
  1.05%         interpreter  aload_1  43 aload_1  
  0.97%         interpreter  fast_aload_0  220 fast_aload_0  
  0.97%         interpreter  invokestatic  184 invokestatic  
  0.84%         interpreter  goto  167 goto  
  0.78%         interpreter  _shouldnotreachhere  234 _shouldnotreachhere  
 25.49%  <...other 356 warm methods...>
....................................................................................................
 99.99%  <totals>

....[Distribution by Source]........................................................................
 56.46%         interpreter
 32.17%               JVMCI
  6.98%           libjvm.so
  3.08%              kernel
  0.39%        libc-2.28.so
  0.31%       perf-2021.map
  0.26%  libpthread-2.28.so
  0.19%             Unknown
  0.11%      hsdis-amd64.so
  0.03%          libjava.so
  0.01%        runtime stub
  0.01%              [vdso]
  0.01%           libzip.so
....................................................................................................
 99.99%  <totals>

PrintAssembly processed: 87538 total address lines.
Perf output processed (skipped 27.053 seconds):
 Column 1: cycles (15834 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
JVMCI, org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 2152 (87 bytes) 

             0x00007f121c100dab: nop
             0x00007f121c100dac: mov    rdx,QWORD PTR [rsp+0x28]
             0x00007f121c100db1: mov    QWORD PTR [rdx+0x28],rax
             0x00007f121c100db5: movabs r10,0x76f997718    ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$MonomorphicKtState&apos;)}
             0x00007f121c100dbf: mov    QWORD PTR [rsp+0x8],0x0
         ╭   0x00007f121c100dc8: jmp    0x00007f121c100de5  ;*aload {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@13 (line 195)
         │   0x00007f121c100dcd: data16 xchg ax,ax         ; OopMap{rsi=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=112}
         │                                                 ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
  0.14%  │↗  0x00007f121c100dd0: test   DWORD PTR [rip+0xcff0230],eax        # 0x00007f12290f1006
         ││                                                ;   {poll}
  0.03%  ││  0x00007f121c100dd6: mov    QWORD PTR [rsp+0x8],r11
  2.68%  ││  0x00007f121c100ddb: movabs r10,0x76f997718    ;*aload {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@13 (line 195)
         ││                                                ;   {oop(a &apos;java/lang/Class&apos; = &apos;org/ib/benchmark/MegamorphicCallKtBenchmark$MonomorphicKtState&apos;)}
         ↘│  0x00007f121c100de5: mov    r11,QWORD PTR [rsp+0x18]
  0.18%   │  0x00007f121c100dea: mov    rdi,QWORD PTR [rsp+0x20]
  0.03%   │  0x00007f121c100def: mov    r9d,DWORD PTR [r11+0xc]  ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@13 (line 195)
  2.81%   │  0x00007f121c100df3: test   DWORD PTR [r12+r9*8],eax  ; implicit exception: deoptimizes
          │                                                ; OopMap{rdi=Oop r10=Oop r11=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=147}
  3.04%   │  0x00007f121c100df7: mov    r9d,DWORD PTR [r10+0x6c]  ;*getstatic param {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@9 (line 54)
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
          │  0x00007f121c100dfb: mov    ecx,r9d
  0.15%   │  0x00007f121c100dfe: shl    ecx,0x4
          │  0x00007f121c100e01: add    ecx,r9d            ;*imul {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$VirtualCallKtAlg1::compute@6 (line 120)
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark$MonomorphicKtState::monomorphicCall$kotlin_vs_java_benchmarks@18 (line 161)
          │                                                ; - org.ib.benchmark.MegamorphicCallKtBenchmark::monomorphicCall@7 (line 27)
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@19 (line 195)
  2.84%   │  0x00007f121c100e04: mov    rsi,rdi            ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@22 (line 195)
          │  0x00007f121c100e07: mov    edx,ecx
  0.15%   │  0x00007f121c100e09: nop    WORD PTR [rax+rax*1+0x0]
          │  0x00007f121c100e0f: call   0x00007f121c0480a0  ; OopMap{[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=180}
          │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@22 (line 195)
          │                                                ;   {optimized virtual_call}
  0.09%   │  0x00007f121c100e14: nop
  2.20%   │  0x00007f121c100e15: mov    rsi,QWORD PTR [rsp+0x30]
  0.14%   │  0x00007f121c100e1a: movsx  r10d,BYTE PTR [rsi+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@32 (line 197)
  0.01%   │  0x00007f121c100e22: mov    r11,QWORD PTR [rsp+0x8]
  2.65%   │  0x00007f121c100e27: inc    r11                ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@28 (line 196)
          │  0x00007f121c100e2a: test   r10b,r10b
          ╰  0x00007f121c100e2d: je     0x00007f121c100dd0  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@35 (line 197)
             0x00007f121c100e2f: mov    QWORD PTR [rsp+0x20],r11
             0x00007f121c100e34: call   0x00007f122859a4b0  ;   {runtime_call}
             0x00007f121c100e39: nop
             0x00007f121c100e3a: mov    rdx,QWORD PTR [rsp+0x28]
             0x00007f121c100e3f: mov    QWORD PTR [rdx+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub@42 (line 198)
....................................................................................................
 17.13%  <total for region 1>

....[Hottest Region 2]..............................................................................
JVMCI, org.openjdk.jmh.infra.Blackhole::consume, version 2116 (66 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x20]  (sp of caller)
            0x00007f121c0f1460: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f121c0f1464: shl    r10,0x3
            0x00007f121c0f1468: cmp    rax,r10
            0x00007f121c0f146b: jne    0x00007f121c047e60  ;   {runtime_call}
            0x00007f121c0f1471: nop
            0x00007f121c0f1472: nop    DWORD PTR [rax+0x0]
            0x00007f121c0f1479: nop    DWORD PTR [rax+0x0]
          [Verified Entry Point]
  2.84%     0x00007f121c0f1480: mov    DWORD PTR [rsp-0x14000],eax
  0.21%     0x00007f121c0f1487: sub    rsp,0x18
  2.47%     0x00007f121c0f148b: mov    QWORD PTR [rsp+0x10],rbp
            0x00007f121c0f1490: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.18%     0x00007f121c0f1497: mov    r11d,edx
            0x00007f121c0f149a: xor    r11d,r10d          ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  2.59%     0x00007f121c0f149d: mov    r8d,edx
            0x00007f121c0f14a0: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.21%     0x00007f121c0f14a7: cmp    r8d,r11d
         ╭  0x00007f121c0f14aa: je     0x00007f121c0f14c3
         │  0x00007f121c0f14b0: mov    rbp,QWORD PTR [rsp+0x10]
  2.63%  │  0x00007f121c0f14b5: add    rsp,0x18
  0.01%  │  0x00007f121c0f14b9: test   DWORD PTR [rip+0xcfffb47],eax        # 0x00007f12290f1006
         │                                                ;   {poll_return}
  0.16%  │  0x00007f121c0f14bf: vzeroupper 
  2.80%  │  0x00007f121c0f14c2: ret    
         ↘  0x00007f121c0f14c3: mov    DWORD PTR [r15+0x29c],0xffffffed
                                                          ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
            0x00007f121c0f14ce: mov    QWORD PTR [r15+0x2a8],r12
            0x00007f121c0f14d5: call   0x00007f121c0495fe  ; OopMap{rsi=Oop off=122}
                                                          ;*istore_2 {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@4 (line 378)
                                                          ;   {runtime_call}
            0x00007f121c0f14da: nop
          [Exception Handler]
....................................................................................................
 14.11%  <total for region 2>

....[Hottest Regions]...............................................................................
 17.13%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 2152 (87 bytes) 
 14.11%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2116 (66 bytes) 
  3.35%         interpreter  method entry point (kind = zerolocals)  (14 bytes) 
  3.33%         interpreter  method entry point (kind = zerolocals)  (139 bytes) 
  2.06%         interpreter  method entry point (kind = zerolocals)  (211 bytes) 
  2.05%         interpreter  fast_aaccess_0  222 fast_aaccess_0  (56 bytes) 
  1.68%         interpreter  invokevirtual  182 invokevirtual  (121 bytes) 
  1.33%         interpreter  areturn  176 areturn  (8 bytes) 
  1.29%         interpreter  ireturn  172 ireturn  (4 bytes) 
  1.28%         interpreter  invokevirtual  182 invokevirtual  (43 bytes) 
  1.14%         interpreter  invokevirtual  182 invokevirtual  (1 bytes) 
  1.04%         interpreter  invokeinterface  185 invokeinterface  (95 bytes) 
  0.99%              kernel  [unknown] (6 bytes) 
  0.91%         interpreter  invokevirtual  182 invokevirtual  (171 bytes) 
  0.84%         interpreter  ireturn  172 ireturn  (37 bytes) 
  0.80%         interpreter  fast_aload_0  220 fast_aload_0  (35 bytes) 
  0.74%         interpreter  method entry point (kind = accessor)  (14 bytes) 
  0.74%         interpreter  areturn  176 areturn  (23 bytes) 
  0.73%           libjvm.so  _ZNK8CodeHeap10find_startEPv (83 bytes) 
  0.68%         interpreter  getstatic  178 getstatic  (26 bytes) 
 43.77%  <...other 784 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 17.13%               JVMCI  org.ib.benchmark.generated.MegamorphicCallKtBenchmark_MonomorphicKt_jmhTest::monomorphicCall_avgt_jmhStub, version 2152 
 14.11%               JVMCI  org.openjdk.jmh.infra.Blackhole::consume, version 2116 
  9.09%         interpreter  method entry point (kind = zerolocals)  
  5.76%         interpreter  invokevirtual  182 invokevirtual  
  2.88%         interpreter  invoke return entry points  
  2.72%              kernel  [unknown] 
  2.39%         interpreter  ireturn  172 ireturn  
  2.27%         interpreter  areturn  176 areturn  
  2.20%         interpreter  fast_aaccess_0  222 fast_aaccess_0  
  2.12%         interpreter  invokeinterface  185 invokeinterface  
  1.90%         interpreter  getstatic  178 getstatic  
  1.86%         interpreter  method entry point (kind = accessor)  
  1.78%         interpreter  invokespecial  183 invokespecial  
  1.36%         interpreter  checkcast  192 checkcast  
  1.15%         interpreter  instanceof  193 instanceof  
  1.07%         interpreter  aload_1  43 aload_1  
  1.05%         interpreter  fast_aload_0  220 fast_aload_0  
  0.93%         interpreter  invokestatic  184 invokestatic  
  0.87%         interpreter  return  177 return  
  0.81%         interpreter  _shouldnotreachhere  234 _shouldnotreachhere  
 26.55%  <...other 325 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 57.06%         interpreter
 32.15%               JVMCI
  6.81%           libjvm.so
  2.72%              kernel
  0.37%        libc-2.28.so
  0.30%       perf-2068.map
  0.23%             Unknown
  0.22%  libpthread-2.28.so
  0.09%      hsdis-amd64.so
  0.02%        runtime stub
  0.02%          libjava.so
....................................................................................................
100.00%  <totals>



# Run complete. Total time: 00:06:44

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                       (param)  Mode  Cnt  Score   Error  Units
MegamorphicCallKtBenchmark.BimorphicKt                3  avgt   15  4.276 ± 0.187  ns/op
MegamorphicCallKtBenchmark.BimorphicKt:·asm           3  avgt         NaN            ---
MegamorphicCallKtBenchmark.Megamorphic3Kt             3  avgt   15  4.958 ± 0.209  ns/op
MegamorphicCallKtBenchmark.Megamorphic3Kt:·asm        3  avgt         NaN            ---
MegamorphicCallKtBenchmark.Megamorphic4Kt             3  avgt   15  5.229 ± 0.235  ns/op
MegamorphicCallKtBenchmark.Megamorphic4Kt:·asm        3  avgt         NaN            ---
MegamorphicCallKtBenchmark.MonomorphicKt              3  avgt   15  3.925 ± 0.151  ns/op
MegamorphicCallKtBenchmark.MonomorphicKt:·asm         3  avgt         NaN            ---
