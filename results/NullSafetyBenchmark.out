# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyJavaBenchmark.elvisEquivalent
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:03:30
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.165 ns/op
# Warmup Iteration   2: 2.932 ns/op
# Warmup Iteration   3: 3.111 ns/op
# Warmup Iteration   4: 2.874 ns/op
# Warmup Iteration   5: 2.893 ns/op
Iteration   1: 3.240 ns/op
Iteration   2: 3.256 ns/op
Iteration   3: 3.262 ns/op
Iteration   4: 3.260 ns/op
Iteration   5: 3.263 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 4.76% complete, ETA 00:04:22
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.333 ns/op
# Warmup Iteration   2: 3.005 ns/op
# Warmup Iteration   3: 3.227 ns/op
# Warmup Iteration   4: 3.214 ns/op
# Warmup Iteration   5: 3.021 ns/op
Iteration   1: 3.035 ns/op
Iteration   2: 3.025 ns/op
Iteration   3: 3.047 ns/op
Iteration   4: 3.005 ns/op
Iteration   5: 3.011 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 9.52% complete, ETA 00:04:05
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.798 ns/op
# Warmup Iteration   2: 3.298 ns/op
# Warmup Iteration   3: 3.058 ns/op
# Warmup Iteration   4: 3.062 ns/op
# Warmup Iteration   5: 3.053 ns/op
Iteration   1: 3.085 ns/op
Iteration   2: 3.040 ns/op
Iteration   3: 3.265 ns/op
Iteration   4: 3.293 ns/op
Iteration   5: 3.296 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyJavaBenchmark.elvisEquivalent":
  3.159 ±(99.9%) 0.130 ns/op [Average]
  (min, avg, max) = (3.005, 3.159, 3.296), stdev = 0.122
  CI (99.9%): [3.029, 3.289] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyJavaBenchmark.elvisEquivalent:·asm":
PrintAssembly processed: 142351 total address lines.
Perf output processed (skipped 7.175 seconds):
 Column 1: cycles (5188 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub, version 547 (60 bytes) 

             0x00007f5d2873f151: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f5d2873f27e
             0x00007f5d2873f159: mov    ebp,0x1
             0x00007f5d2873f15e: test   r10d,r10d
         ╭   0x00007f5d2873f161: jne    0x00007f5d2873f1b8  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@33 (line 234)
         │   0x00007f5d2873f163: nop    WORD PTR [rax+rax*1+0x0]
         │   0x00007f5d2873f16c: data16 data16 xchg ax,ax  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@36 (line 235)
  0.23%  │↗  0x00007f5d2873f170: mov    r10,QWORD PTR [rsp+0x50]
  7.61%  ││  0x00007f5d2873f175: mov    r10d,DWORD PTR [r10+0x10]
         ││                                                ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@1 (line 57)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││  0x00007f5d2873f179: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Outer::getNested@1 (line 83)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@10 (line 61)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f5d2873f216
         ││  0x00007f5d2873f17e: mov    r10d,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Nested::getInner@1 (line 95)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@19 (line 63)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f5d2873f22a
  0.39%  ││  0x00007f5d2873f183: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Inner::getValue@1 (line 107)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@31 (line 65)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f5d2873f23e
  8.02%  ││  0x00007f5d2873f188: mov    edx,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.Integer::intValue@1 (line 1123)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@36 (line 66)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f5d2873f20a
 27.45%  ││  0x00007f5d2873f18d: mov    rsi,QWORD PTR [rsp]
         ││  0x00007f5d2873f191: xchg   ax,ax
         ││  0x00007f5d2873f193: call   0x00007f5d20c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  8.06%  ││  0x00007f5d2873f198: mov    r10,QWORD PTR [rsp+0x40]
         ││  0x00007f5d2873f19d: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@33 (line 234)
  0.31%  ││  0x00007f5d2873f1a5: mov    r11,QWORD PTR [r15+0x108]
  8.04%  ││  0x00007f5d2873f1ac: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@33 (line 234)
         ││  0x00007f5d2873f1b0: test   DWORD PTR [r11],eax  ;   {poll}
         ││  0x00007f5d2873f1b3: test   r10d,r10d
         │╰  0x00007f5d2873f1b6: je     0x00007f5d2873f170  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@36 (line 235)
         ↘   0x00007f5d2873f1b8: movabs r10,0x7f5d3ef18a00
             0x00007f5d2873f1c2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@37 (line 235)
             0x00007f5d2873f1c5: mov    r10,QWORD PTR [rsp+0x48]
....................................................................................................
 60.10%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 516 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f5d2873a4a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f5d2873a4a4: movabs r12,0x800000000
            0x00007f5d2873a4ae: add    r10,r12
            0x00007f5d2873a4b1: xor    r12,r12
            0x00007f5d2873a4b4: cmp    rax,r10
            0x00007f5d2873a4b7: jne    0x00007f5d20c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f5d2873a4bd: data16 xchg ax,ax
          [Verified Entry Point]
  9.39%     0x00007f5d2873a4c0: mov    DWORD PTR [rsp-0x14000],eax
            0x00007f5d2873a4c7: push   rbp
  0.42%     0x00007f5d2873a4c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  8.04%     0x00007f5d2873a4cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.02%     0x00007f5d2873a4d3: mov    r8d,edx
  0.29%     0x00007f5d2873a4d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  8.21%     0x00007f5d2873a4dd: mov    r9d,edx
            0x00007f5d2873a4e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
            0x00007f5d2873a4e3: cmp    r9d,r8d
         ╭  0x00007f5d2873a4e6: je     0x00007f5d2873a4f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.27%  │  0x00007f5d2873a4e8: add    rsp,0x20
  8.83%  │  0x00007f5d2873a4ec: pop    rbp
         │  0x00007f5d2873a4ed: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007f5d2873a4f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.25%  │  0x00007f5d2873a4f7: ret    
         ↘  0x00007f5d2873a4f8: mov    rbp,rsi
            0x00007f5d2873a4fb: mov    DWORD PTR [rsp],edx
            0x00007f5d2873a4fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f5d2873a503: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f5d2873a508: mov    esi,0xffffff4d
            0x00007f5d2873a50d: xchg   ax,ax
            0x00007f5d2873a50f: call   0x00007f5d20c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 35.72%  <total for region 2>

....[Hottest Regions]...............................................................................
 60.10%       c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub, version 547 (60 bytes) 
 35.72%       c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 516 (55 bytes) 
  2.64%            kernel  [unknown] (6 bytes) 
  0.17%         libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.12%            kernel  [unknown] (30 bytes) 
  0.06%            kernel  [unknown] (0 bytes) 
  0.06%            kernel  [unknown] (9 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.85%  <...other 44 warm regions...>
....................................................................................................
 99.96%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 60.10%       c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub, version 547 
 35.72%       c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 516 
  3.51%            kernel  [unknown] 
  0.17%         libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%      libc-2.28.so  __strchr_avx2 
  0.02%       interpreter  invoke return entry points  
  0.02%         libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%         libjvm.so  _ZN10Dictionary4findEjP6Symbol6Handle 
  0.02%         libjvm.so  _ZN14IntervalWalker7walk_toE13IntervalStatei.constprop.233 
  0.02%       c1, level 3  java.lang.ref.WeakReference::&lt;init&gt;, version 318 
  0.02%       interpreter  iinc  132 iinc  
  0.02%      libc-2.28.so  __memset_avx2_unaligned_erms 
  0.02%       interpreter  method entry point (kind = zerolocals)  
  0.02%  Unknown, level 0  java.lang.Class::isArray, version 106 
  0.02%      libc-2.28.so  _IO_fwrite 
  0.02%         libjvm.so  _ZN20SuspendibleThreadSet11synchronizeEv 
  0.02%         libjvm.so  strlen@plt 
  0.02%       interpreter  fast_aload_0  220 fast_aload_0  
  0.02%    perf-16480.map  [unknown] 
  0.02%         libjvm.so  _ZN13ExceptionMarkC2ERP6Thread 
  0.13%  <...other 7 warm methods...>
....................................................................................................
 99.96%  <totals>

....[Distribution by Source]........................................................................
 95.82%       c2, level 4
  3.51%            kernel
  0.40%         libjvm.so
  0.10%      libc-2.28.so
  0.08%       interpreter
  0.02%       c1, level 3
  0.02%    perf-16480.map
  0.02%  Unknown, level 0
....................................................................................................
 99.96%  <totals>

PrintAssembly processed: 139662 total address lines.
Perf output processed (skipped 7.020 seconds):
 Column 1: cycles (5137 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub, version 536 (60 bytes) 

             0x00007f00e00ed151: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f00e00ed27e
             0x00007f00e00ed159: mov    ebp,0x1
             0x00007f00e00ed15e: test   r10d,r10d
         ╭   0x00007f00e00ed161: jne    0x00007f00e00ed1b8  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@33 (line 234)
         │   0x00007f00e00ed163: nop    WORD PTR [rax+rax*1+0x0]
         │   0x00007f00e00ed16c: data16 data16 xchg ax,ax  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@36 (line 235)
  0.31%  │↗  0x00007f00e00ed170: mov    r10,QWORD PTR [rsp+0x50]
  8.60%  ││  0x00007f00e00ed175: mov    r10d,DWORD PTR [r10+0x10]
         ││                                                ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@1 (line 57)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││  0x00007f00e00ed179: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Outer::getNested@1 (line 83)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@10 (line 61)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f00e00ed216
  0.02%  ││  0x00007f00e00ed17e: mov    r10d,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Nested::getInner@1 (line 95)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@19 (line 63)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f00e00ed22a
  0.43%  ││  0x00007f00e00ed183: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Inner::getValue@1 (line 107)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@31 (line 65)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f00e00ed23e
  8.97%  ││  0x00007f00e00ed188: mov    edx,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.Integer::intValue@1 (line 1123)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@36 (line 66)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f00e00ed20a
 27.47%  ││  0x00007f00e00ed18d: mov    rsi,QWORD PTR [rsp]
         ││  0x00007f00e00ed191: xchg   ax,ax
         ││  0x00007f00e00ed193: call   0x00007f00d8617f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  8.08%  ││  0x00007f00e00ed198: mov    r10,QWORD PTR [rsp+0x40]
         ││  0x00007f00e00ed19d: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@33 (line 234)
  0.23%  ││  0x00007f00e00ed1a5: mov    r11,QWORD PTR [r15+0x108]
  8.25%  ││  0x00007f00e00ed1ac: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@33 (line 234)
         ││  0x00007f00e00ed1b0: test   DWORD PTR [r11],eax  ;   {poll}
         ││  0x00007f00e00ed1b3: test   r10d,r10d
         │╰  0x00007f00e00ed1b6: je     0x00007f00e00ed170  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@36 (line 235)
         ↘   0x00007f00e00ed1b8: movabs r10,0x7f00f523da00
             0x00007f00e00ed1c2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@37 (line 235)
             0x00007f00e00ed1c5: mov    r10,QWORD PTR [rsp+0x48]
....................................................................................................
 62.37%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 496 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f00e00e8520: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f00e00e8524: movabs r12,0x800000000
            0x00007f00e00e852e: add    r10,r12
            0x00007f00e00e8531: xor    r12,r12
            0x00007f00e00e8534: cmp    rax,r10
            0x00007f00e00e8537: jne    0x00007f00d8617c80  ;   {runtime_call ic_miss_stub}
            0x00007f00e00e853d: data16 xchg ax,ax
          [Verified Entry Point]
  8.72%     0x00007f00e00e8540: mov    DWORD PTR [rsp-0x14000],eax
            0x00007f00e00e8547: push   rbp
  0.25%     0x00007f00e00e8548: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  7.65%     0x00007f00e00e854c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
            0x00007f00e00e8553: mov    r8d,edx
  0.19%     0x00007f00e00e8556: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  9.03%     0x00007f00e00e855d: mov    r9d,edx
            0x00007f00e00e8560: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
            0x00007f00e00e8563: cmp    r9d,r8d
         ╭  0x00007f00e00e8566: je     0x00007f00e00e8578  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.37%  │  0x00007f00e00e8568: add    rsp,0x20
  7.67%  │  0x00007f00e00e856c: pop    rbp
         │  0x00007f00e00e856d: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007f00e00e8574: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.39%  │  0x00007f00e00e8577: ret    
         ↘  0x00007f00e00e8578: mov    rbp,rsi
            0x00007f00e00e857b: mov    DWORD PTR [rsp],edx
            0x00007f00e00e857e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f00e00e8583: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f00e00e8588: mov    esi,0xffffff4d
            0x00007f00e00e858d: xchg   ax,ax
            0x00007f00e00e858f: call   0x00007f00d8619900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 34.28%  <total for region 2>

....[Hottest Regions]...............................................................................
 62.37%         c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub, version 536 (60 bytes) 
 34.28%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 496 (55 bytes) 
  1.30%              kernel  [unknown] (0 bytes) 
  0.14%              kernel  [unknown] (24 bytes) 
  0.12%              kernel  [unknown] (6 bytes) 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (47 bytes) 
  0.06%              kernel  [unknown] (39 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (30 bytes) 
  0.04%              kernel  [unknown] (6 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (9 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%        libc-2.28.so  __strchr_avx2 (17 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.15%  <...other 59 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 62.37%         c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub, version 536 
 34.28%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 496 
  2.51%              kernel  [unknown] 
  0.10%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%         interpreter  getstatic  178 getstatic  
  0.04%        libc-2.28.so  __strchr_avx2 
  0.02%        libc-2.28.so  __memmove_avx_unaligned_erms 
  0.02%           libjvm.so  _ZN22ComputeLinearScanOrder13compute_orderEP10BlockBegin 
  0.02%           libjvm.so  _ZN2os13javaTimeNanosEv 
  0.02%  libpthread-2.28.so  __condvar_cancel_waiting 
  0.02%           libjvm.so  _ZNK15ClassFileParser23verify_legal_class_nameEPK6SymbolP6Thread 
  0.02%           libjvm.so  _ZN12ConstantPool21impl_signature_ref_atEib 
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%           libjvm.so  _ZN17CompilationPolicy19compile_if_requiredERK12methodHandleP6Thread 
  0.02%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%  libpthread-2.28.so  __pthread_mutex_lock 
  0.02%           libjvm.so  SpinPause 
  0.02%           libjvm.so  _ZN12GraphBuilder27iterate_bytecodes_for_blockEi 
  0.02%           libjvm.so  _ZN16StrongRootsScopeC2Ej 
  0.37%  <...other 19 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.65%         c2, level 4
  2.51%              kernel
  0.55%           libjvm.so
  0.14%        libc-2.28.so
  0.10%         interpreter
  0.04%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 140994 total address lines.
Perf output processed (skipped 7.078 seconds):
 Column 1: cycles (5171 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub, version 523 (67 bytes) 

             0x00007fc57c51ec51: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fc57c51ed7e
             0x00007fc57c51ec59: mov    ebp,0x1
             0x00007fc57c51ec5e: test   r10d,r10d
         ╭   0x00007fc57c51ec61: jne    0x00007fc57c51ecb8  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@33 (line 234)
         │   0x00007fc57c51ec63: nop    WORD PTR [rax+rax*1+0x0]
         │   0x00007fc57c51ec6c: data16 data16 xchg ax,ax  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@36 (line 235)
  0.43%  │↗  0x00007fc57c51ec70: mov    r10,QWORD PTR [rsp+0x50]
  8.57%  ││  0x00007fc57c51ec75: mov    r10d,DWORD PTR [r10+0x10]
         ││                                                ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@1 (line 57)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││  0x00007fc57c51ec79: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Outer::getNested@1 (line 83)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@10 (line 61)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fc57c51ed16
         ││  0x00007fc57c51ec7e: mov    r10d,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Nested::getInner@1 (line 95)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@19 (line 63)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fc57c51ed2a
  0.41%  ││  0x00007fc57c51ec83: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Inner::getValue@1 (line 107)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@31 (line 65)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fc57c51ed3e
  9.26%  ││  0x00007fc57c51ec88: mov    edx,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.Integer::intValue@1 (line 1123)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvisEquivalent@36 (line 66)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fc57c51ed0a
 26.05%  ││  0x00007fc57c51ec8d: mov    rsi,QWORD PTR [rsp]
         ││  0x00007fc57c51ec91: xchg   ax,ax
         ││  0x00007fc57c51ec93: call   0x00007fc574a4bf00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  7.48%  ││  0x00007fc57c51ec98: mov    r10,QWORD PTR [rsp+0x40]
         ││  0x00007fc57c51ec9d: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@33 (line 234)
  0.27%  ││  0x00007fc57c51eca5: mov    r11,QWORD PTR [r15+0x108]
  8.10%  ││  0x00007fc57c51ecac: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@33 (line 234)
         ││  0x00007fc57c51ecb0: test   DWORD PTR [r11],eax  ;   {poll}
  0.02%  ││  0x00007fc57c51ecb3: test   r10d,r10d
         │╰  0x00007fc57c51ecb6: je     0x00007fc57c51ec70  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@36 (line 235)
         ↘   0x00007fc57c51ecb8: movabs r10,0x7fc591616a00
             0x00007fc57c51ecc2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@37 (line 235)
             0x00007fc57c51ecc5: mov    r10,QWORD PTR [rsp+0x48]
             0x00007fc57c51ecca: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@52 (line 237)
             0x00007fc57c51ecce: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub@40 (line 235)
....................................................................................................
 60.59%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 499 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fc57c51cb20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fc57c51cb24: movabs r12,0x800000000
            0x00007fc57c51cb2e: add    r10,r12
            0x00007fc57c51cb31: xor    r12,r12
            0x00007fc57c51cb34: cmp    rax,r10
            0x00007fc57c51cb37: jne    0x00007fc574a4bc80  ;   {runtime_call ic_miss_stub}
            0x00007fc57c51cb3d: data16 xchg ax,ax
          [Verified Entry Point]
  9.21%     0x00007fc57c51cb40: mov    DWORD PTR [rsp-0x14000],eax
            0x00007fc57c51cb47: push   rbp
  0.25%     0x00007fc57c51cb48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  8.33%     0x00007fc57c51cb4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
            0x00007fc57c51cb53: mov    r8d,edx
  0.31%     0x00007fc57c51cb56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  8.01%     0x00007fc57c51cb5d: mov    r9d,edx
            0x00007fc57c51cb60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
            0x00007fc57c51cb63: cmp    r9d,r8d
         ╭  0x00007fc57c51cb66: je     0x00007fc57c51cb78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.31%  │  0x00007fc57c51cb68: add    rsp,0x20
  8.51%  │  0x00007fc57c51cb6c: pop    rbp
  0.02%  │  0x00007fc57c51cb6d: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007fc57c51cb74: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.39%  │  0x00007fc57c51cb77: ret    
         ↘  0x00007fc57c51cb78: mov    rbp,rsi
            0x00007fc57c51cb7b: mov    DWORD PTR [rsp],edx
            0x00007fc57c51cb7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fc57c51cb83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fc57c51cb88: mov    esi,0xffffff4d
            0x00007fc57c51cb8d: xchg   ax,ax
            0x00007fc57c51cb8f: call   0x00007fc574a4d900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 35.33%  <total for region 2>

....[Hottest Regions]...............................................................................
 60.59%     c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub, version 523 (67 bytes) 
 35.33%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 499 (55 bytes) 
  2.53%          kernel  [unknown] (6 bytes) 
  0.12%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (41 bytes) 
  0.10%          kernel  [unknown] (9 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%       libjvm.so  _ZN5Arena7AmallocEmN17AllocFailStrategy13AllocFailEnumE.constprop.263 (21 bytes) 
  0.04%    libc-2.28.so  __strchr_avx2 (31 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.93%  <...other 48 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 60.59%     c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvisEquivalent_jmhTest::elvisEquivalent_avgt_jmhStub, version 523 
 35.33%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 499 
  3.17%          kernel  [unknown] 
  0.12%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%    libc-2.28.so  __strchr_avx2 
  0.06%       libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.04%       libjvm.so  _ZN5Arena7AmallocEmN17AllocFailStrategy13AllocFailEnumE.constprop.263 
  0.04%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%    libc-2.28.so  __strchrnul_avx2 
  0.04%    libc-2.28.so  _IO_fwrite 
  0.04%    libc-2.28.so  vfprintf 
  0.04%       libjvm.so  _ZN7nmethod16reloc_string_forEPhS0_ 
  0.04%    libc-2.28.so  _IO_default_xsputn 
  0.02%       libjvm.so  _ZNK4Type18remove_speculativeEv 
  0.02%       libjvm.so  jio_print 
  0.02%       libjvm.so  _ZN6Invoke5visitEP18InstructionVisitor 
  0.02%       libjvm.so  _ZN14GenerateOopMap19mark_reachable_codeEv 
  0.02%     interpreter  invoke return entry points  
  0.02%       libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%  hsdis-amd64.so  putop 
  0.25%  <...other 13 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.92%     c2, level 4
  3.17%          kernel
  0.46%       libjvm.so
  0.31%    libc-2.28.so
  0.06%  hsdis-amd64.so
  0.06%     interpreter
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyJavaBenchmark.ofNullable
# Parameters: (value = 42)

# Run progress: 14.29% complete, ETA 00:03:50
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.905 ns/op
# Warmup Iteration   2: 3.251 ns/op
# Warmup Iteration   3: 3.914 ns/op
# Warmup Iteration   4: 3.546 ns/op
# Warmup Iteration   5: 3.470 ns/op
Iteration   1: 3.521 ns/op
Iteration   2: 3.514 ns/op
Iteration   3: 3.178 ns/op
Iteration   4: 3.198 ns/op
Iteration   5: 3.205 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 19.05% complete, ETA 00:03:36
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.398 ns/op
# Warmup Iteration   2: 3.999 ns/op
# Warmup Iteration   3: 3.559 ns/op
# Warmup Iteration   4: 3.549 ns/op
# Warmup Iteration   5: 3.177 ns/op
Iteration   1: 3.244 ns/op
Iteration   2: 3.193 ns/op
Iteration   3: 3.196 ns/op
Iteration   4: 3.191 ns/op
Iteration   5: 3.193 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 23.81% complete, ETA 00:03:22
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.946 ns/op
# Warmup Iteration   2: 3.188 ns/op
# Warmup Iteration   3: 3.563 ns/op
# Warmup Iteration   4: 3.179 ns/op
# Warmup Iteration   5: 3.174 ns/op
Iteration   1: 3.570 ns/op
Iteration   2: 3.587 ns/op
Iteration   3: 3.548 ns/op
Iteration   4: 3.546 ns/op
Iteration   5: 3.184 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyJavaBenchmark.ofNullable":
  3.338 ±(99.9%) 0.191 ns/op [Average]
  (min, avg, max) = (3.178, 3.338, 3.587), stdev = 0.179
  CI (99.9%): [3.147, 3.529] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyJavaBenchmark.ofNullable:·asm":
PrintAssembly processed: 143957 total address lines.
Perf output processed (skipped 7.069 seconds):
 Column 1: cycles (5263 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 553 (104 bytes) 

                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@20 (line 232)
                                                           ;   {optimized virtual_call}
             0x00007fbecc73e56c: mov    r10,QWORD PTR [rsp+0x40]
             0x00007fbecc73e571: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fbecc73e6d6
             0x00007fbecc73e579: mov    ebp,0x1
             0x00007fbecc73e57e: test   r10d,r10d
         ╭   0x00007fbecc73e581: jne    0x00007fbecc73e5f0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@36 (line 235)
  0.02%  │↗  0x00007fbecc73e583: mov    r10,QWORD PTR [rsp+0x50]
  6.23%  ││  0x00007fbecc73e588: mov    r10d,DWORD PTR [r10+0x10]
         ││                                                ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@1 (line 48)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.31%  ││  0x00007fbecc73e58c: test   r10d,r10d
         ││  0x00007fbecc73e58f: je     0x00007fbecc73e622  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::ofNullable@1 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@4 (line 48)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.32%  ││  0x00007fbecc73e595: shl    r10,0x3            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@1
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 49)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.06%  ││  0x00007fbecc73e599: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Outer::getNested@1 (line 83)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@1 (line 49)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 49)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  6.61%  ││  0x00007fbecc73e59d: test   r10d,r10d
         ││  0x00007fbecc73e5a0: je     0x00007fbecc73e636  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::ofNullable@1 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 49)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 49)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.52%  ││  0x00007fbecc73e5a6: shl    r10,0x3            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$39/0x00000008000fd040::apply@1
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.25%  ││  0x00007fbecc73e5aa: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Nested::getInner@1 (line 95)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$1@1 (line 50)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$39/0x00000008000fd040::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.11%  ││  0x00007fbecc73e5ae: test   r10d,r10d
         ││  0x00007fbecc73e5b1: je     0x00007fbecc73e64a  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::ofNullable@1 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$1@4 (line 50)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$39/0x00000008000fd040::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  6.86%  ││  0x00007fbecc73e5b7: shl    r10,0x3            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$40/0x00000008000fd440::apply@1
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@28 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.25%  ││  0x00007fbecc73e5bb: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Inner::getValue@1 (line 107)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$2@1 (line 51)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$40/0x00000008000fd440::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@28 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.08%  ││  0x00007fbecc73e5bf: mov    edx,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::of@5 (line 120)
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$2@4 (line 51)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$40/0x00000008000fd440::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@28 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fbecc73e6a2
 18.96%  ││  0x00007fbecc73e5c4: mov    rsi,QWORD PTR [rsp]
  1.10%  ││  0x00007fbecc73e5c8: data16 xchg ax,ax
  0.27%  ││  0x00007fbecc73e5cb: call   0x00007fbec4c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  6.50%  ││  0x00007fbecc73e5d0: mov    r10,QWORD PTR [rsp+0x40]
  1.52%  ││  0x00007fbecc73e5d5: movzx  r11d,BYTE PTR [r10+0x94]  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::&lt;init&gt;@9 (line 107)
         ││                                                ; - java.util.Optional::of@5 (line 120)
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@4 (line 48)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.06%  ││  0x00007fbecc73e5dd: mov    r10,QWORD PTR [r15+0x108]
  6.37%  ││  0x00007fbecc73e5e4: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@33 (line 234)
  1.54%  ││  0x00007fbecc73e5e8: test   DWORD PTR [r10],eax  ;   {poll}
  0.34%  ││  0x00007fbecc73e5eb: test   r11d,r11d
         │╰  0x00007fbecc73e5ee: je     0x00007fbecc73e583  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@36 (line 235)
         ↘   0x00007fbecc73e5f0: movabs r10,0x7fbee2270a00
             0x00007fbecc73e5fa: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@37 (line 235)
             0x00007fbecc73e5fd: mov    r10,QWORD PTR [rsp+0x48]
             0x00007fbecc73e602: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@52 (line 237)
             0x00007fbecc73e606: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@40 (line 235)
....................................................................................................
 62.28%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 516 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fbecc739520: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fbecc739524: movabs r12,0x800000000
            0x00007fbecc73952e: add    r10,r12
            0x00007fbecc739531: xor    r12,r12
            0x00007fbecc739534: cmp    rax,r10
            0x00007fbecc739537: jne    0x00007fbec4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fbecc73953d: data16 xchg ax,ax
          [Verified Entry Point]
  6.25%     0x00007fbecc739540: mov    DWORD PTR [rsp-0x14000],eax
  1.39%     0x00007fbecc739547: push   rbp
  0.02%     0x00007fbecc739548: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  7.51%     0x00007fbecc73954c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.19%     0x00007fbecc739553: mov    r8d,edx
  0.06%     0x00007fbecc739556: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  6.80%     0x00007fbecc73955d: mov    r9d,edx
  1.43%     0x00007fbecc739560: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.19%     0x00007fbecc739563: cmp    r9d,r8d
         ╭  0x00007fbecc739566: je     0x00007fbecc739578  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.06%  │  0x00007fbecc739568: add    rsp,0x20
  6.48%  │  0x00007fbecc73956c: pop    rbp
  1.20%  │  0x00007fbecc73956d: mov    r10,QWORD PTR [r15+0x108]
  0.40%  │  0x00007fbecc739574: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.06%  │  0x00007fbecc739577: ret    
         ↘  0x00007fbecc739578: mov    rbp,rsi
            0x00007fbecc73957b: mov    DWORD PTR [rsp],edx
            0x00007fbecc73957e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fbecc739583: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fbecc739588: mov    esi,0xffffff4d
            0x00007fbecc73958d: xchg   ax,ax
            0x00007fbecc73958f: call   0x00007fbec4c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 32.02%  <total for region 2>

....[Hottest Regions]...............................................................................
 62.28%         c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 553 (104 bytes) 
 32.02%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 516 (55 bytes) 
  3.44%              kernel  [unknown] (6 bytes) 
  0.25%              kernel  [unknown] (1 bytes) 
  0.13%              kernel  [unknown] (39 bytes) 
  0.11%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (47 bytes) 
  0.06%              kernel  [unknown] (17 bytes) 
  0.06%          ld-2.28.so  __tls_get_addr (21 bytes) 
  0.04%              kernel  [unknown] (5 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (1 bytes) 
  0.04%              kernel  [unknown] (2 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%      hsdis-amd64.so  print_insn (0 bytes) 
  0.04%        libc-2.28.so  __strchrnul_avx2 (22 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.29%  <...other 68 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 62.28%         c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 553 
 32.02%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 516 
  4.83%              kernel  [unknown] 
  0.11%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%      hsdis-amd64.so  print_insn 
  0.06%          ld-2.28.so  __tls_get_addr 
  0.04%        libc-2.28.so  __strchrnul_avx2 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%           libjvm.so  _ZN10Relocation4typeEv 
  0.02%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%        libc-2.28.so  _IO_fflush 
  0.02%      hsdis-amd64.so  putop 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%           libjvm.so  _ZN12outputStream5printEPKcz 
  0.02%           libjvm.so  _ZNK13InstanceKlass22uncached_lookup_methodEPK6SymbolS2_N5Klass18OverpassLookupModeENS3_17PrivateLookupModeE 
  0.02%           libjvm.so  SpinPause 
  0.02%           libjvm.so  _ZNK6Symbol14print_value_onEP12outputStream 
  0.02%           libjvm.so  _ZN16ciBytecodeStream26get_declared_method_holderEv 
  0.27%  <...other 14 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 94.30%         c2, level 4
  4.83%              kernel
  0.49%           libjvm.so
  0.17%        libc-2.28.so
  0.08%      hsdis-amd64.so
  0.06%         interpreter
  0.06%          ld-2.28.so
  0.02%  libpthread-2.28.so
....................................................................................................
100.00%  <totals>

PrintAssembly processed: 141517 total address lines.
Perf output processed (skipped 7.001 seconds):
 Column 1: cycles (5202 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 541 (99 bytes) 

                                                           ;   {optimized virtual_call}
             0x00007fac7473e56c: mov    r10,QWORD PTR [rsp+0x40]
             0x00007fac7473e571: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fac7473e6d6
             0x00007fac7473e579: mov    ebp,0x1
             0x00007fac7473e57e: test   r10d,r10d
         ╭   0x00007fac7473e581: jne    0x00007fac7473e5f0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@36 (line 235)
         │↗  0x00007fac7473e583: mov    r10,QWORD PTR [rsp+0x50]
  6.82%  ││  0x00007fac7473e588: mov    r10d,DWORD PTR [r10+0x10]
         ││                                                ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@1 (line 48)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.60%  ││  0x00007fac7473e58c: test   r10d,r10d
         ││  0x00007fac7473e58f: je     0x00007fac7473e622  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::ofNullable@1 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@4 (line 48)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.25%  ││  0x00007fac7473e595: shl    r10,0x3            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@1
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 49)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.06%  ││  0x00007fac7473e599: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Outer::getNested@1 (line 83)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@1 (line 49)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 49)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  6.19%  ││  0x00007fac7473e59d: test   r10d,r10d
         ││  0x00007fac7473e5a0: je     0x00007fac7473e636  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::ofNullable@1 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 49)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 49)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.10%  ││  0x00007fac7473e5a6: shl    r10,0x3            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$39/0x00000008000fd040::apply@1
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.27%  ││  0x00007fac7473e5aa: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Nested::getInner@1 (line 95)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$1@1 (line 50)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$39/0x00000008000fd040::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.04%  ││  0x00007fac7473e5ae: test   r10d,r10d
         ││  0x00007fac7473e5b1: je     0x00007fac7473e64a  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::ofNullable@1 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$1@4 (line 50)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$39/0x00000008000fd040::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  6.50%  ││  0x00007fac7473e5b7: shl    r10,0x3            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$40/0x00000008000fd440::apply@1
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@28 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.33%  ││  0x00007fac7473e5bb: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Inner::getValue@1 (line 107)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$2@1 (line 51)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$40/0x00000008000fd440::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@28 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.13%  ││  0x00007fac7473e5bf: mov    edx,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::of@5 (line 120)
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$2@4 (line 51)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$40/0x00000008000fd440::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@28 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fac7473e6a2
 18.22%  ││  0x00007fac7473e5c4: mov    rsi,QWORD PTR [rsp]
  1.35%  ││  0x00007fac7473e5c8: data16 xchg ax,ax
  0.31%  ││  0x00007fac7473e5cb: call   0x00007fac6cc68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  6.27%  ││  0x00007fac7473e5d0: mov    r10,QWORD PTR [rsp+0x40]
  1.71%  ││  0x00007fac7473e5d5: movzx  r11d,BYTE PTR [r10+0x94]  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::&lt;init&gt;@9 (line 107)
         ││                                                ; - java.util.Optional::of@5 (line 120)
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@4 (line 48)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
         ││  0x00007fac7473e5dd: mov    r10,QWORD PTR [r15+0x108]
  7.02%  ││  0x00007fac7473e5e4: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@33 (line 234)
  1.77%  ││  0x00007fac7473e5e8: test   DWORD PTR [r10],eax  ;   {poll}
  0.17%  ││  0x00007fac7473e5eb: test   r11d,r11d
         │╰  0x00007fac7473e5ee: je     0x00007fac7473e583  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@36 (line 235)
         ↘   0x00007fac7473e5f0: movabs r10,0x7fac8b4cba00
             0x00007fac7473e5fa: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@37 (line 235)
             0x00007fac7473e5fd: mov    r10,QWORD PTR [rsp+0x48]
             0x00007fac7473e602: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@52 (line 237)
             0x00007fac7473e606: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@40 (line 235)
....................................................................................................
 62.09%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 510 (52 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fac7473a120: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fac7473a124: movabs r12,0x800000000
            0x00007fac7473a12e: add    r10,r12
            0x00007fac7473a131: xor    r12,r12
            0x00007fac7473a134: cmp    rax,r10
            0x00007fac7473a137: jne    0x00007fac6cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007fac7473a13d: data16 xchg ax,ax
          [Verified Entry Point]
  7.21%     0x00007fac7473a140: mov    DWORD PTR [rsp-0x14000],eax
  1.69%     0x00007fac7473a147: push   rbp
  0.04%     0x00007fac7473a148: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  7.80%     0x00007fac7473a14c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.27%     0x00007fac7473a153: mov    r8d,edx
  0.02%     0x00007fac7473a156: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  6.98%     0x00007fac7473a15d: mov    r9d,edx
  1.58%     0x00007fac7473a160: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.19%     0x00007fac7473a163: cmp    r9d,r8d
         ╭  0x00007fac7473a166: je     0x00007fac7473a178  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
         │  0x00007fac7473a168: add    rsp,0x20
  6.29%  │  0x00007fac7473a16c: pop    rbp
  0.94%  │  0x00007fac7473a16d: mov    r10,QWORD PTR [r15+0x108]
  0.27%  │  0x00007fac7473a174: test   DWORD PTR [r10],eax  ;   {poll_return}
         │  0x00007fac7473a177: ret    
         ↘  0x00007fac7473a178: mov    rbp,rsi
            0x00007fac7473a17b: mov    DWORD PTR [rsp],edx
            0x00007fac7473a17e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fac7473a183: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fac7473a188: mov    esi,0xffffff4d
            0x00007fac7473a18d: xchg   ax,ax
            0x00007fac7473a18f: call   0x00007fac6cc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
....................................................................................................
 33.28%  <total for region 2>

....[Hottest Regions]...............................................................................
 62.09%         c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 541 (99 bytes) 
 33.28%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 510 (52 bytes) 
  2.17%              kernel  [unknown] (6 bytes) 
  0.33%              kernel  [unknown] (0 bytes) 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (41 bytes) 
  0.13%              kernel  [unknown] (33 bytes) 
  0.10%              kernel  [unknown] (39 bytes) 
  0.08%              kernel  [unknown] (9 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (5 bytes) 
  0.04%      hsdis-amd64.so  print_insn (10 bytes) 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (14 bytes) 
  0.04%  libpthread-2.28.so  __pthread_disable_asynccancel (0 bytes) 
  0.04%  libpthread-2.28.so  __libc_write (16 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.13%  <...other 59 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 62.09%         c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 541 
 33.28%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 510 
  3.56%              kernel  [unknown] 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.10%      hsdis-amd64.so  print_insn 
  0.06%         interpreter  method entry point (kind = zerolocals)  
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%  libpthread-2.28.so  __pthread_disable_asynccancel 
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%        libc-2.28.so  vfprintf 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.02%           libjvm.so  _ZN33MasterFreeRegionListMtSafeChecker5checkEv 
  0.02%        libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.02%         interpreter  getstatic  178 getstatic  
  0.02%        libc-2.28.so  _IO_fflush 
  0.02%           libjvm.so  _ZN17SignatureIterator10parse_typeEv 
  0.02%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%        libc-2.28.so  __strchrnul_avx2 
  0.02%           libjvm.so  _ZN24DebugInformationRecorder14describe_scopeEiRK12methodHandleP8ciMethodibbbbP10DebugTokenS6_S6_ 
  0.02%         interpreter  iinc  132 iinc  
  0.35%  <...other 18 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.37%         c2, level 4
  3.56%              kernel
  0.44%           libjvm.so
  0.19%         interpreter
  0.17%        libc-2.28.so
  0.13%  libpthread-2.28.so
  0.10%      hsdis-amd64.so
  0.02%          ld-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 143694 total address lines.
Perf output processed (skipped 7.107 seconds):
 Column 1: cycles (5270 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 563 (99 bytes) 

                                                           ;   {optimized virtual_call}
             0x00007fcc707420ec: mov    r10,QWORD PTR [rsp+0x40]
             0x00007fcc707420f1: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fcc70742256
             0x00007fcc707420f9: mov    ebp,0x1
             0x00007fcc707420fe: test   r10d,r10d
         ╭   0x00007fcc70742101: jne    0x00007fcc70742170  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@36 (line 235)
         │↗  0x00007fcc70742103: mov    r10,QWORD PTR [rsp+0x50]
  6.66%  ││  0x00007fcc70742108: mov    r10d,DWORD PTR [r10+0x10]
         ││                                                ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@1 (line 48)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.44%  ││  0x00007fcc7074210c: test   r10d,r10d
         ││  0x00007fcc7074210f: je     0x00007fcc707421a2  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::ofNullable@1 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@4 (line 48)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.25%  ││  0x00007fcc70742115: shl    r10,0x3            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@1
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 49)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
         ││  0x00007fcc70742119: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Outer::getNested@1 (line 83)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@1 (line 49)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 49)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  6.47%  ││  0x00007fcc7074211d: test   r10d,r10d
         ││  0x00007fcc70742120: je     0x00007fcc707421b6  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::ofNullable@1 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 49)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 49)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.46%  ││  0x00007fcc70742126: shl    r10,0x3            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$39/0x00000008000fd040::apply@1
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.25%  ││  0x00007fcc7074212a: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Nested::getInner@1 (line 95)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$1@1 (line 50)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$39/0x00000008000fd040::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.15%  ││  0x00007fcc7074212e: test   r10d,r10d
         ││  0x00007fcc70742131: je     0x00007fcc707421ca  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::ofNullable@1 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$1@4 (line 50)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$39/0x00000008000fd040::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  6.49%  ││  0x00007fcc70742137: shl    r10,0x3            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$40/0x00000008000fd440::apply@1
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@28 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.20%  ││  0x00007fcc7074213b: mov    r10d,DWORD PTR [r10+0xc]  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Inner::getValue@1 (line 107)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$2@1 (line 51)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$40/0x00000008000fd440::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@28 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.01%  ││  0x00007fcc7074213f: mov    edx,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*invokespecial &lt;init&gt; {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::of@5 (line 120)
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$2@4 (line 51)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$40/0x00000008000fd440::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@28 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fcc70742222
 19.24%  ││  0x00007fcc70742144: mov    rsi,QWORD PTR [rsp]
  1.39%  ││  0x00007fcc70742148: data16 xchg ax,ax
  0.25%  ││  0x00007fcc7074214b: call   0x00007fcc68c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  6.09%  ││  0x00007fcc70742150: mov    r10,QWORD PTR [rsp+0x40]
  1.65%  ││  0x00007fcc70742155: movzx  r11d,BYTE PTR [r10+0x94]  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::&lt;init&gt;@9 (line 107)
         ││                                                ; - java.util.Optional::of@5 (line 120)
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@4 (line 48)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
         ││  0x00007fcc7074215d: mov    r10,QWORD PTR [r15+0x108]
  6.11%  ││  0x00007fcc70742164: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@33 (line 234)
  1.44%  ││  0x00007fcc70742168: test   DWORD PTR [r10],eax  ;   {poll}
  0.19%  ││  0x00007fcc7074216b: test   r11d,r11d
         │╰  0x00007fcc7074216e: je     0x00007fcc70742103  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@36 (line 235)
         ↘   0x00007fcc70742170: movabs r10,0x7fcc87ec2a00
             0x00007fcc7074217a: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@37 (line 235)
             0x00007fcc7074217d: mov    r10,QWORD PTR [rsp+0x48]
             0x00007fcc70742182: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@52 (line 237)
             0x00007fcc70742186: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@40 (line 235)
....................................................................................................
 61.73%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 524 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fcc7073afa0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fcc7073afa4: movabs r12,0x800000000
            0x00007fcc7073afae: add    r10,r12
            0x00007fcc7073afb1: xor    r12,r12
            0x00007fcc7073afb4: cmp    rax,r10
            0x00007fcc7073afb7: jne    0x00007fcc68c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fcc7073afbd: data16 xchg ax,ax
          [Verified Entry Point]
  5.96%     0x00007fcc7073afc0: mov    DWORD PTR [rsp-0x14000],eax
  1.67%     0x00007fcc7073afc7: push   rbp
  0.04%     0x00007fcc7073afc8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  8.05%     0x00007fcc7073afcc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.25%     0x00007fcc7073afd3: mov    r8d,edx
            0x00007fcc7073afd6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  6.72%     0x00007fcc7073afdd: mov    r9d,edx
  1.29%     0x00007fcc7073afe0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.27%     0x00007fcc7073afe3: cmp    r9d,r8d
         ╭  0x00007fcc7073afe6: je     0x00007fcc7073aff8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.02%  │  0x00007fcc7073afe8: add    rsp,0x20
  6.51%  │  0x00007fcc7073afec: pop    rbp
  1.40%  │  0x00007fcc7073afed: mov    r10,QWORD PTR [r15+0x108]
  0.25%  │  0x00007fcc7073aff4: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.02%  │  0x00007fcc7073aff7: ret    
         ↘  0x00007fcc7073aff8: mov    rbp,rsi
            0x00007fcc7073affb: mov    DWORD PTR [rsp],edx
            0x00007fcc7073affe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fcc7073b003: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fcc7073b008: mov    esi,0xffffff4d
            0x00007fcc7073b00d: xchg   ax,ax
            0x00007fcc7073b00f: call   0x00007fcc68c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 32.43%  <total for region 2>

....[Hottest Regions]...............................................................................
 61.73%     c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 563 (99 bytes) 
 32.43%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 524 (55 bytes) 
  3.80%          kernel  [unknown] (6 bytes) 
  0.17%          kernel  [unknown] (1 bytes) 
  0.09%          kernel  [unknown] (54 bytes) 
  0.09%          kernel  [unknown] (32 bytes) 
  0.09%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (28 bytes) 
  0.08%          kernel  [unknown] (9 bytes) 
  0.08%          kernel  [unknown] (26 bytes) 
  0.06%          kernel  [unknown] (26 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (30 bytes) 
  0.04%          kernel  [unknown] (4 bytes) 
  0.04%       libjvm.so  _ZN12outputStream15update_positionEPKcm (6 bytes) 
  0.04%    libc-2.28.so  syscall (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  1.02%  <...other 54 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 61.73%     c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 563 
 32.43%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 524 
  5.18%          kernel  [unknown] 
  0.09%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%  hsdis-amd64.so  print_insn 
  0.04%       libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.04%    libc-2.28.so  _IO_default_xsputn 
  0.04%    libc-2.28.so  syscall 
  0.02%       libjvm.so  _ZN14AccessInternal19PostRuntimeDispatchIN12G1BarrierSet13AccessBarrierILm2670710ES1_EELNS_11BarrierTypeE1ELm2670710EE18oop_access_barrierEP7oopDesclS7_ 
  0.02%     c1, level 3  java.lang.Exception::&lt;init&gt;, version 482 
  0.02%       libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%       libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%  hsdis-amd64.so  putop 
  0.02%       libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%    libc-2.28.so  __printf_fp 
  0.02%  perf-16711.map  [unknown] 
  0.02%       libjvm.so  _ZN10LinearScan32sort_intervals_before_allocationEv 
  0.02%       libjvm.so  _ZN10HandleMarkD2Ev 
  0.02%       libjvm.so  _ZN13xmlTextStream5writeEPKcm 
  0.02%    libc-2.28.so  _IO_fwrite 
  0.17%  <...other 9 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.16%     c2, level 4
  5.18%          kernel
  0.36%       libjvm.so
  0.13%    libc-2.28.so
  0.06%  hsdis-amd64.so
  0.06%     interpreter
  0.02%     c1, level 3
  0.02%  perf-16711.map
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyKtBenchmark.elvis
# Parameters: (value = 42)

# Run progress: 28.57% complete, ETA 00:03:09
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.651 ns/op
# Warmup Iteration   2: 2.939 ns/op
# Warmup Iteration   3: 3.421 ns/op
# Warmup Iteration   4: 2.920 ns/op
# Warmup Iteration   5: 2.916 ns/op
Iteration   1: 2.914 ns/op
Iteration   2: 2.902 ns/op
Iteration   3: 2.903 ns/op
Iteration   4: 2.903 ns/op
Iteration   5: 2.904 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 33.33% complete, ETA 00:02:57
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.610 ns/op
# Warmup Iteration   2: 3.256 ns/op
# Warmup Iteration   3: 3.805 ns/op
# Warmup Iteration   4: 3.230 ns/op
# Warmup Iteration   5: 3.220 ns/op
Iteration   1: 3.239 ns/op
Iteration   2: 3.234 ns/op
Iteration   3: 3.208 ns/op
Iteration   4: 3.220 ns/op
Iteration   5: 3.221 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 38.10% complete, ETA 00:02:44
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.578 ns/op
# Warmup Iteration   2: 2.935 ns/op
# Warmup Iteration   3: 3.430 ns/op
# Warmup Iteration   4: 2.899 ns/op
# Warmup Iteration   5: 2.909 ns/op
Iteration   1: 2.932 ns/op
Iteration   2: 3.400 ns/op
Iteration   3: 3.144 ns/op
Iteration   4: 3.147 ns/op
Iteration   5: 2.874 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyKtBenchmark.elvis":
  3.076 ±(99.9%) 0.188 ns/op [Average]
  (min, avg, max) = (2.874, 3.076, 3.400), stdev = 0.176
  CI (99.9%): [2.888, 3.264] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyKtBenchmark.elvis:·asm":
PrintAssembly processed: 142545 total address lines.
Perf output processed (skipped 7.199 seconds):
 Column 1: cycles (5176 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 544 (67 bytes) 

             0x00007f785473ea30: mov    r10,QWORD PTR [rsp+0x40]
             0x00007f785473ea35: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f785473eb42
             0x00007f785473ea3d: mov    ebp,0x1
             0x00007f785473ea42: test   r10d,r10d
         ╭   0x00007f785473ea45: jne    0x00007f785473ea98  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
         │   0x00007f785473ea47: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@36 (line 235)
  5.12%  │↗  0x00007f785473ea50: mov    r10,QWORD PTR [rsp+0x50]
  3.36%  ││  0x00007f785473ea55: mov    r10d,DWORD PTR [r10+0x1c]
         ││                                                ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@1 (line 70)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  1.02%  ││  0x00007f785473ea59: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Outer::getNested@1 (line 88)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@17 (line 70)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f785473eae6
  0.25%  ││  0x00007f785473ea5e: mov    r10d,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Nested::getInner@1 (line 92)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@24 (line 70)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f785473eafa
  5.56%  ││  0x00007f785473ea63: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ; implicit exception: dispatches to 0x00007f785473eb0e
 14.70%  ││  0x00007f785473ea68: mov    rdx,r11
  0.17%  ││  0x00007f785473ea6b: shl    rdx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Inner::getValue@1 (line 95)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@31 (line 70)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  5.72%  ││  0x00007f785473ea6f: mov    rsi,QWORD PTR [rsp]
  2.88%  ││  0x00007f785473ea73: call   0x00007f784cc68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  3.19%  ││  0x00007f785473ea78: mov    r10,QWORD PTR [rsp+0x40]
  0.85%  ││  0x00007f785473ea7d: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
  5.56%  ││  0x00007f785473ea85: mov    r11,QWORD PTR [r15+0x108]
  2.90%  ││  0x00007f785473ea8c: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
  0.79%  ││  0x00007f785473ea90: test   DWORD PTR [r11],eax  ;   {poll}
  0.21%  ││  0x00007f785473ea93: test   r10d,r10d
         │╰  0x00007f785473ea96: je     0x00007f785473ea50  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@36 (line 235)
         ↘   0x00007f785473ea98: movabs r10,0x7f7869a12a00
             0x00007f785473eaa2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@37 (line 235)
             0x00007f785473eaa5: mov    r10,QWORD PTR [rsp+0x48]
             0x00007f785473eaaa: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@52 (line 237)
             0x00007f785473eaae: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@40 (line 235)
....................................................................................................
 52.30%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 512 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f7854739bc0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f7854739bc4: movabs r12,0x800000000
            0x00007f7854739bce: add    r10,r12
            0x00007f7854739bd1: xor    r12,r12
            0x00007f7854739bd4: cmp    rax,r10
            0x00007f7854739bd7: jne    0x00007f784cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007f7854739bdd: data16 xchg ax,ax
          [Verified Entry Point]
  0.85%     0x00007f7854739be0: mov    DWORD PTR [rsp-0x14000],eax
  8.85%     0x00007f7854739be7: push   rbp
  0.64%     0x00007f7854739be8: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  5.02%     0x00007f7854739bec: mov    QWORD PTR [rsp],rdx
  2.69%     0x00007f7854739bf0: mov    QWORD PTR [rsp+0x8],rsi
  0.64%     0x00007f7854739bf5: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  0.19%     0x00007f7854739bfb: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  5.62%     0x00007f7854739c06: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  3.05%     0x00007f7854739c0d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
  0.73%     0x00007f7854739c14: and    r11d,ebp
  0.12%     0x00007f7854739c17: test   r11d,r11d
         ╭  0x00007f7854739c1a: je     0x00007f7854739c2c  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  5.78%  │  0x00007f7854739c1c: add    rsp,0x30
  3.25%  │  0x00007f7854739c20: pop    rbp
  0.70%  │  0x00007f7854739c21: mov    r10,QWORD PTR [r15+0x108]
  0.15%  │  0x00007f7854739c28: test   DWORD PTR [r10],eax  ;   {poll_return}
  5.39%  │  0x00007f7854739c2b: ret    
         ↘  0x00007f7854739c2c: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f7854739c33: mov    r10,rbx
            0x00007f7854739c36: add    r10,0x20
            0x00007f7854739c3a: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f7854739c41: jae    0x00007f7854739e9e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f7854739c47: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 43.66%  <total for region 2>

....[Hottest Regions]...............................................................................
 52.30%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 544 (67 bytes) 
 43.66%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 512 (75 bytes) 
  2.40%              kernel  [unknown] (6 bytes) 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.14%              kernel  [unknown] (0 bytes) 
  0.12%              kernel  [unknown] (37 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (26 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%        libc-2.28.so  _IO_default_xsputn (2 bytes) 
  0.04%        libc-2.28.so  __strcpy_sse2_unaligned (14 bytes) 
  0.04%  libpthread-2.28.so  pthread_cond_wait@@GLIBC_2.3.2 (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.79%  <...other 41 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 52.30%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 544 
 43.66%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 512 
  3.32%              kernel  [unknown] 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%  libpthread-2.28.so  pthread_cond_wait@@GLIBC_2.3.2 
  0.04%        libc-2.28.so  __strcpy_sse2_unaligned 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.02%         interpreter  fast_zputfield  213 fast_zputfield  
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%        libc-2.28.so  _IO_fflush 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%           libjvm.so  _ZN10CompileLog8identifyEP12ciBaseObject 
  0.02%                      <unknown> 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%        libc-2.28.so  __strlen_avx2 
  0.02%         c2, level 4  java.lang.StringBuilder::append, version 450 
  0.02%           libjvm.so  _ZNK6BitMap19get_next_one_offsetEmm.part.167 
  0.02%         interpreter  aload  25 aload  
  0.02%           libjvm.so  _ZN10Reflection19verify_class_accessEPK5KlassPK13InstanceKlassb 
  0.02%        libc-2.28.so  _IO_fwrite 
  0.17%  <...other 9 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.98%         c2, level 4
  3.32%              kernel
  0.33%           libjvm.so
  0.21%        libc-2.28.so
  0.08%         interpreter
  0.04%  libpthread-2.28.so
  0.02%                    
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 136545 total address lines.
Perf output processed (skipped 7.087 seconds):
 Column 1: cycles (5220 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 524 (67 bytes) 

             0x00007f370473da30: mov    r10,QWORD PTR [rsp+0x40]
             0x00007f370473da35: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f370473db42
             0x00007f370473da3d: mov    ebp,0x1
             0x00007f370473da42: test   r10d,r10d
         ╭   0x00007f370473da45: jne    0x00007f370473da98  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
         │   0x00007f370473da47: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@36 (line 235)
  5.17%  │↗  0x00007f370473da50: mov    r10,QWORD PTR [rsp+0x50]
  3.08%  ││  0x00007f370473da55: mov    r10d,DWORD PTR [r10+0x1c]
         ││                                                ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@1 (line 70)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  1.05%  ││  0x00007f370473da59: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Outer::getNested@1 (line 88)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@17 (line 70)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f370473dae6
  0.21%  ││  0x00007f370473da5e: mov    r10d,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Nested::getInner@1 (line 92)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@24 (line 70)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f370473dafa
  6.02%  ││  0x00007f370473da63: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ; implicit exception: dispatches to 0x00007f370473db0e
 14.94%  ││  0x00007f370473da68: mov    rdx,r11
  0.23%  ││  0x00007f370473da6b: shl    rdx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Inner::getValue@1 (line 95)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@31 (line 70)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  5.23%  ││  0x00007f370473da6f: mov    rsi,QWORD PTR [rsp]
  2.99%  ││  0x00007f370473da73: call   0x00007f36fcc68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  2.80%  ││  0x00007f370473da78: mov    r10,QWORD PTR [rsp+0x40]
  1.11%  ││  0x00007f370473da7d: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
  5.56%  ││  0x00007f370473da85: mov    r11,QWORD PTR [r15+0x108]
  2.74%  ││  0x00007f370473da8c: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
  0.69%  ││  0x00007f370473da90: test   DWORD PTR [r11],eax  ;   {poll}
  0.11%  ││  0x00007f370473da93: test   r10d,r10d
         │╰  0x00007f370473da96: je     0x00007f370473da50  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@36 (line 235)
         ↘   0x00007f370473da98: movabs r10,0x7f371c67ca00
             0x00007f370473daa2: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@37 (line 235)
             0x00007f370473daa5: mov    r10,QWORD PTR [rsp+0x48]
             0x00007f370473daaa: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@52 (line 237)
             0x00007f370473daae: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@40 (line 235)
....................................................................................................
 51.93%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 489 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f37047384c0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f37047384c4: movabs r12,0x800000000
            0x00007f37047384ce: add    r10,r12
            0x00007f37047384d1: xor    r12,r12
            0x00007f37047384d4: cmp    rax,r10
            0x00007f37047384d7: jne    0x00007f36fcc68c80  ;   {runtime_call ic_miss_stub}
            0x00007f37047384dd: data16 xchg ax,ax
          [Verified Entry Point]
  1.13%     0x00007f37047384e0: mov    DWORD PTR [rsp-0x14000],eax
  8.28%     0x00007f37047384e7: push   rbp
  0.56%     0x00007f37047384e8: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  5.19%     0x00007f37047384ec: mov    QWORD PTR [rsp],rdx
  2.89%     0x00007f37047384f0: mov    QWORD PTR [rsp+0x8],rsi
  1.05%     0x00007f37047384f5: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  0.11%     0x00007f37047384fb: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  5.21%     0x00007f3704738506: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  2.89%     0x00007f370473850d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
  0.80%     0x00007f3704738514: and    r11d,ebp
  0.06%     0x00007f3704738517: test   r11d,r11d
         ╭  0x00007f370473851a: je     0x00007f370473852c  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  5.33%  │  0x00007f370473851c: add    rsp,0x30
  2.80%  │  0x00007f3704738520: pop    rbp
  0.80%  │  0x00007f3704738521: mov    r10,QWORD PTR [r15+0x108]
  0.19%  │  0x00007f3704738528: test   DWORD PTR [r10],eax  ;   {poll_return}
  5.50%  │  0x00007f370473852b: ret    
         ↘  0x00007f370473852c: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f3704738533: mov    r10,rbx
            0x00007f3704738536: add    r10,0x20
            0x00007f370473853a: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f3704738541: jae    0x00007f370473879e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f3704738547: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 42.80%  <total for region 2>

....[Hottest Regions]...............................................................................
 51.93%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 524 (67 bytes) 
 42.80%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 489 (75 bytes) 
  3.12%              kernel  [unknown] (6 bytes) 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (36 bytes) 
  0.15%              kernel  [unknown] (0 bytes) 
  0.13%              kernel  [unknown] (39 bytes) 
  0.08%              kernel  [unknown] (16 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (3 bytes) 
  0.04%              kernel  [unknown] (6 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.11%  <...other 58 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 51.93%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 524 
 42.80%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 489 
  4.58%              kernel  [unknown] 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%  libpthread-2.28.so  __libc_write 
  0.02%        libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.02%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%      hsdis-amd64.so  putop 
  0.02%        libc-2.28.so  __strchrnul_avx2 
  0.02%           libjvm.so  _ZN14IntervalWalker7walk_toE13IntervalStatei.constprop.233 
  0.02%           libjvm.so  _ZN12outputStream5printEPKcz 
  0.02%      hsdis-amd64.so  print_insn 
  0.02%           libjvm.so  _ZN18InterpreterRuntime14resolve_invokeEP10JavaThreadN9Bytecodes4CodeE 
  0.02%         interpreter  iconst_1  4 iconst_1  
  0.02%           libjvm.so  _ZN7nmethod13scope_desc_inEPhS0_ 
  0.02%           libjvm.so  _ZN9xmlStream11method_textERK12methodHandle 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN10ValueStackC1EPS_NS_4KindEi 
  0.02%           libjvm.so  _ZN9Assembler4movlEP12RegisterImpl7Address 
  0.02%           libjvm.so  _ZNK6Thread12is_VM_threadEv 
  0.15%  <...other 8 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.73%         c2, level 4
  4.58%              kernel
  0.46%           libjvm.so
  0.08%         interpreter
  0.06%        libc-2.28.so
  0.04%      hsdis-amd64.so
  0.04%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 140471 total address lines.
Perf output processed (skipped 7.085 seconds):
 Column 1: cycles (5199 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 533 (67 bytes) 

             0x00007f1d4c73cfb0: mov    r10,QWORD PTR [rsp+0x40]
             0x00007f1d4c73cfb5: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f1d4c73d0c2
             0x00007f1d4c73cfbd: mov    ebp,0x1
             0x00007f1d4c73cfc2: test   r10d,r10d
         ╭   0x00007f1d4c73cfc5: jne    0x00007f1d4c73d018  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
         │   0x00007f1d4c73cfc7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@36 (line 235)
  5.27%  │↗  0x00007f1d4c73cfd0: mov    r10,QWORD PTR [rsp+0x50]
  2.79%  ││  0x00007f1d4c73cfd5: mov    r10d,DWORD PTR [r10+0x1c]
         ││                                                ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@1 (line 70)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  0.77%  ││  0x00007f1d4c73cfd9: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Outer::getNested@1 (line 88)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@17 (line 70)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f1d4c73d066
  0.15%  ││  0x00007f1d4c73cfde: mov    r10d,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Nested::getInner@1 (line 92)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@24 (line 70)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f1d4c73d07a
  6.58%  ││  0x00007f1d4c73cfe3: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ; implicit exception: dispatches to 0x00007f1d4c73d08e
 15.12%  ││  0x00007f1d4c73cfe8: mov    rdx,r11
  0.12%  ││  0x00007f1d4c73cfeb: shl    rdx,0x3            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Inner::getValue@1 (line 95)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@31 (line 70)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  5.92%  ││  0x00007f1d4c73cfef: mov    rsi,QWORD PTR [rsp]
  2.94%  ││  0x00007f1d4c73cff3: call   0x00007f1d44c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  2.35%  ││  0x00007f1d4c73cff8: mov    r10,QWORD PTR [rsp+0x40]
  1.12%  ││  0x00007f1d4c73cffd: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
  5.44%  ││  0x00007f1d4c73d005: mov    r11,QWORD PTR [r15+0x108]
  2.90%  ││  0x00007f1d4c73d00c: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
  0.62%  ││  0x00007f1d4c73d010: test   DWORD PTR [r11],eax  ;   {poll}
  0.17%  ││  0x00007f1d4c73d013: test   r10d,r10d
         │╰  0x00007f1d4c73d016: je     0x00007f1d4c73cfd0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@36 (line 235)
         ↘   0x00007f1d4c73d018: movabs r10,0x7f1d63faaa00
             0x00007f1d4c73d022: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@37 (line 235)
             0x00007f1d4c73d025: mov    r10,QWORD PTR [rsp+0x48]
             0x00007f1d4c73d02a: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@52 (line 237)
             0x00007f1d4c73d02e: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@40 (line 235)
....................................................................................................
 52.26%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 498 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f1d4c7384c0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f1d4c7384c4: movabs r12,0x800000000
            0x00007f1d4c7384ce: add    r10,r12
            0x00007f1d4c7384d1: xor    r12,r12
            0x00007f1d4c7384d4: cmp    rax,r10
            0x00007f1d4c7384d7: jne    0x00007f1d44c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f1d4c7384dd: data16 xchg ax,ax
          [Verified Entry Point]
  0.79%     0x00007f1d4c7384e0: mov    DWORD PTR [rsp-0x14000],eax
  7.62%     0x00007f1d4c7384e7: push   rbp
  0.65%     0x00007f1d4c7384e8: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  6.02%     0x00007f1d4c7384ec: mov    QWORD PTR [rsp],rdx
  2.73%     0x00007f1d4c7384f0: mov    QWORD PTR [rsp+0x8],rsi
  0.60%     0x00007f1d4c7384f5: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  0.17%     0x00007f1d4c7384fb: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  5.71%     0x00007f1d4c738506: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  2.87%     0x00007f1d4c73850d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
  0.63%     0x00007f1d4c738514: and    r11d,ebp
  0.19%     0x00007f1d4c738517: test   r11d,r11d
         ╭  0x00007f1d4c73851a: je     0x00007f1d4c73852c  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  5.29%  │  0x00007f1d4c73851c: add    rsp,0x30
  3.21%  │  0x00007f1d4c738520: pop    rbp
  0.83%  │  0x00007f1d4c738521: mov    r10,QWORD PTR [r15+0x108]
  0.08%  │  0x00007f1d4c738528: test   DWORD PTR [r10],eax  ;   {poll_return}
  5.40%  │  0x00007f1d4c73852b: ret    
         ↘  0x00007f1d4c73852c: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f1d4c738533: mov    r10,rbx
            0x00007f1d4c738536: add    r10,0x20
            0x00007f1d4c73853a: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f1d4c738541: jae    0x00007f1d4c73879e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f1d4c738547: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 42.80%  <total for region 2>

....[Hottest Regions]...............................................................................
 52.26%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 533 (67 bytes) 
 42.80%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 498 (75 bytes) 
  2.73%              kernel  [unknown] (6 bytes) 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.12%              kernel  [unknown] (0 bytes) 
  0.10%              kernel  [unknown] (1 bytes) 
  0.08%              kernel  [unknown] (30 bytes) 
  0.08%              kernel  [unknown] (30 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (25 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (19 bytes) 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm (9 bytes) 
  0.04%        libc-2.28.so  _IO_fwrite (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.21%  <...other 63 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 52.26%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 533 
 42.80%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 498 
  4.02%              kernel  [unknown] 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%        libc-2.28.so  _IO_fwrite 
  0.02%        libc-2.28.so  __memmove_avx_unaligned_erms 
  0.02%           libjvm.so  _ZN9Assembler4subqEP12RegisterImpli 
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%           libjvm.so  _ZN13LIR_Assembler9return_opEP11LIR_OprDesc 
  0.02%           libjvm.so  _ZN24java_lang_reflect_Method19has_signature_fieldEv 
  0.02%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%      hsdis-amd64.so  print_insn 
  0.02%           libjvm.so  _ZN13InstanceKlass16array_klass_implEbiP6Thread 
  0.02%  libpthread-2.28.so  __pthread_disable_asynccancel 
  0.02%           libjvm.so  _ZN11SymbolTable6lookupEPKciP6Thread 
  0.02%           libjvm.so  _ZN9metaspace12SpaceManager8allocateEm 
  0.02%        libc-2.28.so  __memmove_sse2_unaligned_erms 
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.35%  <...other 18 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.06%         c2, level 4
  4.02%              kernel
  0.69%           libjvm.so
  0.12%        libc-2.28.so
  0.06%         interpreter
  0.02%      hsdis-amd64.so
  0.02%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyKtBenchmark.lateinit
# Parameters: (value = 42)

# Run progress: 42.86% complete, ETA 00:02:31
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.693 ns/op
# Warmup Iteration   2: 3.097 ns/op
# Warmup Iteration   3: 3.602 ns/op
# Warmup Iteration   4: 3.703 ns/op
# Warmup Iteration   5: 3.317 ns/op
Iteration   1: 3.022 ns/op
Iteration   2: 3.032 ns/op
Iteration   3: 2.959 ns/op
Iteration   4: 2.992 ns/op
Iteration   5: 2.978 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 47.62% complete, ETA 00:02:18
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.684 ns/op
# Warmup Iteration   2: 3.200 ns/op
# Warmup Iteration   3: 2.743 ns/op
# Warmup Iteration   4: 2.725 ns/op
# Warmup Iteration   5: 2.900 ns/op
Iteration   1: 2.900 ns/op
Iteration   2: 2.715 ns/op
Iteration   3: 3.076 ns/op
Iteration   4: 3.049 ns/op
Iteration   5: 3.031 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 52.38% complete, ETA 00:02:06
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.612 ns/op
# Warmup Iteration   2: 3.164 ns/op
# Warmup Iteration   3: 2.682 ns/op
# Warmup Iteration   4: 2.769 ns/op
# Warmup Iteration   5: 2.755 ns/op
Iteration   1: 3.010 ns/op
Iteration   2: 2.836 ns/op
Iteration   3: 2.900 ns/op
Iteration   4: 2.710 ns/op
Iteration   5: 2.783 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyKtBenchmark.lateinit":
  2.933 ±(99.9%) 0.129 ns/op [Average]
  (min, avg, max) = (2.710, 2.933, 3.076), stdev = 0.121
  CI (99.9%): [2.803, 3.062] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyKtBenchmark.lateinit:·asm":
PrintAssembly processed: 135092 total address lines.
Perf output processed (skipped 7.067 seconds):
 Column 1: cycles (5183 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 524 (63 bytes) 

             0x00007f3dc851f031: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f3dc851f132
             0x00007f3dc851f039: mov    ebp,0x1
             0x00007f3dc851f03e: test   r10d,r10d
         ╭   0x00007f3dc851f041: jne    0x00007f3dc851f094  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
         │   0x00007f3dc851f043: nop    WORD PTR [rax+rax*1+0x0]
         │   0x00007f3dc851f04c: data16 data16 xchg ax,ax  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@36 (line 235)
  4.21%  │↗  0x00007f3dc851f050: mov    r10,QWORD PTR [rsp+0x50]
  0.02%  ││  0x00007f3dc851f055: mov    r10d,DWORD PTR [r10+0x18]
         ││                                                ;*getfield lateinitString {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@1 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
  5.04%  ││  0x00007f3dc851f059: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@1 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f3dc851f0f2
  0.39%  ││  0x00007f3dc851f05e: mov    edx,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@4 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f3dc851f0e6
 11.54%  ││  0x00007f3dc851f063: movsx  ecx,BYTE PTR [r12+r10*8+0x14]
         ││                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::coder@7 (line 3258)
         ││                                                ; - java.lang.String::length@6 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││  0x00007f3dc851f069: sar    edx,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@9 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
 14.35%  ││  0x00007f3dc851f06b: mov    rsi,QWORD PTR [rsp]
         ││  0x00007f3dc851f06f: call   0x00007f3dc0a4bf00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.12%  ││  0x00007f3dc851f074: mov    r10,QWORD PTR [rsp+0x40]
  5.15%  ││  0x00007f3dc851f079: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
  4.17%  ││  0x00007f3dc851f081: mov    r11,QWORD PTR [r15+0x108]
  0.06%  ││  0x00007f3dc851f088: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
  5.25%  ││  0x00007f3dc851f08c: test   DWORD PTR [r11],eax  ;   {poll}
  0.04%  ││  0x00007f3dc851f08f: test   r10d,r10d
         │╰  0x00007f3dc851f092: je     0x00007f3dc851f050  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@36 (line 235)
         ↘   0x00007f3dc851f094: movabs r10,0x7f3ddd5ada00
             0x00007f3dc851f09e: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@37 (line 235)
             0x00007f3dc851f0a1: mov    r10,QWORD PTR [rsp+0x48]
             0x00007f3dc851f0a6: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@52 (line 237)
             0x00007f3dc851f0aa: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@40 (line 235)
....................................................................................................
 50.32%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 490 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f3dc851ba20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f3dc851ba24: movabs r12,0x800000000
            0x00007f3dc851ba2e: add    r10,r12
            0x00007f3dc851ba31: xor    r12,r12
            0x00007f3dc851ba34: cmp    rax,r10
            0x00007f3dc851ba37: jne    0x00007f3dc0a4bc80  ;   {runtime_call ic_miss_stub}
            0x00007f3dc851ba3d: data16 xchg ax,ax
          [Verified Entry Point]
  5.11%     0x00007f3dc851ba40: mov    DWORD PTR [rsp-0x14000],eax
  4.88%     0x00007f3dc851ba47: push   rbp
  5.13%     0x00007f3dc851ba48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.07%     0x00007f3dc851ba4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
            0x00007f3dc851ba53: mov    r8d,edx
  5.21%     0x00007f3dc851ba56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
            0x00007f3dc851ba5d: mov    r9d,edx
  4.78%     0x00007f3dc851ba60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
            0x00007f3dc851ba63: cmp    r9d,r8d
         ╭  0x00007f3dc851ba66: je     0x00007f3dc851ba78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  5.58%  │  0x00007f3dc851ba68: add    rsp,0x20
         │  0x00007f3dc851ba6c: pop    rbp
  5.46%  │  0x00007f3dc851ba6d: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007f3dc851ba74: test   DWORD PTR [r10],eax  ;   {poll_return}
  5.21%  │  0x00007f3dc851ba77: ret    
         ↘  0x00007f3dc851ba78: mov    rbp,rsi
            0x00007f3dc851ba7b: mov    DWORD PTR [rsp],edx
            0x00007f3dc851ba7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f3dc851ba83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f3dc851ba88: mov    esi,0xffffff4d
            0x00007f3dc851ba8d: xchg   ax,ax
            0x00007f3dc851ba8f: call   0x00007f3dc0a4d900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 45.44%  <total for region 2>

....[Hottest Regions]...............................................................................
 50.32%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 524 (63 bytes) 
 45.44%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 490 (55 bytes) 
  2.66%              kernel  [unknown] (6 bytes) 
  0.17%              kernel  [unknown] (27 bytes) 
  0.14%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (47 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%  libpthread-2.28.so  pthread_cond_timedwait@@GLIBC_2.3.2 (0 bytes) 
  0.04%  libpthread-2.28.so  __libc_write (30 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.73%  <...other 38 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 50.32%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 524 
 45.44%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 490 
  3.61%              kernel  [unknown] 
  0.14%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%  libpthread-2.28.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.02%        libc-2.28.so  __memmove_avx_unaligned_erms 
  0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.02%           libjvm.so  _ZN10HandleMark10initializeEP6Thread 
  0.02%           libjvm.so  _ZN4UTF819quoted_ascii_lengthEPKci 
  0.02%           libjvm.so  _ZNK10CodeBuffer20compute_final_layoutEPS_ 
  0.02%         c1, level 3  java.util.zip.Inflater::inflate, version 410 
  0.02%           libjvm.so  _ZN13InstanceKlass17find_method_indexEPK5ArrayIP6MethodEPK6SymbolS8_N5Klass18OverpassLookupModeENS9_16StaticLookupModeENS9_17PrivateLookupModeE.constprop.269 
  0.02%           libjvm.so  _ZNK18ImmutableOopMapSet8print_onEP12outputStream 
  0.02%      hsdis-amd64.so  print_insn 
  0.02%           libjvm.so  SpinPause 
  0.02%        libc-2.28.so  _IO_padn 
  0.02%           libjvm.so  _ZN10ValueStack9values_doEP12ValueVisitor 
  0.08%  <...other 4 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.76%         c2, level 4
  3.61%              kernel
  0.42%           libjvm.so
  0.08%  libpthread-2.28.so
  0.06%        libc-2.28.so
  0.02%      hsdis-amd64.so
  0.02%         c1, level 3
  0.02%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 142832 total address lines.
Perf output processed (skipped 7.330 seconds):
 Column 1: cycles (5205 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 530 (63 bytes) 

             0x00007fddc473a831: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fddc473a932
             0x00007fddc473a839: mov    ebp,0x1
             0x00007fddc473a83e: test   r10d,r10d
         ╭   0x00007fddc473a841: jne    0x00007fddc473a894  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
         │   0x00007fddc473a843: nop    WORD PTR [rax+rax*1+0x0]
         │   0x00007fddc473a84c: data16 data16 xchg ax,ax  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@36 (line 235)
  4.63%  │↗  0x00007fddc473a850: mov    r10,QWORD PTR [rsp+0x50]
         ││  0x00007fddc473a855: mov    r10d,DWORD PTR [r10+0x18]
         ││                                                ;*getfield lateinitString {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@1 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
  5.03%  ││  0x00007fddc473a859: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@1 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fddc473a8f2
  0.08%  ││  0x00007fddc473a85e: mov    edx,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@4 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fddc473a8e6
 11.41%  ││  0x00007fddc473a863: movsx  ecx,BYTE PTR [r12+r10*8+0x14]
         ││                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::coder@7 (line 3258)
         ││                                                ; - java.lang.String::length@6 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
  0.02%  ││  0x00007fddc473a869: sar    edx,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@9 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
 14.20%  ││  0x00007fddc473a86b: mov    rsi,QWORD PTR [rsp]
         ││  0x00007fddc473a86f: call   0x00007fddbcc68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.04%  ││  0x00007fddc473a874: mov    r10,QWORD PTR [rsp+0x40]
  5.32%  ││  0x00007fddc473a879: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
  5.11%  ││  0x00007fddc473a881: mov    r11,QWORD PTR [r15+0x108]
         ││  0x00007fddc473a888: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
  5.05%  ││  0x00007fddc473a88c: test   DWORD PTR [r11],eax  ;   {poll}
  0.02%  ││  0x00007fddc473a88f: test   r10d,r10d
         │╰  0x00007fddc473a892: je     0x00007fddc473a850  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@36 (line 235)
         ↘   0x00007fddc473a894: movabs r10,0x7fddda080a00
             0x00007fddc473a89e: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@37 (line 235)
             0x00007fddc473a8a1: mov    r10,QWORD PTR [rsp+0x48]
             0x00007fddc473a8a6: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@52 (line 237)
             0x00007fddc473a8aa: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@40 (line 235)
....................................................................................................
 50.91%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 501 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fddc4738920: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fddc4738924: movabs r12,0x800000000
            0x00007fddc473892e: add    r10,r12
            0x00007fddc4738931: xor    r12,r12
            0x00007fddc4738934: cmp    rax,r10
            0x00007fddc4738937: jne    0x00007fddbcc68c80  ;   {runtime_call ic_miss_stub}
            0x00007fddc473893d: data16 xchg ax,ax
          [Verified Entry Point]
  5.07%     0x00007fddc4738940: mov    DWORD PTR [rsp-0x14000],eax
  5.01%     0x00007fddc4738947: push   rbp
  4.73%     0x00007fddc4738948: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.09%     0x00007fddc473894c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
            0x00007fddc4738953: mov    r8d,edx
  5.03%     0x00007fddc4738956: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
            0x00007fddc473895d: mov    r9d,edx
  5.30%     0x00007fddc4738960: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
            0x00007fddc4738963: cmp    r9d,r8d
         ╭  0x00007fddc4738966: je     0x00007fddc4738978  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.09%  │  0x00007fddc4738968: add    rsp,0x20
         │  0x00007fddc473896c: pop    rbp
  5.26%  │  0x00007fddc473896d: mov    r10,QWORD PTR [r15+0x108]
  0.02%  │  0x00007fddc4738974: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.40%  │  0x00007fddc4738977: ret    
         ↘  0x00007fddc4738978: mov    rbp,rsi
            0x00007fddc473897b: mov    DWORD PTR [rsp],edx
            0x00007fddc473897e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fddc4738983: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fddc4738988: mov    esi,0xffffff4d
            0x00007fddc473898d: xchg   ax,ax
            0x00007fddc473898f: call   0x00007fddbcc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 44.02%  <total for region 2>

....[Hottest Regions]...............................................................................
 50.91%     c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 530 (63 bytes) 
 44.02%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 501 (55 bytes) 
  2.90%          kernel  [unknown] (6 bytes) 
  0.17%          kernel  [unknown] (3 bytes) 
  0.13%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (47 bytes) 
  0.12%          kernel  [unknown] (30 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (30 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  1.36%  <...other 71 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 50.91%     c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 530 
 44.02%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 501 
  4.23%          kernel  [unknown] 
  0.13%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%    libc-2.28.so  __strchr_avx2 
  0.04%  hsdis-amd64.so  print_insn 
  0.04%    libc-2.28.so  __strlen_avx2 
  0.04%    libc-2.28.so  vfprintf 
  0.02%       libjvm.so  _ZN9PhaseLive7computeEj 
  0.02%       libjvm.so  _ZNK10CodeBuffer16relocate_code_toEPS_ 
  0.02%     interpreter  invokespecial  183 invokespecial  
  0.02%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%     interpreter  fast_aputfield  211 fast_aputfield  
  0.02%    libc-2.28.so  cfree@GLIBC_2.2.5 
  0.02%     interpreter  method entry point (kind = zerolocals)  
  0.02%       libjvm.so  _ZN15ciObjectFactory12get_metadataEP8Metadata 
  0.02%       libjvm.so  _ZN15fieldDescriptor12reinitializeEP13InstanceKlassi 
  0.02%       libjvm.so  _ZN9metaspace12SpaceManager8allocateEm 
  0.02%     interpreter  aload  25 aload  
  0.02%    libc-2.28.so  _IO_fwrite 
  0.31%  <...other 16 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.95%     c2, level 4
  4.23%          kernel
  0.42%       libjvm.so
  0.25%    libc-2.28.so
  0.10%     interpreter
  0.04%  hsdis-amd64.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 143291 total address lines.
Perf output processed (skipped 7.085 seconds):
 Column 1: cycles (5146 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 536 (63 bytes) 

             0x00007f44d03173b1: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f44d03174b2
             0x00007f44d03173b9: mov    ebp,0x1
             0x00007f44d03173be: test   r10d,r10d
         ╭   0x00007f44d03173c1: jne    0x00007f44d0317414  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
         │   0x00007f44d03173c3: nop    WORD PTR [rax+rax*1+0x0]
         │   0x00007f44d03173cc: data16 data16 xchg ax,ax  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@36 (line 235)
  4.53%  │↗  0x00007f44d03173d0: mov    r10,QWORD PTR [rsp+0x50]
  0.04%  ││  0x00007f44d03173d5: mov    r10d,DWORD PTR [r10+0x18]
         ││                                                ;*getfield lateinitString {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@1 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
  5.48%  ││  0x00007f44d03173d9: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@1 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f44d0317472
  0.35%  ││  0x00007f44d03173de: mov    edx,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@4 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f44d0317466
 13.14%  ││  0x00007f44d03173e3: movsx  ecx,BYTE PTR [r12+r10*8+0x14]
         ││                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::coder@7 (line 3258)
         ││                                                ; - java.lang.String::length@6 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││  0x00007f44d03173e9: sar    edx,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@9 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 46)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
 13.80%  ││  0x00007f44d03173eb: mov    rsi,QWORD PTR [rsp]
  0.02%  ││  0x00007f44d03173ef: call   0x00007f44c8843f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.17%  ││  0x00007f44d03173f4: mov    r10,QWORD PTR [rsp+0x40]
  5.27%  ││  0x00007f44d03173f9: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
  4.39%  ││  0x00007f44d0317401: mov    r11,QWORD PTR [r15+0x108]
  0.04%  ││  0x00007f44d0317408: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
  4.59%  ││  0x00007f44d031740c: test   DWORD PTR [r11],eax  ;   {poll}
  0.08%  ││  0x00007f44d031740f: test   r10d,r10d
         │╰  0x00007f44d0317412: je     0x00007f44d03173d0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@36 (line 235)
         ↘   0x00007f44d0317414: movabs r10,0x7f44e54a0a00
             0x00007f44d031741e: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@37 (line 235)
             0x00007f44d0317421: mov    r10,QWORD PTR [rsp+0x48]
             0x00007f44d0317426: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@52 (line 237)
             0x00007f44d031742a: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@40 (line 235)
....................................................................................................
 51.88%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 507 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f44d0313d20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f44d0313d24: movabs r12,0x800000000
            0x00007f44d0313d2e: add    r10,r12
            0x00007f44d0313d31: xor    r12,r12
            0x00007f44d0313d34: cmp    rax,r10
            0x00007f44d0313d37: jne    0x00007f44c8843c80  ;   {runtime_call ic_miss_stub}
            0x00007f44d0313d3d: data16 xchg ax,ax
          [Verified Entry Point]
  4.61%     0x00007f44d0313d40: mov    DWORD PTR [rsp-0x14000],eax
  5.29%     0x00007f44d0313d47: push   rbp
  4.86%     0x00007f44d0313d48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.11%     0x00007f44d0313d4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.08%     0x00007f44d0313d53: mov    r8d,edx
  5.05%     0x00007f44d0313d56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
            0x00007f44d0313d5d: mov    r9d,edx
  4.84%     0x00007f44d0313d60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
            0x00007f44d0313d63: cmp    r9d,r8d
         ╭  0x00007f44d0313d66: je     0x00007f44d0313d78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.39%  │  0x00007f44d0313d68: add    rsp,0x20
         │  0x00007f44d0313d6c: pop    rbp
  5.67%  │  0x00007f44d0313d6d: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007f44d0313d74: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.53%  │  0x00007f44d0313d77: ret    
         ↘  0x00007f44d0313d78: mov    rbp,rsi
            0x00007f44d0313d7b: mov    DWORD PTR [rsp],edx
            0x00007f44d0313d7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f44d0313d83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f44d0313d88: mov    esi,0xffffff4d
            0x00007f44d0313d8d: xchg   ax,ax
            0x00007f44d0313d8f: call   0x00007f44c8845900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 44.42%  <total for region 2>

....[Hottest Regions]...............................................................................
 51.88%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 536 (63 bytes) 
 44.42%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 507 (55 bytes) 
  1.61%              kernel  [unknown] (6 bytes) 
  0.29%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.27%              kernel  [unknown] (0 bytes) 
  0.12%              kernel  [unknown] (37 bytes) 
  0.10%              kernel  [unknown] (1 bytes) 
  0.06%           libjvm.so  SpinPause (0 bytes) 
  0.06%        libc-2.28.so  syscall (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.89%  <...other 46 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 51.88%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 536 
 44.42%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 507 
  2.78%              kernel  [unknown] 
  0.29%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%           libjvm.so  SpinPause 
  0.06%        libc-2.28.so  syscall 
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%        libc-2.28.so  __memmove_avx_unaligned_erms 
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%      hsdis-amd64.so  print_insn 
  0.02%        libc-2.28.so  _IO_old_init 
  0.02%           libjvm.so  _ZN10decode_env13print_addressEPh 
  0.02%           libjvm.so  _ZN8VMThread4loopEv 
  0.02%        libc-2.28.so  __memset_avx2_unaligned_erms 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%  libpthread-2.28.so  __pthread_enable_asynccancel 
  0.02%           libjvm.so  _ZN7nmethod21print_code_comment_onEP12outputStreamiPhS2_ 
  0.16%  <...other 8 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.31%         c2, level 4
  2.78%              kernel
  0.54%           libjvm.so
  0.25%        libc-2.28.so
  0.04%         interpreter
  0.02%      hsdis-amd64.so
  0.02%  libpthread-2.28.so
  0.02%         c1, level 3
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyKtBenchmark.maybeNull
# Parameters: (value = 42)

# Run progress: 57.14% complete, ETA 00:01:53
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.596 ns/op
# Warmup Iteration   2: 3.309 ns/op
# Warmup Iteration   3: 4.017 ns/op
# Warmup Iteration   4: 3.341 ns/op
# Warmup Iteration   5: 2.830 ns/op
Iteration   1: 3.264 ns/op
Iteration   2: 3.303 ns/op
Iteration   3: 3.161 ns/op
Iteration   4: 3.380 ns/op
Iteration   5: 3.314 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 61.90% complete, ETA 00:01:41
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.180 ns/op
# Warmup Iteration   2: 3.263 ns/op
# Warmup Iteration   3: 2.776 ns/op
# Warmup Iteration   4: 2.773 ns/op
# Warmup Iteration   5: 2.771 ns/op
Iteration   1: 2.793 ns/op
Iteration   2: 2.765 ns/op
Iteration   3: 2.762 ns/op
Iteration   4: 2.780 ns/op
Iteration   5: 2.827 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 66.67% complete, ETA 00:01:28
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5.291 ns/op
# Warmup Iteration   2: 4.833 ns/op
# Warmup Iteration   3: 4.351 ns/op
# Warmup Iteration   4: 4.797 ns/op
# Warmup Iteration   5: 4.704 ns/op
Iteration   1: 4.277 ns/op
Iteration   2: 4.151 ns/op
Iteration   3: 4.133 ns/op
Iteration   4: 4.725 ns/op
Iteration   5: 4.818 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyKtBenchmark.maybeNull":
  3.497 ±(99.9%) 0.781 ns/op [Average]
  (min, avg, max) = (2.762, 3.497, 4.818), stdev = 0.731
  CI (99.9%): [2.716, 4.278] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyKtBenchmark.maybeNull:·asm":
PrintAssembly processed: 140387 total address lines.
Perf output processed (skipped 7.370 seconds):
 Column 1: cycles (5178 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 496 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f6bd0739140: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f6bd0739144: movabs r12,0x800000000
            0x00007f6bd073914e: add    r10,r12
            0x00007f6bd0739151: xor    r12,r12
            0x00007f6bd0739154: cmp    rax,r10
            0x00007f6bd0739157: jne    0x00007f6bc8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f6bd073915d: data16 xchg ax,ax
          [Verified Entry Point]
  3.32%     0x00007f6bd0739160: mov    DWORD PTR [rsp-0x14000],eax
  6.78%     0x00007f6bd0739167: push   rbp
  2.61%     0x00007f6bd0739168: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  7.07%     0x00007f6bd073916c: mov    QWORD PTR [rsp],rdx
  0.29%     0x00007f6bd0739170: mov    QWORD PTR [rsp+0x8],rsi
  3.34%     0x00007f6bd0739175: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  0.25%     0x00007f6bd073917b: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  7.09%     0x00007f6bd0739186: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  2.43%     0x00007f6bd073918d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
 11.63%     0x00007f6bd0739194: and    r11d,ebp
  0.15%     0x00007f6bd0739197: test   r11d,r11d
         ╭  0x00007f6bd073919a: je     0x00007f6bd07391ac  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  2.86%  │  0x00007f6bd073919c: add    rsp,0x30
  0.14%  │  0x00007f6bd07391a0: pop    rbp
  7.24%  │  0x00007f6bd07391a1: mov    r10,QWORD PTR [r15+0x108]
  0.17%  │  0x00007f6bd07391a8: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.01%  │  0x00007f6bd07391ab: ret    
         ↘  0x00007f6bd07391ac: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f6bd07391b3: mov    r10,rbx
            0x00007f6bd07391b6: add    r10,0x20
            0x00007f6bd07391ba: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f6bd07391c1: jae    0x00007f6bd073941e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f6bd07391c7: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 58.38%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 533 (59 bytes) 

            0x00007f6bd073d024: mov    r8,QWORD PTR [rsp+0x40]
            0x00007f6bd073d029: movzx  r11d,BYTE PTR [r8+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@30 (line 234)
                                                          ; implicit exception: dispatches to 0x00007f6bd073d11a
            0x00007f6bd073d031: test   r11d,r11d
            0x00007f6bd073d034: jne    0x00007f6bd073d0e6  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
            0x00007f6bd073d03a: mov    ebp,0x1
            0x00007f6bd073d03f: nop                       ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@36 (line 235)
  2.80%  ↗  0x00007f6bd073d040: mov    r10,QWORD PTR [rsp+0x50]
  0.35%  │  0x00007f6bd073d045: mov    r10d,DWORD PTR [r10+0x14]
         │                                                ;*getfield maybeNullString {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@1 (line 58)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  6.32%  │  0x00007f6bd073d049: test   r10d,r10d
         │  0x00007f6bd073d04c: jne    0x00007f6bd073d0b2  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@5 (line 58)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  0.29%  │  0x00007f6bd073d04e: mov    QWORD PTR [rsp+0x40],r8
  2.36%  │  0x00007f6bd073d053: mov    rsi,QWORD PTR [rsp]
  0.31%  │  0x00007f6bd073d057: xor    edx,edx
  6.43%  │  0x00007f6bd073d059: xchg   ax,ax
  0.37%  │  0x00007f6bd073d05b: call   0x00007f6bc8c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@20 (line 232)
         │                                                ;   {optimized virtual_call}
  1.18%  │  0x00007f6bd073d060: mov    r8,QWORD PTR [rsp+0x40]
  7.07%  │  0x00007f6bd073d065: movzx  r10d,BYTE PTR [r8+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
  2.86%  │  0x00007f6bd073d06d: mov    r11,QWORD PTR [r15+0x108]
  0.33%  │  0x00007f6bd073d074: add    rbp,0x1            ; ImmutableOopMap{r8=Oop [72]=Oop [80]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
  5.81%  │  0x00007f6bd073d078: test   DWORD PTR [r11],eax  ;   {poll}
  0.25%  │  0x00007f6bd073d07b: test   r10d,r10d
         ╰  0x00007f6bd073d07e: je     0x00007f6bd073d040  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@36 (line 235)
            0x00007f6bd073d080: movabs r10,0x7f6be5954a00
            0x00007f6bd073d08a: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@37 (line 235)
            0x00007f6bd073d08d: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f6bd073d092: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@52 (line 237)
            0x00007f6bd073d096: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@40 (line 235)
....................................................................................................
 36.71%  <total for region 2>

....[Hottest Regions]...............................................................................
 58.38%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 496 (75 bytes) 
 36.71%     c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 533 (59 bytes) 
  2.26%          kernel  [unknown] (6 bytes) 
  0.25%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.15%          kernel  [unknown] (0 bytes) 
  0.06%          kernel  [unknown] (7 bytes) 
  0.06%          kernel  [unknown] (1 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (1 bytes) 
  0.04%          kernel  [unknown] (11 bytes) 
  0.04%          kernel  [unknown] (18 bytes) 
  0.04%          kernel  [unknown] (24 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%    libc-2.28.so  syscall (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  1.66%  <...other 86 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 58.38%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 496 
 36.71%     c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 533 
  3.94%          kernel  [unknown] 
  0.25%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%     interpreter  method entry point (kind = zerolocals)  
  0.04%    libc-2.28.so  __strlen_avx2 
  0.04%    libc-2.28.so  syscall 
  0.02%    libc-2.28.so  _IO_file_sync@@GLIBC_2.2.5 
  0.02%       libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%    libc-2.28.so  _IO_fflush 
  0.02%    libc-2.28.so  __strchr_avx2 
  0.02%  hsdis-amd64.so  print_insn 
  0.02%    libc-2.28.so  _IO_old_init 
  0.02%       libjvm.so  _ZN22G1ConcurrentMarkThread11run_serviceEv 
  0.02%       libjvm.so  _ZN8VMThread4loopEv 
  0.02%       libjvm.so  _ZN9xmlStream7va_doneEPKcP13__va_list_tag 
  0.02%       libjvm.so  _ZL6invokeP13InstanceKlassRK12methodHandle6Handleb14objArrayHandle9BasicTypeS5_bP6Thread.constprop.80 
  0.02%       libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%     interpreter  invokeinterface  185 invokeinterface  
  0.02%       libjvm.so  _ZN13LIR_Assembler7move_opEP11LIR_OprDescS1_9BasicType13LIR_PatchCodeP12CodeEmitInfobbb 
  0.33%  <...other 17 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.09%     c2, level 4
  3.94%          kernel
  0.62%       libjvm.so
  0.21%    libc-2.28.so
  0.10%     interpreter
  0.02%  hsdis-amd64.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 135940 total address lines.
Perf output processed (skipped 7.092 seconds):
 Column 1: cycles (5087 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 487 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f2947ed7a40: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f2947ed7a44: movabs r12,0x800000000
            0x00007f2947ed7a4e: add    r10,r12
            0x00007f2947ed7a51: xor    r12,r12
            0x00007f2947ed7a54: cmp    rax,r10
            0x00007f2947ed7a57: jne    0x00007f2940408c80  ;   {runtime_call ic_miss_stub}
            0x00007f2947ed7a5d: data16 xchg ax,ax
          [Verified Entry Point]
  2.85%     0x00007f2947ed7a60: mov    DWORD PTR [rsp-0x14000],eax
  6.74%     0x00007f2947ed7a67: push   rbp
  3.30%     0x00007f2947ed7a68: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  7.25%     0x00007f2947ed7a6c: mov    QWORD PTR [rsp],rdx
  0.16%     0x00007f2947ed7a70: mov    QWORD PTR [rsp+0x8],rsi
  3.15%     0x00007f2947ed7a75: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  0.20%     0x00007f2947ed7a7b: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  8.26%     0x00007f2947ed7a86: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  2.44%     0x00007f2947ed7a8d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
 12.90%     0x00007f2947ed7a94: and    r11d,ebp
  0.08%     0x00007f2947ed7a97: test   r11d,r11d
         ╭  0x00007f2947ed7a9a: je     0x00007f2947ed7aac  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  2.71%  │  0x00007f2947ed7a9c: add    rsp,0x30
  0.08%  │  0x00007f2947ed7aa0: pop    rbp
  7.23%  │  0x00007f2947ed7aa1: mov    r10,QWORD PTR [r15+0x108]
  0.08%  │  0x00007f2947ed7aa8: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.71%  │  0x00007f2947ed7aab: ret    
         ↘  0x00007f2947ed7aac: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f2947ed7ab3: mov    r10,rbx
            0x00007f2947ed7ab6: add    r10,0x20
            0x00007f2947ed7aba: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f2947ed7ac1: jae    0x00007f2947ed7d1e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f2947ed7ac7: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 60.13%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 519 (59 bytes) 

            0x00007f2947edb6a4: mov    r8,QWORD PTR [rsp+0x40]
            0x00007f2947edb6a9: movzx  r11d,BYTE PTR [r8+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@30 (line 234)
                                                          ; implicit exception: dispatches to 0x00007f2947edb79a
            0x00007f2947edb6b1: test   r11d,r11d
            0x00007f2947edb6b4: jne    0x00007f2947edb766  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
            0x00007f2947edb6ba: mov    ebp,0x1
            0x00007f2947edb6bf: nop                       ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@36 (line 235)
  3.05%  ↗  0x00007f2947edb6c0: mov    r10,QWORD PTR [rsp+0x50]
  0.22%  │  0x00007f2947edb6c5: mov    r10d,DWORD PTR [r10+0x14]
         │                                                ;*getfield maybeNullString {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@1 (line 58)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  7.19%  │  0x00007f2947edb6c9: test   r10d,r10d
         │  0x00007f2947edb6cc: jne    0x00007f2947edb732  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@5 (line 58)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  0.20%  │  0x00007f2947edb6ce: mov    QWORD PTR [rsp+0x40],r8
  2.95%  │  0x00007f2947edb6d3: mov    rsi,QWORD PTR [rsp]
  0.18%  │  0x00007f2947edb6d7: xor    edx,edx
  6.07%  │  0x00007f2947edb6d9: xchg   ax,ax
  0.31%  │  0x00007f2947edb6db: call   0x00007f2940408f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@20 (line 232)
         │                                                ;   {optimized virtual_call}
  0.29%  │  0x00007f2947edb6e0: mov    r8,QWORD PTR [rsp+0x40]
  7.06%  │  0x00007f2947edb6e5: movzx  r10d,BYTE PTR [r8+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
  3.26%  │  0x00007f2947edb6ed: mov    r11,QWORD PTR [r15+0x108]
  0.24%  │  0x00007f2947edb6f4: add    rbp,0x1            ; ImmutableOopMap{r8=Oop [72]=Oop [80]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
  6.33%  │  0x00007f2947edb6f8: test   DWORD PTR [r11],eax  ;   {poll}
  0.10%  │  0x00007f2947edb6fb: test   r10d,r10d
         ╰  0x00007f2947edb6fe: je     0x00007f2947edb6c0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@36 (line 235)
            0x00007f2947edb700: movabs r10,0x7f295d09aa00
            0x00007f2947edb70a: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@37 (line 235)
            0x00007f2947edb70d: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f2947edb712: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@52 (line 237)
            0x00007f2947edb716: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@40 (line 235)
....................................................................................................
 37.45%  <total for region 2>

....[Hottest Regions]...............................................................................
 60.13%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 487 (75 bytes) 
 37.45%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 519 (59 bytes) 
  0.75%              kernel  [unknown] (6 bytes) 
  0.18%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (44 bytes) 
  0.08%              kernel  [unknown] (30 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (3 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (18 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%                      <unknown> (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.92%  <...other 47 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 60.13%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 487 
 37.45%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 519 
  1.55%              kernel  [unknown] 
  0.18%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%                      <unknown> 
  0.04%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%         interpreter  fast_iload  224 fast_iload  
  0.02%      hsdis-amd64.so  OP_REG 
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%      hsdis-amd64.so  putop 
  0.02%           libjvm.so  _ZN12OopMapStream9find_nextEv 
  0.02%           libjvm.so  _ZN12outputStream5printEPKcz 
  0.02%  libpthread-2.28.so  __pthread_disable_asynccancel 
  0.02%         interpreter  method entry point (kind = zerolocals)  
  0.02%           libjvm.so  _ZN13GrowableArrayIP8IntervalE4growEi 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%        libc-2.28.so  _IO_fwrite 
  0.28%  <...other 14 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 97.58%         c2, level 4
  1.55%              kernel
  0.53%           libjvm.so
  0.14%        libc-2.28.so
  0.08%      hsdis-amd64.so
  0.04%                    
  0.04%         interpreter
  0.02%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 140696 total address lines.
Perf output processed (skipped 7.086 seconds):
 Column 1: cycles (5162 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 515 (144 bytes) 

             0x00007f856873adac: mov    r8,QWORD PTR [rsp+0x40]
             0x00007f856873adb1: movzx  r11d,BYTE PTR [r8+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f856873b0b2
             0x00007f856873adb9: test   r11d,r11d
             0x00007f856873adbc: jne    0x00007f856873aeee  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
             0x00007f856873adc2: mov    ebx,0x1
         ╭   0x00007f856873adc7: jmp    0x00007f856873ae28
         │   0x00007f856873adc9: nop    DWORD PTR [rax+0x0]
  3.47%  │↗  0x00007f856873add0: movsxd r10,ebp
  0.48%  ││  0x00007f856873add3: movabs r11,0x71bd1eb08    ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x000000071bd1eb08})}
  4.11%  ││  0x00007f856873addd: mov    r11d,DWORD PTR [r11+r10*4+0x210]
  2.31%  ││  0x00007f856873ade5: lea    rdx,[r12+r11*8]    ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@11 (line 58)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  4.49%  ││  0x00007f856873ade9: mov    QWORD PTR [rsp],rbx
  0.17%  ││  0x00007f856873aded: mov    QWORD PTR [rsp+0x40],r8
  2.42%  ││  0x00007f856873adf2: mov    rbp,r9
  0.10%  ││  0x00007f856873adf5: mov    rsi,QWORD PTR [rsp+0x10]
  4.53%  ││  0x00007f856873adfa: nop
  0.12%  ││  0x00007f856873adfb: call   0x00007f8560c68f00  ; ImmutableOopMap{rbp=Oop [64]=Oop [72]=Oop [16]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.58%  ││  0x00007f856873ae00: mov    r8,QWORD PTR [rsp+0x40]
  2.77%  ││  0x00007f856873ae05: movzx  r11d,BYTE PTR [r8+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
  3.68%  ││  0x00007f856873ae0d: mov    r10,QWORD PTR [r15+0x108]
  0.27%  ││  0x00007f856873ae14: mov    rbx,QWORD PTR [rsp]
  2.31%  ││  0x00007f856873ae18: add    rbx,0x1            ; ImmutableOopMap{r8=Oop rbp=Oop [72]=Oop [16]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
  0.10%  ││  0x00007f856873ae1c: test   DWORD PTR [r10],eax  ;   {poll}
  4.07%  ││  0x00007f856873ae1f: test   r11d,r11d
         ││  0x00007f856873ae22: jne    0x00007f856873aef3  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@36 (line 235)
  0.31%  ↘│  0x00007f856873ae28: mov    r9,rbp
  2.32%   │  0x00007f856873ae2b: mov    r11d,DWORD PTR [rbp+0x14]
          │                                                ;*getfield maybeNullString {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@1 (line 58)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  0.14%   │  0x00007f856873ae2f: mov    r10d,DWORD PTR [r12+r11*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::length@1 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@8 (line 58)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f856873b066
  4.67%   │  0x00007f856873ae34: mov    ebp,DWORD PTR [r12+r10*8+0xc]
          │                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::length@4 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@8 (line 58)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f856873b05a
  0.79%   │  0x00007f856873ae39: movsx  ecx,BYTE PTR [r12+r11*8+0x14]
          │                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::coder@7 (line 3258)
          │                                                ; - java.lang.String::length@6 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@8 (line 58)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  2.93%   │  0x00007f856873ae3f: sar    ebp,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::length@9 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@8 (line 58)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  5.17%   │  0x00007f856873ae41: cmp    ebp,0xffffff80
          │  0x00007f856873ae44: jl     0x00007f856873af25  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@3 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@11 (line 58)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  2.85%   │  0x00007f856873ae4a: cmp    ebp,0x7f
          │  0x00007f856873ae4d: jg     0x00007f856873ae9a  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@10 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@11 (line 58)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  0.46%   │  0x00007f856873ae4f: mov    r10d,ebp
  4.38%   │  0x00007f856873ae52: add    r10d,0x80          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@20 (line 1049)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@11 (line 58)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  0.17%   │  0x00007f856873ae59: cmp    r10d,0x100
  0.02%   ╰  0x00007f856873ae60: jb     0x00007f856873add0
             0x00007f856873ae66: mov    esi,0xffffffe4
             0x00007f856873ae6b: mov    rbp,r8
             0x00007f856873ae6e: rex.W push QWORD PTR [rsp+0x48]
             0x00007f856873ae73: rex.W pop QWORD PTR [rsp+0x40]
             0x00007f856873ae78: rex.W push QWORD PTR [rsp+0x10]
             0x00007f856873ae7d: rex.W pop QWORD PTR [rsp+0x48]
             0x00007f856873ae82: mov    QWORD PTR [rsp+0x50],r9
             0x00007f856873ae87: mov    QWORD PTR [rsp],rbx
             0x00007f856873ae8b: mov    DWORD PTR [rsp+0x10],r10d
             0x00007f856873ae90: data16 xchg ax,ax
....................................................................................................
 60.19%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 489 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f8568737e40: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f8568737e44: movabs r12,0x800000000
            0x00007f8568737e4e: add    r10,r12
            0x00007f8568737e51: xor    r12,r12
            0x00007f8568737e54: cmp    rax,r10
            0x00007f8568737e57: jne    0x00007f8560c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f8568737e5d: data16 xchg ax,ax
          [Verified Entry Point]
  2.52%     0x00007f8568737e60: mov    DWORD PTR [rsp-0x14000],eax
  4.18%     0x00007f8568737e67: push   rbp
  2.62%     0x00007f8568737e68: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  4.86%     0x00007f8568737e6c: mov    QWORD PTR [rsp],rdx
  0.14%     0x00007f8568737e70: mov    QWORD PTR [rsp+0x8],rsi
  2.69%     0x00007f8568737e75: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  0.17%     0x00007f8568737e7b: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  3.58%     0x00007f8568737e86: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  0.10%     0x00007f8568737e8d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
  2.63%     0x00007f8568737e94: and    r11d,ebp
  0.15%     0x00007f8568737e97: test   r11d,r11d
         ╭  0x00007f8568737e9a: je     0x00007f8568737eac  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  4.15%  │  0x00007f8568737e9c: add    rsp,0x30
  0.10%  │  0x00007f8568737ea0: pop    rbp
  2.56%  │  0x00007f8568737ea1: mov    r10,QWORD PTR [r15+0x108]
  0.17%  │  0x00007f8568737ea8: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.84%  │  0x00007f8568737eab: ret    
         ↘  0x00007f8568737eac: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f8568737eb3: mov    r10,rbx
            0x00007f8568737eb6: add    r10,0x20
            0x00007f8568737eba: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f8568737ec1: jae    0x00007f856873811e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f8568737ec7: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 35.47%  <total for region 2>

....[Hottest Regions]...............................................................................
 60.19%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 515 (144 bytes) 
 35.47%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 489 (75 bytes) 
  0.99%              kernel  [unknown] (6 bytes) 
  0.23%              kernel  [unknown] (0 bytes) 
  0.14%              kernel  [unknown] (15 bytes) 
  0.12%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (44 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.08%           libjvm.so  _ZN12outputStream15update_positionEPKcm (12 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (7 bytes) 
  0.06%              kernel  [unknown] (8 bytes) 
  0.06%              kernel  [unknown] (30 bytes) 
  0.04%              kernel  [unknown] (19 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (20 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (1 bytes) 
  0.04%              kernel  [unknown] (9 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  2.15%  <...other 104 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 60.19%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 515 
 35.47%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 489 
  3.33%              kernel  [unknown] 
  0.12%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.10%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.08%        libc-2.28.so  _IO_fwrite 
  0.08%        libc-2.28.so  vfprintf 
  0.08%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%      hsdis-amd64.so  print_insn 
  0.02%           libjvm.so  _ZN13LIR_Assembler7comp_opE13LIR_ConditionP11LIR_OprDescS2_P7LIR_Op2 
  0.02%           libjvm.so  _ZN16LIR_OpVisitState5visitEP6LIR_Op 
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%      hsdis-amd64.so  oappend 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%           libjvm.so  _ZN10ValueStack25pin_stack_for_linear_scanEv 
  0.02%      hsdis-amd64.so  putop 
  0.02%           libjvm.so  _ZN10LinearScan23compute_local_live_setsEv 
  0.02%           libjvm.so  _ZNK8Constant4hashEv 
  0.27%  <...other 14 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.66%         c2, level 4
  3.33%              kernel
  0.56%           libjvm.so
  0.29%        libc-2.28.so
  0.08%      hsdis-amd64.so
  0.04%         interpreter
  0.02%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyKtBenchmark.maybeNullThrowException
# Parameters: (value = 42)

# Run progress: 71.43% complete, ETA 00:01:15
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.489 ns/op
# Warmup Iteration   2: 3.886 ns/op
# Warmup Iteration   3: 4.512 ns/op
# Warmup Iteration   4: 3.843 ns/op
# Warmup Iteration   5: 3.803 ns/op
Iteration   1: 3.869 ns/op
Iteration   2: 3.793 ns/op
Iteration   3: 3.791 ns/op
Iteration   4: 3.801 ns/op
Iteration   5: 3.809 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 76.19% complete, ETA 00:01:03
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: <failure>

kotlin.KotlinNullPointerException
	at org.ib.benchmark.NullSafetyKtBenchmark.maybeNullThrowException(NullSafetyKtBenchmark.kt:64)
	at org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest.maybeNullThrowException_avgt_jmhStub(NullSafetyKtBenchmark_maybeNullThrowException_jmhTest.java:232)
	at org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest.maybeNullThrowException_AverageTime(NullSafetyKtBenchmark_maybeNullThrowException_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)



# Run progress: 80.95% complete, ETA 00:00:48
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5.278 ns/op
# Warmup Iteration   2: 5.019 ns/op
# Warmup Iteration   3: 4.302 ns/op
# Warmup Iteration   4: 4.516 ns/op
# Warmup Iteration   5: 4.337 ns/op
Iteration   1: 4.302 ns/op
Iteration   2: 4.350 ns/op
Iteration   3: 4.336 ns/op
Iteration   4: 4.420 ns/op
Iteration   5: 3.890 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyKtBenchmark.maybeNullThrowException":
  4.036 ±(99.9%) 0.416 ns/op [Average]
  (min, avg, max) = (3.791, 4.036, 4.420), stdev = 0.275
  CI (99.9%): [3.620, 4.452] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyKtBenchmark.maybeNullThrowException:·asm":
PrintAssembly processed: 139637 total address lines.
Perf output processed (skipped 7.023 seconds):
 Column 1: cycles (5144 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub, version 532 (147 bytes) 

            0x00007f8d9073d6ac: mov    r8,QWORD PTR [rsp+0x40]
            0x00007f8d9073d6b1: movzx  r11d,BYTE PTR [r8+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@30 (line 234)
                                                          ; implicit exception: dispatches to 0x00007f8d9073d9be
            0x00007f8d9073d6b9: test   r11d,r11d
            0x00007f8d9073d6bc: jne    0x00007f8d9073d8c2  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@33 (line 234)
            0x00007f8d9073d6c2: mov    ebx,0x1
            0x00007f8d9073d6c7: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@36 (line 235)
  0.04%  ↗  0x00007f8d9073d6d0: mov    r9,rbp
  3.40%  │  0x00007f8d9073d6d3: mov    r11d,DWORD PTR [rbp+0x14]
         │                                                ;*getfield maybeNullString {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@1 (line 64)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  0.02%  │  0x00007f8d9073d6d7: mov    r10d,DWORD PTR [r12+r11*8+0xc]
         │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.String::length@1 (line 658)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 64)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
         │                                                ; implicit exception: dispatches to 0x00007f8d9073d972
  4.51%  │  0x00007f8d9073d6dc: mov    ebp,DWORD PTR [r12+r10*8+0xc]
         │                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.String::length@4 (line 658)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 64)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
         │                                                ; implicit exception: dispatches to 0x00007f8d9073d966
  0.08%  │  0x00007f8d9073d6e1: movsx  ecx,BYTE PTR [r12+r11*8+0x14]
         │                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.String::coder@7 (line 3258)
         │                                                ; - java.lang.String::length@6 (line 658)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 64)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  3.01%  │  0x00007f8d9073d6e7: sar    ebp,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.String::length@9 (line 658)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 64)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  4.34%  │  0x00007f8d9073d6e9: cmp    ebp,0xffffff80
         │  0x00007f8d9073d6ec: jl     0x00007f8d9073d826  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.Integer::valueOf@3 (line 1048)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 64)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  2.88%  │  0x00007f8d9073d6f2: cmp    ebp,0x7f
         │  0x00007f8d9073d6f5: jg     0x00007f8d9073d79e  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.Integer::valueOf@10 (line 1048)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 64)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  0.06%  │  0x00007f8d9073d6fb: mov    r10d,ebp
  4.41%  │  0x00007f8d9073d6fe: add    r10d,0x80          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.Integer::valueOf@20 (line 1049)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 64)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
         │  0x00007f8d9073d705: cmp    r10d,0x100
         │  0x00007f8d9073d70c: jae    0x00007f8d9073d7f2
  4.08%  │  0x00007f8d9073d712: movsxd r10,ebp
  0.10%  │  0x00007f8d9073d715: movabs r11,0x71bd1eb08    ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x000000071bd1eb08})}
  4.26%  │  0x00007f8d9073d71f: mov    r11d,DWORD PTR [r11+r10*4+0x210]
  1.83%  │  0x00007f8d9073d727: lea    rdx,[r12+r11*8]    ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 64)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  4.59%  │  0x00007f8d9073d72b: mov    QWORD PTR [rsp],rbx
  0.02%  │  0x00007f8d9073d72f: mov    QWORD PTR [rsp+0x40],r8
  2.49%  │  0x00007f8d9073d734: mov    rbp,r9
         │  0x00007f8d9073d737: mov    rsi,QWORD PTR [rsp+0x10]
  4.55%  │  0x00007f8d9073d73c: data16 xchg ax,ax
         │  0x00007f8d9073d73f: call   0x00007f8d88c68f00  ; ImmutableOopMap{rbp=Oop [64]=Oop [72]=Oop [16]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@20 (line 232)
         │                                                ;   {optimized virtual_call}
  0.12%  │  0x00007f8d9073d744: mov    r8,QWORD PTR [rsp+0x40]
  3.09%  │  0x00007f8d9073d749: movzx  r11d,BYTE PTR [r8+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@33 (line 234)
  4.49%  │  0x00007f8d9073d751: mov    r10,QWORD PTR [r15+0x108]
  0.02%  │  0x00007f8d9073d758: mov    rbx,QWORD PTR [rsp]
  2.88%  │  0x00007f8d9073d75c: add    rbx,0x1            ; ImmutableOopMap{r8=Oop rbp=Oop [72]=Oop [16]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@33 (line 234)
         │  0x00007f8d9073d760: test   DWORD PTR [r10],eax  ;   {poll}
  4.59%  │  0x00007f8d9073d763: test   r11d,r11d
         ╰  0x00007f8d9073d766: je     0x00007f8d9073d6d0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@36 (line 235)
            0x00007f8d9073d76c: movabs r10,0x7f8da64dfa00
            0x00007f8d9073d776: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@37 (line 235)
            0x00007f8d9073d779: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f8d9073d77e: mov    QWORD PTR [r10+0x18],rbx  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@52 (line 237)
            0x00007f8d9073d782: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@40 (line 235)
....................................................................................................
 59.84%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 492 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f8d90737b40: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f8d90737b44: movabs r12,0x800000000
            0x00007f8d90737b4e: add    r10,r12
            0x00007f8d90737b51: xor    r12,r12
            0x00007f8d90737b54: cmp    rax,r10
            0x00007f8d90737b57: jne    0x00007f8d88c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f8d90737b5d: data16 xchg ax,ax
          [Verified Entry Point]
  2.88%     0x00007f8d90737b60: mov    DWORD PTR [rsp-0x14000],eax
  3.69%     0x00007f8d90737b67: push   rbp
  2.84%     0x00007f8d90737b68: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  4.69%     0x00007f8d90737b6c: mov    QWORD PTR [rsp],rdx
  0.02%     0x00007f8d90737b70: mov    QWORD PTR [rsp+0x8],rsi
  2.92%     0x00007f8d90737b75: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
            0x00007f8d90737b7b: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  4.55%     0x00007f8d90737b86: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
            0x00007f8d90737b8d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
  3.01%     0x00007f8d90737b94: and    r11d,ebp
  0.02%     0x00007f8d90737b97: test   r11d,r11d
         ╭  0x00007f8d90737b9a: je     0x00007f8d90737bac  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  4.49%  │  0x00007f8d90737b9c: add    rsp,0x30
         │  0x00007f8d90737ba0: pop    rbp
  2.97%  │  0x00007f8d90737ba1: mov    r10,QWORD PTR [r15+0x108]
  0.02%  │  0x00007f8d90737ba8: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.49%  │  0x00007f8d90737bab: ret    
         ↘  0x00007f8d90737bac: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f8d90737bb3: mov    r10,rbx
            0x00007f8d90737bb6: add    r10,0x20
            0x00007f8d90737bba: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f8d90737bc1: jae    0x00007f8d90737e1e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f8d90737bc7: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 36.59%  <total for region 2>

....[Hottest Regions]...............................................................................
 59.84%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub, version 532 (147 bytes) 
 36.59%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 492 (75 bytes) 
  1.48%              kernel  [unknown] (6 bytes) 
  0.23%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (43 bytes) 
  0.16%              kernel  [unknown] (2 bytes) 
  0.14%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (28 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (12 bytes) 
  0.04%              kernel  [unknown] (30 bytes) 
  0.04%              kernel  [unknown] (5 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%  libpthread-2.28.so  __libc_write (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.95%  <...other 49 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 59.84%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub, version 532 
 36.59%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 492 
  2.76%              kernel  [unknown] 
  0.23%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%  libpthread-2.28.so  __libc_write 
  0.02%         interpreter  fast_iload  224 fast_iload  
  0.02%  libpthread-2.28.so  __new_sem_wait_slow.constprop.0 
  0.02%           libjvm.so  _ZN16LIR_OpVisitState5visitEP6LIR_Op 
  0.02%        libc-2.28.so  _IO_fflush 
  0.02%      perf-17199.map  [unknown] 
  0.02%      hsdis-amd64.so  putop 
  0.02%           libjvm.so  _ZN17InlineCacheBuffer20update_inline_cachesEv 
  0.02%        libc-2.28.so  __strchrnul_avx2 
  0.02%      hsdis-amd64.so  print_insn 
  0.02%  libpthread-2.28.so  __pthread_disable_asynccancel 
  0.02%           libjvm.so  _ZN12LIRGenerator22invoke_visit_argumentsEP6Invoke 
  0.02%        libc-2.28.so  _IO_fwrite 
  0.02%          ld-2.28.so  _dl_find_dso_for_object 
  0.02%           libjvm.so  _ZN7nmethod21print_code_comment_onEP12outputStreamiPhS2_ 
  0.21%  <...other 11 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.42%         c2, level 4
  2.76%              kernel
  0.43%           libjvm.so
  0.16%        libc-2.28.so
  0.08%  libpthread-2.28.so
  0.06%         interpreter
  0.04%      hsdis-amd64.so
  0.02%      perf-17199.map
  0.02%          ld-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 135648 total address lines.
Perf output processed (skipped 7.160 seconds):
 Column 1: cycles (5144 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub, version 524 (137 bytes) 

             0x00007fdecc73bb2c: mov    r8,QWORD PTR [rsp+0x40]
             0x00007fdecc73bb31: movzx  r11d,BYTE PTR [r8+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fdecc73be32
             0x00007fdecc73bb39: test   r11d,r11d
             0x00007fdecc73bb3c: jne    0x00007fdecc73bc6e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@33 (line 234)
             0x00007fdecc73bb42: mov    ebx,0x1
         ╭   0x00007fdecc73bb47: jmp    0x00007fdecc73bba8
         │   0x00007fdecc73bb49: nop    DWORD PTR [rax+0x0]
  3.30%  │↗  0x00007fdecc73bb50: movsxd r10,ebp
  0.17%  ││  0x00007fdecc73bb53: movabs r11,0x71bd1eb08    ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x000000071bd1eb08})}
  4.86%  ││  0x00007fdecc73bb5d: mov    r11d,DWORD PTR [r11+r10*4+0x210]
  1.94%  ││  0x00007fdecc73bb65: lea    rdx,[r12+r11*8]    ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 64)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  4.41%  ││  0x00007fdecc73bb69: mov    QWORD PTR [rsp],rbx
  0.12%  ││  0x00007fdecc73bb6d: mov    QWORD PTR [rsp+0x40],r8
  2.66%  ││  0x00007fdecc73bb72: mov    rbp,r9
  0.08%  ││  0x00007fdecc73bb75: mov    rsi,QWORD PTR [rsp+0x10]
  4.53%  ││  0x00007fdecc73bb7a: nop
  0.04%  ││  0x00007fdecc73bb7b: call   0x00007fdec4c68f00  ; ImmutableOopMap{rbp=Oop [64]=Oop [72]=Oop [16]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.29%  ││  0x00007fdecc73bb80: mov    r8,QWORD PTR [rsp+0x40]
  2.53%  ││  0x00007fdecc73bb85: movzx  r11d,BYTE PTR [r8+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@33 (line 234)
  4.32%  ││  0x00007fdecc73bb8d: mov    r10,QWORD PTR [r15+0x108]
  0.14%  ││  0x00007fdecc73bb94: mov    rbx,QWORD PTR [rsp]
  2.82%  ││  0x00007fdecc73bb98: add    rbx,0x1            ; ImmutableOopMap{r8=Oop rbp=Oop [72]=Oop [16]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@33 (line 234)
  0.08%  ││  0x00007fdecc73bb9c: test   DWORD PTR [r10],eax  ;   {poll}
  4.30%  ││  0x00007fdecc73bb9f: test   r11d,r11d
         ││  0x00007fdecc73bba2: jne    0x00007fdecc73bc73  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@36 (line 235)
  0.14%  ↘│  0x00007fdecc73bba8: mov    r9,rbp
  2.55%   │  0x00007fdecc73bbab: mov    r11d,DWORD PTR [rbp+0x14]
          │                                                ;*getfield maybeNullString {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@1 (line 64)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  0.06%   │  0x00007fdecc73bbaf: mov    r10d,DWORD PTR [r12+r11*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::length@1 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 64)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007fdecc73bde6
  4.32%   │  0x00007fdecc73bbb4: mov    ebp,DWORD PTR [r12+r10*8+0xc]
          │                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::length@4 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 64)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007fdecc73bdda
  0.29%   │  0x00007fdecc73bbb9: movsx  ecx,BYTE PTR [r12+r11*8+0x14]
          │                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::coder@7 (line 3258)
          │                                                ; - java.lang.String::length@6 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 64)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  2.74%   │  0x00007fdecc73bbbf: sar    ebp,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::length@9 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 64)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  4.78%   │  0x00007fdecc73bbc1: cmp    ebp,0xffffff80
          │  0x00007fdecc73bbc4: jl     0x00007fdecc73bca5  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@3 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 64)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  2.55%   │  0x00007fdecc73bbca: cmp    ebp,0x7f
          │  0x00007fdecc73bbcd: jg     0x00007fdecc73bc1a  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@10 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 64)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  0.14%   │  0x00007fdecc73bbcf: mov    r10d,ebp
  4.51%   │  0x00007fdecc73bbd2: add    r10d,0x80          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@20 (line 1049)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 64)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  0.08%   │  0x00007fdecc73bbd9: cmp    r10d,0x100
          ╰  0x00007fdecc73bbe0: jb     0x00007fdecc73bb50
             0x00007fdecc73bbe6: mov    esi,0xffffffe4
             0x00007fdecc73bbeb: mov    rbp,r8
             0x00007fdecc73bbee: rex.W push QWORD PTR [rsp+0x48]
             0x00007fdecc73bbf3: rex.W pop QWORD PTR [rsp+0x40]
             0x00007fdecc73bbf8: rex.W push QWORD PTR [rsp+0x10]
             0x00007fdecc73bbfd: rex.W pop QWORD PTR [rsp+0x48]
....................................................................................................
 58.73%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 493 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007fdecc7383c0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fdecc7383c4: movabs r12,0x800000000
            0x00007fdecc7383ce: add    r10,r12
            0x00007fdecc7383d1: xor    r12,r12
            0x00007fdecc7383d4: cmp    rax,r10
            0x00007fdecc7383d7: jne    0x00007fdec4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fdecc7383dd: data16 xchg ax,ax
          [Verified Entry Point]
  2.70%     0x00007fdecc7383e0: mov    DWORD PTR [rsp-0x14000],eax
  4.47%     0x00007fdecc7383e7: push   rbp
  2.90%     0x00007fdecc7383e8: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  4.24%     0x00007fdecc7383ec: mov    QWORD PTR [rsp],rdx
  0.16%     0x00007fdecc7383f0: mov    QWORD PTR [rsp+0x8],rsi
  2.35%     0x00007fdecc7383f5: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  0.14%     0x00007fdecc7383fb: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  5.17%     0x00007fdecc738406: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  0.10%     0x00007fdecc73840d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
  2.82%     0x00007fdecc738414: and    r11d,ebp
  0.17%     0x00007fdecc738417: test   r11d,r11d
         ╭  0x00007fdecc73841a: je     0x00007fdecc73842c  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  4.65%  │  0x00007fdecc73841c: add    rsp,0x30
  0.04%  │  0x00007fdecc738420: pop    rbp
  2.59%  │  0x00007fdecc738421: mov    r10,QWORD PTR [r15+0x108]
  0.06%  │  0x00007fdecc738428: test   DWORD PTR [r10],eax  ;   {poll_return}
  5.13%  │  0x00007fdecc73842b: ret    
         ↘  0x00007fdecc73842c: mov    rbx,QWORD PTR [r15+0x118]
            0x00007fdecc738433: mov    r10,rbx
            0x00007fdecc738436: add    r10,0x20
            0x00007fdecc73843a: cmp    r10,QWORD PTR [r15+0x128]
            0x00007fdecc738441: jae    0x00007fdecc73869e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007fdecc738447: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 37.67%  <total for region 2>

....[Hottest Regions]...............................................................................
 58.73%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub, version 524 (137 bytes) 
 37.67%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 493 (75 bytes) 
  1.77%              kernel  [unknown] (6 bytes) 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (36 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (15 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (29 bytes) 
  0.04%              kernel  [unknown] (29 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%      hsdis-amd64.so  print_insn (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.05%  <...other 54 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 58.73%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub, version 524 
 37.67%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 493 
  2.78%              kernel  [unknown] 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%      hsdis-amd64.so  print_insn 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%        libc-2.28.so  _dl_addr 
  0.04%        libc-2.28.so  _IO_vsnprintf 
  0.02%         interpreter  fast_iload  224 fast_iload  
  0.02%         interpreter  invokespecial  183 invokespecial  
  0.02%         interpreter  method entry point (kind = native)  
  0.02%           libjvm.so  _ZN7Monitor10notify_allEv 
  0.02%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%  libpthread-2.28.so  __pthread_mutex_lock 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%           libjvm.so  _ZN13WatcherThread3runEv 
  0.02%         interpreter  fast_aload_0  220 fast_aload_0  
  0.02%           libjvm.so  _ZN8LIR_List5storeEP11LIR_OprDescP11LIR_AddressP12CodeEmitInfo13LIR_PatchCode 
  0.02%           libjvm.so  _ZN7Monitor28lock_without_safepoint_checkEv 
  0.02%           libjvm.so  _ZN8ciMethod18ensure_method_dataERK12methodHandle 
  0.19%  <...other 10 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.40%         c2, level 4
  2.78%              kernel
  0.45%           libjvm.so
  0.14%        libc-2.28.so
  0.08%      hsdis-amd64.so
  0.08%         interpreter
  0.02%      perf-17278.map
  0.02%  libpthread-2.28.so
  0.02%          ld-2.28.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyKtBenchmark.notNull
# Parameters: (value = 42)

# Run progress: 85.71% complete, ETA 00:00:36
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.368 ns/op
# Warmup Iteration   2: 3.249 ns/op
# Warmup Iteration   3: 3.065 ns/op
# Warmup Iteration   4: 2.957 ns/op
# Warmup Iteration   5: 2.914 ns/op
Iteration   1: 2.839 ns/op
Iteration   2: 3.018 ns/op
Iteration   3: 2.827 ns/op
Iteration   4: 2.773 ns/op
Iteration   5: 2.909 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 90.48% complete, ETA 00:00:24
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.765 ns/op
# Warmup Iteration   2: 3.148 ns/op
# Warmup Iteration   3: 3.622 ns/op
# Warmup Iteration   4: 3.557 ns/op
# Warmup Iteration   5: 3.069 ns/op
Iteration   1: 3.117 ns/op
Iteration   2: 3.091 ns/op
Iteration   3: 3.102 ns/op
Iteration   4: 3.155 ns/op
Iteration   5: 3.074 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 95.24% complete, ETA 00:00:12
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.870 ns/op
# Warmup Iteration   2: 2.796 ns/op
# Warmup Iteration   3: 3.295 ns/op
# Warmup Iteration   4: 2.798 ns/op
# Warmup Iteration   5: 2.779 ns/op
Iteration   1: 2.710 ns/op
Iteration   2: 2.705 ns/op
Iteration   3: 2.705 ns/op
Iteration   4: 2.716 ns/op
Iteration   5: 2.708 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyKtBenchmark.notNull":
  2.897 ±(99.9%) 0.190 ns/op [Average]
  (min, avg, max) = (2.705, 2.897, 3.155), stdev = 0.178
  CI (99.9%): [2.707, 3.086] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyKtBenchmark.notNull:·asm":
PrintAssembly processed: 138990 total address lines.
Perf output processed (skipped 7.351 seconds):
 Column 1: cycles (5132 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 526 (64 bytes) 

                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@20 (line 232)
                                                           ;   {optimized virtual_call}
             0x00007f687073a72c: mov    r10,QWORD PTR [rsp]
             0x00007f687073a730: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f687073a82a
             0x00007f687073a738: mov    ebp,0x1
             0x00007f687073a73d: test   r10d,r10d
         ╭   0x00007f687073a740: jne    0x00007f687073a787  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@36 (line 235)
  0.60%  │↗  0x00007f687073a742: mov    r10,QWORD PTR [rsp+0x40]
  4.54%  ││  0x00007f687073a747: mov    r10d,DWORD PTR [r10+0x10]
         ││                                                ;*getfield notNullString {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@1 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  4.29%  ││  0x00007f687073a74b: mov    r8d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@1 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f687073a7da
  1.17%  ││  0x00007f687073a750: mov    edx,DWORD PTR [r12+r8*8+0xc]
         ││                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@4 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f687073a7e6
  6.94%  ││  0x00007f687073a755: movsx  ecx,BYTE PTR [r12+r10*8+0x14]
         ││                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::coder@7 (line 3258)
         ││                                                ; - java.lang.String::length@6 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  4.27%  ││  0x00007f687073a75b: sar    edx,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@9 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
 10.29%  ││  0x00007f687073a75d: mov    rsi,QWORD PTR [rsp+0x38]
  4.46%  ││  0x00007f687073a762: nop
  0.95%  ││  0x00007f687073a763: call   0x00007f6868c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  4.75%  ││  0x00007f687073a768: mov    r10,QWORD PTR [rsp]
  5.22%  ││  0x00007f687073a76c: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@33 (line 234)
  0.39%  ││  0x00007f687073a774: mov    r10,QWORD PTR [r15+0x108]
  4.33%  ││  0x00007f687073a77b: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@33 (line 234)
  4.05%  ││  0x00007f687073a77f: test   DWORD PTR [r10],eax  ;   {poll}
  0.78%  ││  0x00007f687073a782: test   r11d,r11d
         │╰  0x00007f687073a785: je     0x00007f687073a742  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@36 (line 235)
         ↘   0x00007f687073a787: movabs r10,0x7f688816da00
             0x00007f687073a791: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@37 (line 235)
             0x00007f687073a794: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f687073a799: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@52 (line 237)
             0x00007f687073a79d: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@40 (line 235)
....................................................................................................
 57.03%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 495 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f68707371a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f68707371a4: movabs r12,0x800000000
            0x00007f68707371ae: add    r10,r12
            0x00007f68707371b1: xor    r12,r12
            0x00007f68707371b4: cmp    rax,r10
            0x00007f68707371b7: jne    0x00007f6868c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f68707371bd: data16 xchg ax,ax
          [Verified Entry Point]
  5.38%     0x00007f68707371c0: mov    DWORD PTR [rsp-0x14000],eax
  4.62%     0x00007f68707371c7: push   rbp
  0.72%     0x00007f68707371c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  8.48%     0x00007f68707371cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.86%     0x00007f68707371d3: mov    r8d,edx
  0.70%     0x00007f68707371d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  3.90%     0x00007f68707371dd: mov    r9d,edx
  4.07%     0x00007f68707371e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.72%     0x00007f68707371e3: cmp    r9d,r8d
         ╭  0x00007f68707371e6: je     0x00007f68707371f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.49%  │  0x00007f68707371e8: add    rsp,0x20
  4.19%  │  0x00007f68707371ec: pop    rbp
  4.13%  │  0x00007f68707371ed: mov    r10,QWORD PTR [r15+0x108]
  0.62%  │  0x00007f68707371f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.49%  │  0x00007f68707371f7: ret    
         ↘  0x00007f68707371f8: mov    rbp,rsi
            0x00007f68707371fb: mov    DWORD PTR [rsp],edx
            0x00007f68707371fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f6870737203: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f6870737208: mov    esi,0xffffff4d
            0x00007f687073720d: xchg   ax,ax
            0x00007f687073720f: call   0x00007f6868c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 39.36%  <total for region 2>

....[Hottest Regions]...............................................................................
 57.03%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 526 (64 bytes) 
 39.36%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 495 (55 bytes) 
  1.54%              kernel  [unknown] (6 bytes) 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (44 bytes) 
  0.16%              kernel  [unknown] (20 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (5 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb (11 bytes) 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (0 bytes) 
  0.04%  libpthread-2.28.so  __pthread_disable_asynccancel (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.21%  <...other 62 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 57.03%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 526 
 39.36%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 495 
  2.69%              kernel  [unknown] 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%  libpthread-2.28.so  __pthread_disable_asynccancel 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.04%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%           libjvm.so  _ZN7VMError17is_error_reportedEv 
  0.02%         interpreter  invoke return entry points  
  0.02%    Unknown, level 0  jdk.internal.misc.Unsafe::compareAndSetInt, version 539 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%           libjvm.so  _ZN8ValueMap11find_insertEP11Instruction 
  0.02%      hsdis-amd64.so  OP_G 
  0.02%        libc-2.28.so  _IO_do_write@@GLIBC_2.2.5 
  0.02%           libjvm.so  _ZN5State17MachNodeGeneratorEi 
  0.02%           libjvm.so  _ZN14AccessInternal19PostRuntimeDispatchIN12G1BarrierSet13AccessBarrierILm1097844ES1_EELNS_11BarrierTypeE2ELm1097844EE18oop_access_barrierEPv 
  0.25%  <...other 13 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.40%         c2, level 4
  2.69%              kernel
  0.55%           libjvm.so
  0.16%        libc-2.28.so
  0.06%      hsdis-amd64.so
  0.06%         interpreter
  0.04%  libpthread-2.28.so
  0.02%    Unknown, level 0
  0.02%          ld-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 138801 total address lines.
Perf output processed (skipped 7.179 seconds):
 Column 1: cycles (5180 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 524 (64 bytes) 

                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@20 (line 232)
                                                           ;   {optimized virtual_call}
             0x00007fe0d073d22c: mov    r10,QWORD PTR [rsp]
             0x00007fe0d073d230: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fe0d073d32a
             0x00007fe0d073d238: mov    ebp,0x1
             0x00007fe0d073d23d: test   r10d,r10d
         ╭   0x00007fe0d073d240: jne    0x00007fe0d073d287  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@36 (line 235)
  0.68%  │↗  0x00007fe0d073d242: mov    r10,QWORD PTR [rsp+0x40]
  4.31%  ││  0x00007fe0d073d247: mov    r10d,DWORD PTR [r10+0x10]
         ││                                                ;*getfield notNullString {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@1 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  4.11%  ││  0x00007fe0d073d24b: mov    r8d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@1 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fe0d073d2da
  1.27%  ││  0x00007fe0d073d250: mov    edx,DWORD PTR [r12+r8*8+0xc]
         ││                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@4 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fe0d073d2e6
  6.87%  ││  0x00007fe0d073d255: movsx  ecx,BYTE PTR [r12+r10*8+0x14]
         ││                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::coder@7 (line 3258)
         ││                                                ; - java.lang.String::length@6 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  4.59%  ││  0x00007fe0d073d25b: sar    edx,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@9 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  9.46%  ││  0x00007fe0d073d25d: mov    rsi,QWORD PTR [rsp+0x38]
  4.29%  ││  0x00007fe0d073d262: nop
  0.52%  ││  0x00007fe0d073d263: call   0x00007fe0c8c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  4.48%  ││  0x00007fe0d073d268: mov    r10,QWORD PTR [rsp]
  4.46%  ││  0x00007fe0d073d26c: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@33 (line 234)
  0.62%  ││  0x00007fe0d073d274: mov    r10,QWORD PTR [r15+0x108]
  4.90%  ││  0x00007fe0d073d27b: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@33 (line 234)
  4.29%  ││  0x00007fe0d073d27f: test   DWORD PTR [r10],eax  ;   {poll}
  0.62%  ││  0x00007fe0d073d282: test   r11d,r11d
         │╰  0x00007fe0d073d285: je     0x00007fe0d073d242  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@36 (line 235)
         ↘   0x00007fe0d073d287: movabs r10,0x7fe0e7641a00
             0x00007fe0d073d291: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@37 (line 235)
             0x00007fe0d073d294: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fe0d073d299: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@52 (line 237)
             0x00007fe0d073d29d: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@40 (line 235)
....................................................................................................
 55.46%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 485 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fe0d0739420: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fe0d0739424: movabs r12,0x800000000
            0x00007fe0d073942e: add    r10,r12
            0x00007fe0d0739431: xor    r12,r12
            0x00007fe0d0739434: cmp    rax,r10
            0x00007fe0d0739437: jne    0x00007fe0c8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fe0d073943d: data16 xchg ax,ax
          [Verified Entry Point]
  4.85%     0x00007fe0d0739440: mov    DWORD PTR [rsp-0x14000],eax
  5.08%     0x00007fe0d0739447: push   rbp
  0.75%     0x00007fe0d0739448: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  8.53%     0x00007fe0d073944c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.71%     0x00007fe0d0739453: mov    r8d,edx
  0.39%     0x00007fe0d0739456: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  4.61%     0x00007fe0d073945d: mov    r9d,edx
  4.09%     0x00007fe0d0739460: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.52%     0x00007fe0d0739463: cmp    r9d,r8d
         ╭  0x00007fe0d0739466: je     0x00007fe0d0739478  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.66%  │  0x00007fe0d0739468: add    rsp,0x20
  4.75%  │  0x00007fe0d073946c: pop    rbp
  4.07%  │  0x00007fe0d073946d: mov    r10,QWORD PTR [r15+0x108]
  0.66%  │  0x00007fe0d0739474: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.62%  │  0x00007fe0d0739477: ret    
         ↘  0x00007fe0d0739478: mov    rbp,rsi
            0x00007fe0d073947b: mov    DWORD PTR [rsp],edx
            0x00007fe0d073947e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fe0d0739483: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fe0d0739488: mov    esi,0xffffff4d
            0x00007fe0d073948d: xchg   ax,ax
            0x00007fe0d073948f: call   0x00007fe0c8c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 40.29%  <total for region 2>

....[Hottest Regions]...............................................................................
 55.46%       c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 524 (64 bytes) 
 40.29%       c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 485 (55 bytes) 
  2.57%            kernel  [unknown] (6 bytes) 
  0.14%         libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (47 bytes) 
  0.10%            kernel  [unknown] (25 bytes) 
  0.06%            kernel  [unknown] (0 bytes) 
  0.06%            kernel  [unknown] (0 bytes) 
  0.04%            kernel  [unknown] (15 bytes) 
  0.04%            kernel  [unknown] (0 bytes) 
  0.04%            kernel  [unknown] (6 bytes) 
  0.04%            kernel  [unknown] (0 bytes) 
  0.04%         libjvm.so  _ZN13defaultStream5writeEPKcm (19 bytes) 
  0.04%      libc-2.28.so  _IO_fwrite (19 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.02%            kernel  [unknown] (0 bytes) 
  0.95%  <...other 49 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 55.46%       c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 524 
 40.29%       c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 485 
  3.61%            kernel  [unknown] 
  0.14%         libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%    hsdis-amd64.so  print_insn 
  0.04%      libc-2.28.so  _IO_fwrite 
  0.04%         libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%      libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.02%         libjvm.so  _ZNK8G1Policy30predict_region_elapsed_time_msEP10HeapRegionb 
  0.02%         libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%         libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%       interpreter  method entry point (kind = native)  
  0.02%       c1, level 3  java.util.jar.JarFile::isMultiRelease, version 501 
  0.02%         libjvm.so  _ZNK6Method23can_be_statically_boundEv 
  0.02%       interpreter  method entry point (kind = zerolocals)  
  0.02%        libjava.so  Java_java_io_ObjectStreamClass_hasStaticInitializer 
  0.02%         libjvm.so  _ZN10ValueStackC1EPS_NS_4KindEi 
  0.02%         libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%       interpreter  invokevirtual  182 invokevirtual  
  0.02%      libc-2.28.so  _IO_vsnprintf 
  0.12%  <...other 6 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.75%       c2, level 4
  3.61%            kernel
  0.35%         libjvm.so
  0.10%      libc-2.28.so
  0.06%    hsdis-amd64.so
  0.06%       interpreter
  0.02%       c1, level 3
  0.02%        libjava.so
  0.02%  Unknown, level 0
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 138141 total address lines.
Perf output processed (skipped 7.132 seconds):
 Column 1: cycles (5152 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 534 (64 bytes) 

                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@20 (line 232)
                                                           ;   {optimized virtual_call}
             0x00007fca0873c5ac: mov    r10,QWORD PTR [rsp]
             0x00007fca0873c5b0: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fca0873c6aa
             0x00007fca0873c5b8: mov    ebp,0x1
             0x00007fca0873c5bd: test   r10d,r10d
         ╭   0x00007fca0873c5c0: jne    0x00007fca0873c607  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@36 (line 235)
  0.66%  │↗  0x00007fca0873c5c2: mov    r10,QWORD PTR [rsp+0x40]
  4.43%  ││  0x00007fca0873c5c7: mov    r10d,DWORD PTR [r10+0x10]
         ││                                                ;*getfield notNullString {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@1 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  3.75%  ││  0x00007fca0873c5cb: mov    r8d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@1 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fca0873c65a
  0.58%  ││  0x00007fca0873c5d0: mov    edx,DWORD PTR [r12+r8*8+0xc]
         ││                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@4 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fca0873c666
  6.48%  ││  0x00007fca0873c5d5: movsx  ecx,BYTE PTR [r12+r10*8+0x14]
         ││                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::coder@7 (line 3258)
         ││                                                ; - java.lang.String::length@6 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  4.85%  ││  0x00007fca0873c5db: sar    edx,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@9 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  9.61%  ││  0x00007fca0873c5dd: mov    rsi,QWORD PTR [rsp+0x38]
  3.84%  ││  0x00007fca0873c5e2: nop
  0.87%  ││  0x00007fca0873c5e3: call   0x00007fca00c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  4.43%  ││  0x00007fca0873c5e8: mov    r10,QWORD PTR [rsp]
  5.36%  ││  0x00007fca0873c5ec: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@33 (line 234)
  0.64%  ││  0x00007fca0873c5f4: mov    r10,QWORD PTR [r15+0x108]
  4.74%  ││  0x00007fca0873c5fb: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@33 (line 234)
  3.98%  ││  0x00007fca0873c5ff: test   DWORD PTR [r10],eax  ;   {poll}
  0.66%  ││  0x00007fca0873c602: test   r11d,r11d
         │╰  0x00007fca0873c605: je     0x00007fca0873c5c2  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@36 (line 235)
         ↘   0x00007fca0873c607: movabs r10,0x7fca1e628a00
             0x00007fca0873c611: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@37 (line 235)
             0x00007fca0873c614: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fca0873c619: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@52 (line 237)
             0x00007fca0873c61d: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@40 (line 235)
....................................................................................................
 54.87%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 494 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fca08737d20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fca08737d24: movabs r12,0x800000000
            0x00007fca08737d2e: add    r10,r12
            0x00007fca08737d31: xor    r12,r12
            0x00007fca08737d34: cmp    rax,r10
            0x00007fca08737d37: jne    0x00007fca00c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fca08737d3d: data16 xchg ax,ax
          [Verified Entry Point]
  5.10%     0x00007fca08737d40: mov    DWORD PTR [rsp-0x14000],eax
  5.67%     0x00007fca08737d47: push   rbp
  0.62%     0x00007fca08737d48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  9.10%     0x00007fca08737d4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.58%     0x00007fca08737d53: mov    r8d,edx
  0.64%     0x00007fca08737d56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  4.19%     0x00007fca08737d5d: mov    r9d,edx
  4.52%     0x00007fca08737d60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.68%     0x00007fca08737d63: cmp    r9d,r8d
         ╭  0x00007fca08737d66: je     0x00007fca08737d78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.72%  │  0x00007fca08737d68: add    rsp,0x20
  4.21%  │  0x00007fca08737d6c: pop    rbp
  4.27%  │  0x00007fca08737d6d: mov    r10,QWORD PTR [r15+0x108]
  0.66%  │  0x00007fca08737d74: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.58%  │  0x00007fca08737d77: ret    
         ↘  0x00007fca08737d78: mov    rbp,rsi
            0x00007fca08737d7b: mov    DWORD PTR [rsp],edx
            0x00007fca08737d7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fca08737d83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fca08737d88: mov    esi,0xffffff4d
            0x00007fca08737d8d: xchg   ax,ax
            0x00007fca08737d8f: call   0x00007fca00c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 41.56%  <total for region 2>

....[Hottest Regions]...............................................................................
 54.87%     c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 534 (64 bytes) 
 41.56%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 494 (55 bytes) 
  2.17%          kernel  [unknown] (0 bytes) 
  0.12%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.08%          kernel  [unknown] (46 bytes) 
  0.08%          kernel  [unknown] (0 bytes) 
  0.06%          kernel  [unknown] (1 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (26 bytes) 
  0.04%    libc-2.28.so  syscall (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.74%  <...other 38 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 54.87%     c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 534 
 41.56%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 494 
  3.07%          kernel  [unknown] 
  0.12%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.04%     interpreter  invokevirtual  182 invokevirtual  
  0.04%    libc-2.28.so  syscall 
  0.02%       libjvm.so  _ZL13printf_to_envPvPKcz 
  0.02%    libc-2.28.so  vfprintf 
  0.02%    libc-2.28.so  __strcpy_sse2_unaligned 
  0.02%    libc-2.28.so  __stpcpy_sse2_unaligned 
  0.02%       libjvm.so  _ZN24DebugInformationRecorder14describe_scopeEiRK12methodHandleP8ciMethodibbbbP10DebugTokenS6_S6_ 
  0.02%       libjvm.so  _ZN12stringStream5writeEPKcm 
  0.02%       libjvm.so  _ZN12outputStream5printEPKcz 
  0.02%  hsdis-amd64.so  OP_M 
  0.02%       libjvm.so  _ZN2os9vsnprintfEPcmPKcP13__va_list_tag 
  0.02%       libjvm.so  _ZNK6Symbol22as_klass_external_nameEv 
  0.02%       libjvm.so  _ZN10MethodData10initializeEv 
  0.02%    libc-2.28.so  _IO_default_xsputn 
  0.02%     interpreter  method entry point (kind = zerolocals)  
  0.02%    libc-2.28.so  __strlen_avx2 
  0.02%  <...other 1 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.43%     c2, level 4
  3.07%          kernel
  0.27%       libjvm.so
  0.14%    libc-2.28.so
  0.06%     interpreter
  0.02%  hsdis-amd64.so
....................................................................................................
 99.98%  <totals>



# Run complete. Total time: 00:04:15

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                           (value)  Mode  Cnt  Score   Error  Units
NullSafetyJavaBenchmark.elvisEquivalent                  42  avgt   15  3.159 ± 0.130  ns/op
NullSafetyJavaBenchmark.elvisEquivalent:·asm             42  avgt         NaN            ---
NullSafetyJavaBenchmark.ofNullable                       42  avgt   15  3.338 ± 0.191  ns/op
NullSafetyJavaBenchmark.ofNullable:·asm                  42  avgt         NaN            ---
NullSafetyKtBenchmark.elvis                              42  avgt   15  3.076 ± 0.188  ns/op
NullSafetyKtBenchmark.elvis:·asm                         42  avgt         NaN            ---
NullSafetyKtBenchmark.lateinit                           42  avgt   15  2.933 ± 0.129  ns/op
NullSafetyKtBenchmark.lateinit:·asm                      42  avgt         NaN            ---
NullSafetyKtBenchmark.maybeNull                          42  avgt   15  3.497 ± 0.781  ns/op
NullSafetyKtBenchmark.maybeNull:·asm                     42  avgt         NaN            ---
NullSafetyKtBenchmark.maybeNullThrowException            42  avgt   10  4.036 ± 0.416  ns/op
NullSafetyKtBenchmark.maybeNullThrowException:·asm       42  avgt         NaN            ---
NullSafetyKtBenchmark.notNull                            42  avgt   15  2.897 ± 0.190  ns/op
NullSafetyKtBenchmark.notNull:·asm                       42  avgt         NaN            ---

Few thoughts:
    - Kotlin constructions (elvis, lateinit, notNull, maybeNull) seems to perform so well also at assembly level
        - maybeNullThrowException is slower since there were exceptions thrown during test
    - Kotlin elvis operator keeps the code nice and cleaner than any Java alternative
    - Java elvisEquivalent is slightly better that ofNullable since it does not contain any explicit checkcast