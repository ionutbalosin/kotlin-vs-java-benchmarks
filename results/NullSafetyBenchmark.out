# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyJavaBenchmark.elvis
# Parameters: (defaultValue = -1, value = 42)

# Run progress: 0.00% complete, ETA 00:03:30
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.667 ns/op
# Warmup Iteration   2: 4.196 ns/op
# Warmup Iteration   3: 4.454 ns/op
# Warmup Iteration   4: 3.922 ns/op
# Warmup Iteration   5: 3.924 ns/op
Iteration   1: 3.938 ns/op
Iteration   2: 3.909 ns/op
Iteration   3: 3.974 ns/op
Iteration   4: 4.000 ns/op
Iteration   5: 3.932 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 4.76% complete, ETA 00:04:22
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.589 ns/op
# Warmup Iteration   2: 4.564 ns/op
# Warmup Iteration   3: 4.847 ns/op
# Warmup Iteration   4: 4.353 ns/op
# Warmup Iteration   5: 4.302 ns/op
Iteration   1: 4.328 ns/op
Iteration   2: 4.308 ns/op
Iteration   3: 4.298 ns/op
Iteration   4: 4.290 ns/op
Iteration   5: 4.275 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 9.52% complete, ETA 00:04:06
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.702 ns/op
# Warmup Iteration   2: 4.681 ns/op
# Warmup Iteration   3: 4.977 ns/op
# Warmup Iteration   4: 4.391 ns/op
# Warmup Iteration   5: 4.432 ns/op
Iteration   1: 4.421 ns/op
Iteration   2: 4.398 ns/op
Iteration   3: 4.340 ns/op
Iteration   4: 3.789 ns/op
Iteration   5: 3.800 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyJavaBenchmark.elvis":
  4.133 ±(99.9%) 0.245 ns/op [Average]
  (min, avg, max) = (3.789, 4.133, 4.421), stdev = 0.229
  CI (99.9%): [3.888, 4.379] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyJavaBenchmark.elvis:·asm":
PrintAssembly processed: 145080 total address lines.
Perf output processed (skipped 7.242 seconds):
 Column 1: cycles (5214 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 553 (138 bytes) 

             0x00007fe10c740cd0: mov    r8,QWORD PTR [rsp+0x40]
             0x00007fe10c740cd5: movzx  r11d,BYTE PTR [r8+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fe10c741056
             0x00007fe10c740cdd: test   r11d,r11d
             0x00007fe10c740ce0: jne    0x00007fe10c740e0e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
             0x00007fe10c740ce6: mov    ebx,0x1
         ╭   0x00007fe10c740ceb: jmp    0x00007fe10c740d48
         │   0x00007fe10c740ced: data16 xchg ax,ax
  9.84%  │↗  0x00007fe10c740cf0: movsxd r10,ebp
  0.06%  ││  0x00007fe10c740cf3: movabs r11,0x71bd1eb08    ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x000000071bd1eb08})}
         ││  0x00007fe10c740cfd: mov    r10d,DWORD PTR [r11+r10*4+0x210]
  6.29%  ││  0x00007fe10c740d05: lea    rdx,[r12+r10*8]    ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@48 (line 71)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  7.04%  ││  0x00007fe10c740d09: mov    QWORD PTR [rsp],rbx
         ││  0x00007fe10c740d0d: mov    QWORD PTR [rsp+0x40],r8
         ││  0x00007fe10c740d12: mov    rbp,r9
         ││  0x00007fe10c740d15: mov    rsi,QWORD PTR [rsp+0x10]
  6.27%  ││  0x00007fe10c740d1a: nop
  0.02%  ││  0x00007fe10c740d1b: call   0x00007fe104c68f00  ; ImmutableOopMap{rbp=Oop [64]=Oop [72]=Oop [16]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.04%  ││  0x00007fe10c740d20: mov    r8,QWORD PTR [rsp+0x40]
         ││  0x00007fe10c740d25: movzx  r10d,BYTE PTR [r8+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
  6.58%  ││  0x00007fe10c740d2d: mov    r11,QWORD PTR [r15+0x108]
  0.04%  ││  0x00007fe10c740d34: mov    rbx,QWORD PTR [rsp]
         ││  0x00007fe10c740d38: add    rbx,0x1            ; ImmutableOopMap{r8=Oop rbp=Oop [72]=Oop [16]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
         ││  0x00007fe10c740d3c: test   DWORD PTR [r11],eax  ;   {poll}
  7.98%  ││  0x00007fe10c740d3f: test   r10d,r10d
         ││  0x00007fe10c740d42: jne    0x00007fe10c740e13  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@36 (line 235)
         ↘│  0x00007fe10c740d48: mov    r9,rbp
          │  0x00007fe10c740d4b: mov    ecx,DWORD PTR [rbp+0x14]  ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@1 (line 60)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │  0x00007fe10c740d4e: mov    r10d,DWORD PTR [r12+rcx*8+0xc]
          │                                                ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Outer::getNested@1 (line 89)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@10 (line 64)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007fe10c740f82
  7.17%   │  0x00007fe10c740d53: mov    r11d,DWORD PTR [r12+r10*8+0xc]
          │                                                ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Nested::getInner@1 (line 101)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@19 (line 66)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007fe10c740fb2
  0.06%   │  0x00007fe10c740d58: mov    ecx,DWORD PTR [r12+r11*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Inner::getValue@1 (line 113)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@31 (line 68)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007fe10c740fe6
  0.19%   │  0x00007fe10c740d5d: mov    ebp,DWORD PTR [r12+rcx*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::intValue@1 (line 1123)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@43 (line 70)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007fe10c74101a
  0.38%   │  0x00007fe10c740d62: cmp    ebp,0xffffff80
          │  0x00007fe10c740d65: jl     0x00007fe10c740e45  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@3 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@48 (line 71)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  7.23%   │  0x00007fe10c740d6b: cmp    ebp,0x7f
          │  0x00007fe10c740d6e: jg     0x00007fe10c740dba  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@10 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@48 (line 71)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  0.10%   │  0x00007fe10c740d70: mov    r10d,ebp
          │  0x00007fe10c740d73: add    r10d,0x80          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@20 (line 1049)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@48 (line 71)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  0.02%   │  0x00007fe10c740d7a: cmp    r10d,0x100
          ╰  0x00007fe10c740d81: jb     0x00007fe10c740cf0
             0x00007fe10c740d87: mov    esi,0xffffffe4
             0x00007fe10c740d8c: mov    rbp,r8
             0x00007fe10c740d8f: rex.W push QWORD PTR [rsp+0x48]
             0x00007fe10c740d94: rex.W pop QWORD PTR [rsp+0x40]
             0x00007fe10c740d99: rex.W push QWORD PTR [rsp+0x10]
             0x00007fe10c740d9e: rex.W pop QWORD PTR [rsp+0x48]
....................................................................................................
 59.30%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 518 (68 bytes) 

            #           [sp+0x40]  (sp of caller)
            0x00007fe10c739e40: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fe10c739e44: movabs r12,0x800000000
            0x00007fe10c739e4e: add    r10,r12
            0x00007fe10c739e51: xor    r12,r12
            0x00007fe10c739e54: cmp    rax,r10
            0x00007fe10c739e57: jne    0x00007fe104c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fe10c739e5d: data16 xchg ax,ax
          [Verified Entry Point]
            0x00007fe10c739e60: mov    DWORD PTR [rsp-0x14000],eax
  6.50%     0x00007fe10c739e67: push   rbp
            0x00007fe10c739e68: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  7.40%     0x00007fe10c739e6c: mov    QWORD PTR [rsp],rdx
            0x00007fe10c739e70: mov    QWORD PTR [rsp+0x8],rsi
            0x00007fe10c739e75: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
            0x00007fe10c739e7b: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  7.00%     0x00007fe10c739e86: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  0.02%     0x00007fe10c739e8d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
            0x00007fe10c739e94: and    r11d,ebp
            0x00007fe10c739e97: test   r11d,r11d
         ╭  0x00007fe10c739e9a: je     0x00007fe10c739eac  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  7.48%  │  0x00007fe10c739e9c: add    rsp,0x30
  0.04%  │  0x00007fe10c739ea0: pop    rbp
         │  0x00007fe10c739ea1: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007fe10c739ea8: test   DWORD PTR [r10],eax  ;   {poll_return}
  7.25%  │  0x00007fe10c739eab: ret    
         ↘  0x00007fe10c739eac: mov    rbx,QWORD PTR [r15+0x118]
            0x00007fe10c739eb3: mov    r10,rbx
            0x00007fe10c739eb6: add    r10,0x20
            0x00007fe10c739eba: cmp    r10,QWORD PTR [r15+0x128]
            0x00007fe10c739ec1: jae    0x00007fe10c73a11e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007fe10c739ec7: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 35.69%  <total for region 2>

....[Hottest Regions]...............................................................................
 59.30%     c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 553 (138 bytes) 
 35.69%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 518 (68 bytes) 
  2.21%          kernel  [unknown] (6 bytes) 
  0.25%          kernel  [unknown] (45 bytes) 
  0.21%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.17%          kernel  [unknown] (0 bytes) 
  0.10%          kernel  [unknown] (28 bytes) 
  0.10%          kernel  [unknown] (11 bytes) 
  0.06%          kernel  [unknown] (17 bytes) 
  0.04%          kernel  [unknown] (9 bytes) 
  0.04%          kernel  [unknown] (1 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (17 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  1.61%  <...other 84 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 59.30%     c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 553 
 35.69%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 518 
  4.01%          kernel  [unknown] 
  0.21%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%    libc-2.28.so  _IO_default_xsputn 
  0.04%       libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.04%  hsdis-amd64.so  ckprefix 
  0.02%       libjvm.so  _ZN11RegisterMapC1EPKS_ 
  0.02%     c1, level 3  java.io.ObjectOutputStream$HandleTable::lookup, version 548 
  0.02%  hsdis-amd64.so  putop 
  0.02%       libjvm.so  _ZNK6Method20line_number_from_bciEi 
  0.02%    libc-2.28.so  __strchr_avx2 
  0.02%       libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%       libjvm.so  _ZN12outputStream5printEPKcz 
  0.02%  hsdis-amd64.so  bfd_default_scan 
  0.02%     interpreter  method entry point (kind = zerolocals)  
  0.02%       libjvm.so  _ZN10LinearScan14assign_reg_numEP13GrowableArrayIP6LIR_OpEP14IntervalWalker 
  0.02%       libjvm.so  _ZN12outputStream2crEv 
  0.02%       libjvm.so  _ZN9Assembler14locate_operandEPhNS_12WhichOperandE 
  0.35%  <...other 18 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.99%     c2, level 4
  4.01%          kernel
  0.65%       libjvm.so
  0.17%    libc-2.28.so
  0.10%  hsdis-amd64.so
  0.04%     interpreter
  0.02%     c1, level 3
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 137276 total address lines.
Perf output processed (skipped 7.121 seconds):
 Column 1: cycles (5217 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 520 (128 bytes) 

             0x00007f50e873eb50: mov    r8,QWORD PTR [rsp+0x40]
             0x00007f50e873eb55: movzx  r11d,BYTE PTR [r8+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f50e873eed6
             0x00007f50e873eb5d: test   r11d,r11d
             0x00007f50e873eb60: jne    0x00007f50e873ec8e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
             0x00007f50e873eb66: mov    ebx,0x1
         ╭   0x00007f50e873eb6b: jmp    0x00007f50e873ebc8
         │   0x00007f50e873eb6d: data16 xchg ax,ax
 10.60%  │↗  0x00007f50e873eb70: movsxd r10,ebp
  0.10%  ││  0x00007f50e873eb73: movabs r11,0x71bd1eb08    ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x000000071bd1eb08})}
         ││  0x00007f50e873eb7d: mov    r10d,DWORD PTR [r11+r10*4+0x210]
  4.98%  ││  0x00007f50e873eb85: lea    rdx,[r12+r10*8]    ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@48 (line 71)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  7.53%  ││  0x00007f50e873eb89: mov    QWORD PTR [rsp],rbx
         ││  0x00007f50e873eb8d: mov    QWORD PTR [rsp+0x40],r8
         ││  0x00007f50e873eb92: mov    rbp,r9
         ││  0x00007f50e873eb95: mov    rsi,QWORD PTR [rsp+0x10]
  7.11%  ││  0x00007f50e873eb9a: nop
         ││  0x00007f50e873eb9b: call   0x00007f50e0c68f00  ; ImmutableOopMap{rbp=Oop [64]=Oop [72]=Oop [16]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.02%  ││  0x00007f50e873eba0: mov    r8,QWORD PTR [rsp+0x40]
         ││  0x00007f50e873eba5: movzx  r10d,BYTE PTR [r8+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
  7.03%  ││  0x00007f50e873ebad: mov    r11,QWORD PTR [r15+0x108]
         ││  0x00007f50e873ebb4: mov    rbx,QWORD PTR [rsp]
         ││  0x00007f50e873ebb8: add    rbx,0x1            ; ImmutableOopMap{r8=Oop rbp=Oop [72]=Oop [16]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
         ││  0x00007f50e873ebbc: test   DWORD PTR [r11],eax  ;   {poll}
  6.61%  ││  0x00007f50e873ebbf: test   r10d,r10d
         ││  0x00007f50e873ebc2: jne    0x00007f50e873ec93  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@36 (line 235)
         ↘│  0x00007f50e873ebc8: mov    r9,rbp
          │  0x00007f50e873ebcb: mov    ecx,DWORD PTR [rbp+0x14]  ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@1 (line 60)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │  0x00007f50e873ebce: mov    r10d,DWORD PTR [r12+rcx*8+0xc]
          │                                                ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Outer::getNested@1 (line 89)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@10 (line 64)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f50e873ee02
  7.15%   │  0x00007f50e873ebd3: mov    r11d,DWORD PTR [r12+r10*8+0xc]
          │                                                ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Nested::getInner@1 (line 101)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@19 (line 66)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f50e873ee32
  0.06%   │  0x00007f50e873ebd8: mov    ecx,DWORD PTR [r12+r11*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Inner::getValue@1 (line 113)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@31 (line 68)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f50e873ee66
  0.13%   │  0x00007f50e873ebdd: mov    ebp,DWORD PTR [r12+rcx*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::intValue@1 (line 1123)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@43 (line 70)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f50e873ee9a
  0.31%   │  0x00007f50e873ebe2: cmp    ebp,0xffffff80
          │  0x00007f50e873ebe5: jl     0x00007f50e873ecc5  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@3 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@48 (line 71)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  6.98%   │  0x00007f50e873ebeb: cmp    ebp,0x7f
          │  0x00007f50e873ebee: jg     0x00007f50e873ec3a  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@10 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@48 (line 71)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  0.08%   │  0x00007f50e873ebf0: mov    r10d,ebp
          │  0x00007f50e873ebf3: add    r10d,0x80          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@20 (line 1049)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@48 (line 71)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │  0x00007f50e873ebfa: cmp    r10d,0x100
          ╰  0x00007f50e873ec01: jb     0x00007f50e873eb70
             0x00007f50e873ec07: mov    esi,0xffffffe4
....................................................................................................
 58.69%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 486 (68 bytes) 

            #           [sp+0x40]  (sp of caller)
            0x00007f50e87389c0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f50e87389c4: movabs r12,0x800000000
            0x00007f50e87389ce: add    r10,r12
            0x00007f50e87389d1: xor    r12,r12
            0x00007f50e87389d4: cmp    rax,r10
            0x00007f50e87389d7: jne    0x00007f50e0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f50e87389dd: data16 xchg ax,ax
          [Verified Entry Point]
            0x00007f50e87389e0: mov    DWORD PTR [rsp-0x14000],eax
  7.44%     0x00007f50e87389e7: push   rbp
            0x00007f50e87389e8: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  7.23%     0x00007f50e87389ec: mov    QWORD PTR [rsp],rdx
  0.04%     0x00007f50e87389f0: mov    QWORD PTR [rsp+0x8],rsi
            0x00007f50e87389f5: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
            0x00007f50e87389fb: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  7.23%     0x00007f50e8738a06: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
            0x00007f50e8738a0d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
            0x00007f50e8738a14: and    r11d,ebp
            0x00007f50e8738a17: test   r11d,r11d
         ╭  0x00007f50e8738a1a: je     0x00007f50e8738a2c  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  7.32%  │  0x00007f50e8738a1c: add    rsp,0x30
         │  0x00007f50e8738a20: pop    rbp
         │  0x00007f50e8738a21: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007f50e8738a28: test   DWORD PTR [r10],eax  ;   {poll_return}
  7.19%  │  0x00007f50e8738a2b: ret    
         ↘  0x00007f50e8738a2c: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f50e8738a33: mov    r10,rbx
            0x00007f50e8738a36: add    r10,0x20
            0x00007f50e8738a3a: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f50e8738a41: jae    0x00007f50e8738c9e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f50e8738a47: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 36.44%  <total for region 2>

....[Hottest Regions]...............................................................................
 58.69%     c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 520 (128 bytes) 
 36.44%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 486 (68 bytes) 
  1.99%          kernel  [unknown] (6 bytes) 
  0.19%          kernel  [unknown] (0 bytes) 
  0.17%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (41 bytes) 
  0.15%          kernel  [unknown] (3 bytes) 
  0.12%          kernel  [unknown] (30 bytes) 
  0.08%          kernel  [unknown] (54 bytes) 
  0.06%          kernel  [unknown] (34 bytes) 
  0.06%          kernel  [unknown] (15 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.06%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (24 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (9 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (19 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  1.59%  <...other 82 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 58.69%     c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 520 
 36.44%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 486 
  3.87%          kernel  [unknown] 
  0.17%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.10%    libc-2.28.so  vfprintf 
  0.08%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%       libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%    libc-2.28.so  _IO_fflush 
  0.04%  hsdis-amd64.so  putop 
  0.04%  hsdis-amd64.so  print_insn 
  0.02%       libjvm.so  _ZNK22ImplicitExceptionTable2atEj 
  0.02%       libjvm.so  _ZN20CompressedReadStream15read_signed_intEv 
  0.02%       libjvm.so  _ZN10Dictionary4findEjP6Symbol6Handle 
  0.02%       libjvm.so  _ZN6Events3logEP6ThreadPKcz 
  0.02%       libjvm.so  _ZN12LIRGenerator9state_forEP11InstructionP10ValueStackb 
  0.02%       libjvm.so  SpinPause 
  0.02%     interpreter  method entry point (kind = zerolocals)  
  0.02%       libjvm.so  d_print_function_type.isra.15 
  0.02%     interpreter  iadd  96 iadd  
  0.02%       libjvm.so  _ZN10LinearScan28compute_debug_info_for_scopeEiP7IRScopeP10ValueStackS3_ 
  0.27%  <...other 14 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.13%     c2, level 4
  3.87%          kernel
  0.67%       libjvm.so
  0.15%    libc-2.28.so
  0.08%  hsdis-amd64.so
  0.08%     interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 143358 total address lines.
Perf output processed (skipped 7.200 seconds):
 Column 1: cycles (5183 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 545 (138 bytes) 

             0x00007f62f0740950: mov    r8,QWORD PTR [rsp+0x40]
             0x00007f62f0740955: movzx  r11d,BYTE PTR [r8+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f62f0740cd6
             0x00007f62f074095d: test   r11d,r11d
             0x00007f62f0740960: jne    0x00007f62f0740a8e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
             0x00007f62f0740966: mov    ebx,0x1
         ╭   0x00007f62f074096b: jmp    0x00007f62f07409c8
         │   0x00007f62f074096d: data16 xchg ax,ax
 10.57%  │↗  0x00007f62f0740970: movsxd r10,ebp
  0.08%  ││  0x00007f62f0740973: movabs r11,0x71bd1eb08    ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x000000071bd1eb08})}
         ││  0x00007f62f074097d: mov    r10d,DWORD PTR [r11+r10*4+0x210]
  6.56%  ││  0x00007f62f0740985: lea    rdx,[r12+r10*8]    ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@48 (line 71)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  6.97%  ││  0x00007f62f0740989: mov    QWORD PTR [rsp],rbx
         ││  0x00007f62f074098d: mov    QWORD PTR [rsp+0x40],r8
         ││  0x00007f62f0740992: mov    rbp,r9
         ││  0x00007f62f0740995: mov    rsi,QWORD PTR [rsp+0x10]
  7.41%  ││  0x00007f62f074099a: nop
         ││  0x00007f62f074099b: call   0x00007f62e8c68f00  ; ImmutableOopMap{rbp=Oop [64]=Oop [72]=Oop [16]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.02%  ││  0x00007f62f07409a0: mov    r8,QWORD PTR [rsp+0x40]
         ││  0x00007f62f07409a5: movzx  r10d,BYTE PTR [r8+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
  7.00%  ││  0x00007f62f07409ad: mov    r11,QWORD PTR [r15+0x108]
  0.04%  ││  0x00007f62f07409b4: mov    rbx,QWORD PTR [rsp]
         ││  0x00007f62f07409b8: add    rbx,0x1            ; ImmutableOopMap{r8=Oop rbp=Oop [72]=Oop [16]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
         ││  0x00007f62f07409bc: test   DWORD PTR [r11],eax  ;   {poll}
  7.47%  ││  0x00007f62f07409bf: test   r10d,r10d
         ││  0x00007f62f07409c2: jne    0x00007f62f0740a93  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@36 (line 235)
         ↘│  0x00007f62f07409c8: mov    r9,rbp
          │  0x00007f62f07409cb: mov    ecx,DWORD PTR [rbp+0x14]  ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@1 (line 60)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │  0x00007f62f07409ce: mov    r10d,DWORD PTR [r12+rcx*8+0xc]
          │                                                ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Outer::getNested@1 (line 89)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@10 (line 64)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f62f0740c02
  6.50%   │  0x00007f62f07409d3: mov    r11d,DWORD PTR [r12+r10*8+0xc]
          │                                                ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Nested::getInner@1 (line 101)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@19 (line 66)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f62f0740c32
          │  0x00007f62f07409d8: mov    ecx,DWORD PTR [r12+r11*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$Inner::getValue@1 (line 113)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@31 (line 68)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f62f0740c66
  0.14%   │  0x00007f62f07409dd: mov    ebp,DWORD PTR [r12+rcx*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::intValue@1 (line 1123)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@43 (line 70)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f62f0740c9a
  0.29%   │  0x00007f62f07409e2: cmp    ebp,0xffffff80
          │  0x00007f62f07409e5: jl     0x00007f62f0740ac5  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@3 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@48 (line 71)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  7.06%   │  0x00007f62f07409eb: cmp    ebp,0x7f
          │  0x00007f62f07409ee: jg     0x00007f62f0740a3a  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@10 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@48 (line 71)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  0.10%   │  0x00007f62f07409f0: mov    r10d,ebp
          │  0x00007f62f07409f3: add    r10d,0x80          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@20 (line 1049)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::elvis@48 (line 71)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  0.02%   │  0x00007f62f07409fa: cmp    r10d,0x100
          ╰  0x00007f62f0740a01: jb     0x00007f62f0740970
             0x00007f62f0740a07: mov    esi,0xffffffe4
             0x00007f62f0740a0c: mov    rbp,r8
             0x00007f62f0740a0f: rex.W push QWORD PTR [rsp+0x48]
             0x00007f62f0740a14: rex.W pop QWORD PTR [rsp+0x40]
             0x00007f62f0740a19: rex.W push QWORD PTR [rsp+0x10]
             0x00007f62f0740a1e: rex.W pop QWORD PTR [rsp+0x48]
....................................................................................................
 60.22%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 512 (68 bytes) 

            #           [sp+0x40]  (sp of caller)
            0x00007f62f073a740: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f62f073a744: movabs r12,0x800000000
            0x00007f62f073a74e: add    r10,r12
            0x00007f62f073a751: xor    r12,r12
            0x00007f62f073a754: cmp    rax,r10
            0x00007f62f073a757: jne    0x00007f62e8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f62f073a75d: data16 xchg ax,ax
          [Verified Entry Point]
            0x00007f62f073a760: mov    DWORD PTR [rsp-0x14000],eax
  6.75%     0x00007f62f073a767: push   rbp
            0x00007f62f073a768: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  7.35%     0x00007f62f073a76c: mov    QWORD PTR [rsp],rdx
  0.02%     0x00007f62f073a770: mov    QWORD PTR [rsp+0x8],rsi
  0.02%     0x00007f62f073a775: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
            0x00007f62f073a77b: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  7.10%     0x00007f62f073a786: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  0.02%     0x00007f62f073a78d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
            0x00007f62f073a794: and    r11d,ebp
            0x00007f62f073a797: test   r11d,r11d
         ╭  0x00007f62f073a79a: je     0x00007f62f073a7ac  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  6.68%  │  0x00007f62f073a79c: add    rsp,0x30
         │  0x00007f62f073a7a0: pop    rbp
         │  0x00007f62f073a7a1: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007f62f073a7a8: test   DWORD PTR [r10],eax  ;   {poll_return}
  7.60%  │  0x00007f62f073a7ab: ret    
         ↘  0x00007f62f073a7ac: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f62f073a7b3: mov    r10,rbx
            0x00007f62f073a7b6: add    r10,0x20
            0x00007f62f073a7ba: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f62f073a7c1: jae    0x00007f62f073aa1e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f62f073a7c7: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 35.54%  <total for region 2>

....[Hottest Regions]...............................................................................
 60.22%         c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 545 (138 bytes) 
 35.54%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 512 (68 bytes) 
  1.66%              kernel  [unknown] (6 bytes) 
  0.25%              kernel  [unknown] (30 bytes) 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.14%              kernel  [unknown] (0 bytes) 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm (8 bytes) 
  0.04%              kernel  [unknown] (2 bytes) 
  0.04%              kernel  [unknown] (28 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (10 bytes) 
  0.04%           libjvm.so  _ZN15StatSamplerTask4taskEv (19 bytes) 
  0.04%        libc-2.28.so  _IO_fwrite (0 bytes) 
  0.04%        libc-2.28.so  __stpcpy_sse2_unaligned (20 bytes) 
  0.04%        libc-2.28.so  syscall (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.56%  <...other 81 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 60.22%         c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 545 
 35.54%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 512 
  2.95%              kernel  [unknown] 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.12%      hsdis-amd64.so  print_insn 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%        libc-2.28.so  _IO_fwrite 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%        libc-2.28.so  vfprintf 
  0.04%        libc-2.28.so  __stpcpy_sse2_unaligned 
  0.04%           libjvm.so  _ZN15StatSamplerTask4taskEv 
  0.04%        libc-2.28.so  syscall 
  0.02%           libjvm.so  _ZN12GraphBuilder8block_atEi 
  0.02%  libpthread-2.28.so  __pthread_mutex_unlock 
  0.02%           libjvm.so  jni_DetachCurrentThread 
  0.02%           libjvm.so  _ZN10Dictionary4findEjP6Symbol6Handle 
  0.02%         c1, level 3  java.util.AbstractMap::&lt;init&gt;, version 82 
  0.02%           libjvm.so  _ZN13GrowableArrayIP11InstructionED2Ev 
  0.02%      hsdis-amd64.so  putop 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.54%  <...other 28 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.76%         c2, level 4
  2.95%              kernel
  0.71%           libjvm.so
  0.25%        libc-2.28.so
  0.15%      hsdis-amd64.so
  0.08%         interpreter
  0.06%  libpthread-2.28.so
  0.02%         c1, level 3
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyJavaBenchmark.ofNullable
# Parameters: (defaultValue = -1, value = 42)

# Run progress: 14.29% complete, ETA 00:03:51
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5.226 ns/op
# Warmup Iteration   2: 3.987 ns/op
# Warmup Iteration   3: 5.268 ns/op
# Warmup Iteration   4: 4.529 ns/op
# Warmup Iteration   5: 3.973 ns/op
Iteration   1: 4.035 ns/op
Iteration   2: 4.020 ns/op
Iteration   3: 4.000 ns/op
Iteration   4: 3.993 ns/op
Iteration   5: 4.121 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 19.05% complete, ETA 00:03:38
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5.771 ns/op
# Warmup Iteration   2: 4.549 ns/op
# Warmup Iteration   3: 5.367 ns/op
# Warmup Iteration   4: 4.490 ns/op
# Warmup Iteration   5: 4.451 ns/op
Iteration   1: 3.982 ns/op
Iteration   2: 4.502 ns/op
Iteration   3: 3.989 ns/op
Iteration   4: 4.017 ns/op
Iteration   5: 4.151 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 23.81% complete, ETA 00:03:25
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 6.027 ns/op
# Warmup Iteration   2: 5.389 ns/op
# Warmup Iteration   3: 4.602 ns/op
# Warmup Iteration   4: 4.585 ns/op
# Warmup Iteration   5: 4.713 ns/op
Iteration   1: 4.431 ns/op
Iteration   2: 4.427 ns/op
Iteration   3: 4.444 ns/op
Iteration   4: 4.364 ns/op
Iteration   5: 4.540 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyJavaBenchmark.ofNullable":
  4.201 ±(99.9%) 0.235 ns/op [Average]
  (min, avg, max) = (3.982, 4.201, 4.540), stdev = 0.220
  CI (99.9%): [3.966, 4.436] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyJavaBenchmark.ofNullable:·asm":
PrintAssembly processed: 147024 total address lines.
Perf output processed (skipped 7.254 seconds):
 Column 1: cycles (5331 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 559 (169 bytes) 

             0x00007f36bc74322d: test   r11d,r11d
             0x00007f36bc743230: jne    0x00007f36bc743378  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.util.Optional::flatMap@18 (line 294)
                                                           ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
             0x00007f36bc743236: mov    r11d,0x139e8       ;   {metadata(&apos;java/lang/Integer&apos;)}
             0x00007f36bc74323c: movabs r9,0x800000000
             0x00007f36bc743246: add    r9,r11
             0x00007f36bc743249: mov    ebx,0x1
         ╭   0x00007f36bc74324e: jmp    0x00007f36bc743297
  0.94%  │↗  0x00007f36bc743250: mov    rbp,r8
  2.36%  ││  0x00007f36bc743253: mov    QWORD PTR [rsp+0x60],rbx
  3.56%  ││  0x00007f36bc743258: mov    QWORD PTR [rsp],r9  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::&lt;init&gt;@9 (line 107)
         ││                                                ; - java.util.Optional::of@5 (line 120)
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@4 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.60%  ││  0x00007f36bc74325c: lea    rdx,[r12+r11*8]    ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Objects::requireNonNull@1 (line 220)
         ││                                                ; - java.util.Optional::flatMap@1 (line 289)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@28 (line 54)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.66%  ││  0x00007f36bc743260: mov    rsi,QWORD PTR [rsp+0x10]
  2.61%  ││  0x00007f36bc743265: xchg   ax,ax
  3.28%  ││  0x00007f36bc743267: call   0x00007f36b4c68f00  ; ImmutableOopMap{rbp=Oop [104]=Oop [112]=Oop [16]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  3.56%  ││  0x00007f36bc74326c: mov    r8,rbp
  0.47%  ││  0x00007f36bc74326f: movzx  r11d,BYTE PTR [rbp+0x94]  ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.75%  ││  0x00007f36bc743277: mov    r10,QWORD PTR [r15+0x108]
  2.33%  ││  0x00007f36bc74327e: mov    rbx,QWORD PTR [rsp+0x60]
  3.40%  ││  0x00007f36bc743283: add    rbx,0x1            ; ImmutableOopMap{r8=Oop rbp=Oop [104]=Oop [112]=Oop [16]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@33 (line 234)
  0.86%  ││  0x00007f36bc743287: test   DWORD PTR [r10],eax  ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
         ││                                                ;   {poll}
  1.91%  ││  0x00007f36bc74328a: test   r11d,r11d
         ││  0x00007f36bc74328d: jne    0x00007f36bc74337d  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::flatMap@18 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  3.25%  ││  0x00007f36bc743293: mov    r9,QWORD PTR [rsp]  ;*synchronization entry
         ││                                                ; - java.util.Optional::of@-1 (line 120)
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@4 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.26%  ↘│  0x00007f36bc743297: mov    r10,QWORD PTR [rsp+0x70]
  0.51%   │  0x00007f36bc74329c: mov    r10d,DWORD PTR [r10+0x14]
  2.19%   │  0x00007f36bc7432a0: test   r10d,r10d
          │  0x00007f36bc7432a3: je     0x00007f36bc7433ca  ;*invokestatic lambda$ofNullable$0 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  2.78%   │  0x00007f36bc7432a9: shl    r10,0x3            ;*invokevirtual isPresent {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::flatMap@6 (line 290)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.38%   │  0x00007f36bc7432ad: mov    r11d,DWORD PTR [r10+0xc]
  0.79%   │  0x00007f36bc7432b1: test   r11d,r11d
          │  0x00007f36bc7432b4: je     0x00007f36bc7433f6  ;*invokevirtual getNested {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@1 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  2.29%   │  0x00007f36bc7432ba: lea    r10,[r12+r11*8]    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::isPresent@1 (line 159)
          │                                                ; - java.util.Optional::flatMap@6 (line 290)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  2.85%   │  0x00007f36bc7432be: mov    r10d,DWORD PTR [r10+0xc]  ;*invokestatic ofNullable {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.73%   │  0x00007f36bc7432c2: test   r10d,r10d
          │  0x00007f36bc7432c5: je     0x00007f36bc743422  ;*invokestatic lambda$ofNullable$0 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.90%   │  0x00007f36bc7432cb: shl    r10,0x3            ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::flatMap@1 (line 289)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  2.53%   │  0x00007f36bc7432cf: mov    r11d,DWORD PTR [r10+0xc]  ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  5.55%   │  0x00007f36bc7432d3: test   r11d,r11d
          │  0x00007f36bc7432d6: je     0x00007f36bc74344e  ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::ofNullable@11 (line 133)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  3.13%   │  0x00007f36bc7432dc: mov    r10,QWORD PTR [rsp+0x70]
  0.49%   │  0x00007f36bc7432e1: mov    ebp,DWORD PTR [r10+0x10]  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.invoke.LambdaForm$MH/0x0000000800066c40::invoke@0
          │                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@7 (line 51)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.92%   │  0x00007f36bc7432e5: cmp    ebp,0xffffff80
          │  0x00007f36bc7432e8: jl     0x00007f36bc7433af  ;*invokestatic ofNullable {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  2.31%   │  0x00007f36bc7432ee: cmp    ebp,0x7f
          │  0x00007f36bc7432f1: jg     0x00007f36bc743322  ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::ofNullable@11 (line 133)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  3.23%   │  0x00007f36bc7432f3: add    ebp,0x80           ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@7 (line 51)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.36%   │  0x00007f36bc7432f9: cmp    ebp,0x100
          ╰  0x00007f36bc7432ff: jb     0x00007f36bc743250
             0x00007f36bc743305: mov    esi,0xffffffe4     ;*invokestatic lambda$ofNullable$1 {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$39/0x00000008000fd040::apply@4
                                                           ; - java.util.Optional::flatMap@21 (line 294)
                                                           ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
             0x00007f36bc74330a: mov    QWORD PTR [rsp+0x60],r8
             0x00007f36bc74330f: mov    QWORD PTR [rsp+0x8],rbx
....................................................................................................
 62.73%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 526 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f36bc73c940: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f36bc73c944: movabs r12,0x800000000
            0x00007f36bc73c94e: add    r10,r12
            0x00007f36bc73c951: xor    r12,r12
            0x00007f36bc73c954: cmp    rax,r10
            0x00007f36bc73c957: jne    0x00007f36b4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f36bc73c95d: data16 xchg ax,ax
          [Verified Entry Point]
  1.03%     0x00007f36bc73c960: mov    DWORD PTR [rsp-0x14000],eax
  5.66%     0x00007f36bc73c967: push   rbp
  0.43%     0x00007f36bc73c968: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  2.79%     0x00007f36bc73c96c: mov    QWORD PTR [rsp],rdx
  3.38%     0x00007f36bc73c970: mov    QWORD PTR [rsp+0x8],rsi
  0.47%     0x00007f36bc73c975: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  0.81%     0x00007f36bc73c97b: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  2.12%     0x00007f36bc73c986: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  3.56%     0x00007f36bc73c98d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
  0.38%     0x00007f36bc73c994: and    r11d,ebp
  0.71%     0x00007f36bc73c997: test   r11d,r11d
         ╭  0x00007f36bc73c99a: je     0x00007f36bc73c9ac  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  2.04%  │  0x00007f36bc73c99c: add    rsp,0x30
  3.51%  │  0x00007f36bc73c9a0: pop    rbp
  0.41%  │  0x00007f36bc73c9a1: mov    r10,QWORD PTR [r15+0x108]
  0.58%  │  0x00007f36bc73c9a8: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.03%  │  0x00007f36bc73c9ab: ret    
         ↘  0x00007f36bc73c9ac: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f36bc73c9b3: mov    r10,rbx
            0x00007f36bc73c9b6: add    r10,0x20
            0x00007f36bc73c9ba: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f36bc73c9c1: jae    0x00007f36bc73cc1e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f36bc73c9c7: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 29.92%  <total for region 2>

....[Hottest Regions]...............................................................................
 62.73%         c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 559 (169 bytes) 
 29.92%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 526 (75 bytes) 
  4.13%              kernel  [unknown] (6 bytes) 
  0.26%              kernel  [unknown] (37 bytes) 
  0.21%              kernel  [unknown] (1 bytes) 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (52 bytes) 
  0.13%              kernel  [unknown] (27 bytes) 
  0.11%              kernel  [unknown] (0 bytes) 
  0.09%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (40 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%        libc-2.28.so  __strchr_avx2 (2 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (5 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZNK6Thread12is_VM_threadEv (0 bytes) 
  1.76%  <...other 87 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 62.73%         c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 559 
 29.92%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 526 
  6.17%              kernel  [unknown] 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.09%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.06%        libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.06%        libc-2.28.so  __strchr_avx2 
  0.04%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%           libjvm.so  _ZNK6Thread12is_VM_threadEv 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.04%        libc-2.28.so  _IO_fwrite 
  0.04%           libjvm.so  _ZN13LocationValue8write_onEP20DebugInfoWriteStream 
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.02%           libjvm.so  _ZN7VMError17is_error_reportedEv 
  0.02%           libjvm.so  _ZN2os13PlatformEvent6unparkEv 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.38%  <...other 20 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 92.65%         c2, level 4
  6.17%              kernel
  0.77%           libjvm.so
  0.24%        libc-2.28.so
  0.06%      hsdis-amd64.so
  0.06%         interpreter
  0.04%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 147740 total address lines.
Perf output processed (skipped 7.393 seconds):
 Column 1: cycles (5257 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 560 (169 bytes) 

             0x00007f11ac74252d: test   r11d,r11d
             0x00007f11ac742530: jne    0x00007f11ac742678  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.util.Optional::flatMap@18 (line 294)
                                                           ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
             0x00007f11ac742536: mov    r11d,0x139e8       ;   {metadata(&apos;java/lang/Integer&apos;)}
             0x00007f11ac74253c: movabs r9,0x800000000
             0x00007f11ac742546: add    r9,r11
             0x00007f11ac742549: mov    ebx,0x1
         ╭   0x00007f11ac74254e: jmp    0x00007f11ac742597
  1.05%  │↗  0x00007f11ac742550: mov    rbp,r8
  2.04%  ││  0x00007f11ac742553: mov    QWORD PTR [rsp+0x60],rbx
  3.16%  ││  0x00007f11ac742558: mov    QWORD PTR [rsp],r9  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::&lt;init&gt;@9 (line 107)
         ││                                                ; - java.util.Optional::of@5 (line 120)
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@4 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.74%  ││  0x00007f11ac74255c: lea    rdx,[r12+r11*8]    ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Objects::requireNonNull@1 (line 220)
         ││                                                ; - java.util.Optional::flatMap@1 (line 289)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@28 (line 54)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.24%  ││  0x00007f11ac742560: mov    rsi,QWORD PTR [rsp+0x10]
  1.98%  ││  0x00007f11ac742565: xchg   ax,ax
  2.80%  ││  0x00007f11ac742567: call   0x00007f11a4c68f00  ; ImmutableOopMap{rbp=Oop [104]=Oop [112]=Oop [16]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  2.95%  ││  0x00007f11ac74256c: mov    r8,rbp
  0.61%  ││  0x00007f11ac74256f: movzx  r11d,BYTE PTR [rbp+0x94]  ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.14%  ││  0x00007f11ac742577: mov    r10,QWORD PTR [r15+0x108]
  1.92%  ││  0x00007f11ac74257e: mov    rbx,QWORD PTR [rsp+0x60]
  3.56%  ││  0x00007f11ac742583: add    rbx,0x1            ; ImmutableOopMap{r8=Oop rbp=Oop [104]=Oop [112]=Oop [16]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@33 (line 234)
  1.16%  ││  0x00007f11ac742587: test   DWORD PTR [r10],eax  ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
         ││                                                ;   {poll}
  1.86%  ││  0x00007f11ac74258a: test   r11d,r11d
         ││  0x00007f11ac74258d: jne    0x00007f11ac74267d  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::flatMap@18 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  3.18%  ││  0x00007f11ac742593: mov    r9,QWORD PTR [rsp]  ;*synchronization entry
         ││                                                ; - java.util.Optional::of@-1 (line 120)
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@4 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.59%  ↘│  0x00007f11ac742597: mov    r10,QWORD PTR [rsp+0x70]
  1.12%   │  0x00007f11ac74259c: mov    r10d,DWORD PTR [r10+0x14]
  2.23%   │  0x00007f11ac7425a0: test   r10d,r10d
          │  0x00007f11ac7425a3: je     0x00007f11ac7426ca  ;*invokestatic lambda$ofNullable$0 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  3.06%   │  0x00007f11ac7425a9: shl    r10,0x3            ;*invokevirtual isPresent {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::flatMap@6 (line 290)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.49%   │  0x00007f11ac7425ad: mov    r11d,DWORD PTR [r10+0xc]
  1.10%   │  0x00007f11ac7425b1: test   r11d,r11d
          │  0x00007f11ac7425b4: je     0x00007f11ac7426f6  ;*invokevirtual getNested {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@1 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  2.19%   │  0x00007f11ac7425ba: lea    r10,[r12+r11*8]    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::isPresent@1 (line 159)
          │                                                ; - java.util.Optional::flatMap@6 (line 290)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  3.16%   │  0x00007f11ac7425be: mov    r10d,DWORD PTR [r10+0xc]  ;*invokestatic ofNullable {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.24%   │  0x00007f11ac7425c2: test   r10d,r10d
          │  0x00007f11ac7425c5: je     0x00007f11ac742722  ;*invokestatic lambda$ofNullable$0 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.26%   │  0x00007f11ac7425cb: shl    r10,0x3            ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::flatMap@1 (line 289)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  2.26%   │  0x00007f11ac7425cf: mov    r11d,DWORD PTR [r10+0xc]  ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  5.00%   │  0x00007f11ac7425d3: test   r11d,r11d
          │  0x00007f11ac7425d6: je     0x00007f11ac74274e  ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::ofNullable@11 (line 133)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  3.04%   │  0x00007f11ac7425dc: mov    r10,QWORD PTR [rsp+0x70]
  0.65%   │  0x00007f11ac7425e1: mov    ebp,DWORD PTR [r10+0x10]  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.invoke.LambdaForm$MH/0x0000000800066c40::invoke@0
          │                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@7 (line 51)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.99%   │  0x00007f11ac7425e5: cmp    ebp,0xffffff80
          │  0x00007f11ac7425e8: jl     0x00007f11ac7426af  ;*invokestatic ofNullable {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.92%   │  0x00007f11ac7425ee: cmp    ebp,0x7f
          │  0x00007f11ac7425f1: jg     0x00007f11ac742622  ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::ofNullable@11 (line 133)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  3.18%   │  0x00007f11ac7425f3: add    ebp,0x80           ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@7 (line 51)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.46%   │  0x00007f11ac7425f9: cmp    ebp,0x100
          ╰  0x00007f11ac7425ff: jb     0x00007f11ac742550
             0x00007f11ac742605: mov    esi,0xffffffe4     ;*invokestatic lambda$ofNullable$1 {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$39/0x00000008000fd040::apply@4
                                                           ; - java.util.Optional::flatMap@21 (line 294)
                                                           ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
             0x00007f11ac74260a: mov    QWORD PTR [rsp+0x60],r8
             0x00007f11ac74260f: mov    QWORD PTR [rsp+0x8],rbx
....................................................................................................
 63.31%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 528 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f11ac73ad40: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f11ac73ad44: movabs r12,0x800000000
            0x00007f11ac73ad4e: add    r10,r12
            0x00007f11ac73ad51: xor    r12,r12
            0x00007f11ac73ad54: cmp    rax,r10
            0x00007f11ac73ad57: jne    0x00007f11a4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f11ac73ad5d: data16 xchg ax,ax
          [Verified Entry Point]
  1.35%     0x00007f11ac73ad60: mov    DWORD PTR [rsp-0x14000],eax
  5.19%     0x00007f11ac73ad67: push   rbp
  0.53%     0x00007f11ac73ad68: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  3.06%     0x00007f11ac73ad6c: mov    QWORD PTR [rsp],rdx
  3.25%     0x00007f11ac73ad70: mov    QWORD PTR [rsp+0x8],rsi
  0.68%     0x00007f11ac73ad75: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  1.16%     0x00007f11ac73ad7b: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  1.88%     0x00007f11ac73ad86: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  2.93%     0x00007f11ac73ad8d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
  0.70%     0x00007f11ac73ad94: and    r11d,ebp
  1.12%     0x00007f11ac73ad97: test   r11d,r11d
         ╭  0x00007f11ac73ad9a: je     0x00007f11ac73adac  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  2.26%  │  0x00007f11ac73ad9c: add    rsp,0x30
  2.95%  │  0x00007f11ac73ada0: pop    rbp
  0.61%  │  0x00007f11ac73ada1: mov    r10,QWORD PTR [r15+0x108]
  0.97%  │  0x00007f11ac73ada8: test   DWORD PTR [r10],eax  ;   {poll_return}
  2.15%  │  0x00007f11ac73adab: ret    
         ↘  0x00007f11ac73adac: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f11ac73adb3: mov    r10,rbx
            0x00007f11ac73adb6: add    r10,0x20
            0x00007f11ac73adba: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f11ac73adc1: jae    0x00007f11ac73b01e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f11ac73adc7: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 30.82%  <total for region 2>

....[Hottest Regions]...............................................................................
 63.31%     c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 560 (169 bytes) 
 30.82%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 528 (75 bytes) 
  2.66%          kernel  [unknown] (6 bytes) 
  0.27%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (49 bytes) 
  0.21%          kernel  [unknown] (39 bytes) 
  0.19%          kernel  [unknown] (1 bytes) 
  0.10%          kernel  [unknown] (0 bytes) 
  0.10%          kernel  [unknown] (0 bytes) 
  0.06%          kernel  [unknown] (23 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (30 bytes) 
  0.04%          kernel  [unknown] (30 bytes) 
  0.04%          kernel  [unknown] (1 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (13 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%  hsdis-amd64.so  ckprefix (4 bytes) 
  0.04%       libjvm.so  _ZN13defaultStream5writeEPKcm (0 bytes) 
  1.86%  <...other 96 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 63.31%     c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 560 
 30.82%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 528 
  4.55%          kernel  [unknown] 
  0.27%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%       libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.04%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%    libc-2.28.so  __strchrnul_avx2 
  0.04%    libc-2.28.so  _IO_fwrite 
  0.04%    libc-2.28.so  _IO_vsnprintf 
  0.04%      ld-2.28.so  __tls_get_addr 
  0.04%  hsdis-amd64.so  ckprefix 
  0.02%       libjvm.so  _ZN7VMError17is_error_reportedEv 
  0.02%     c1, level 3  jdk.internal.reflect.ClassFileAssembler::emitConstantPoolNameAndType, version 547 
  0.02%       libjvm.so  _ZN15PerfLongVariant6sampleEv 
  0.02%       libjvm.so  _ZN10BlockBegin16iterate_preorderER13GrowableArrayIbEP12BlockClosure 
  0.02%       libjvm.so  _ZN27SemaphoreGangTaskDispatcher21worker_done_with_taskEv 
  0.02%       libjvm.so  _ZNK8CodeHeap16find_blob_unsafeEPv 
  0.02%       libjvm.so  _ZNK15G1CollectionSet7iterateEP17HeapRegionClosure 
  0.02%       libjvm.so  _ZN7Monitor4lockEv 
  0.02%     c1, level 3  java.util.concurrent.ConcurrentHashMap::addCount, version 41 
  0.61%  <...other 32 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 94.12%     c2, level 4
  4.55%          kernel
  0.88%       libjvm.so
  0.19%    libc-2.28.so
  0.11%  hsdis-amd64.so
  0.06%     c1, level 3
  0.04%      ld-2.28.so
  0.02%    runtime stub
  0.02%       libzip.so
  0.02%     interpreter
....................................................................................................
100.00%  <totals>

PrintAssembly processed: 145412 total address lines.
Perf output processed (skipped 7.209 seconds):
 Column 1: cycles (5212 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 544 (169 bytes) 

             0x00007fa82473e9ad: test   r11d,r11d
             0x00007fa82473e9b0: jne    0x00007fa82473eaf8  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - java.util.Optional::flatMap@18 (line 294)
                                                           ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
             0x00007fa82473e9b6: mov    r11d,0x139e8       ;   {metadata(&apos;java/lang/Integer&apos;)}
             0x00007fa82473e9bc: movabs r9,0x800000000
             0x00007fa82473e9c6: add    r9,r11
             0x00007fa82473e9c9: mov    ebx,0x1
         ╭   0x00007fa82473e9ce: jmp    0x00007fa82473ea17
  1.15%  │↗  0x00007fa82473e9d0: mov    rbp,r8
  2.36%  ││  0x00007fa82473e9d3: mov    QWORD PTR [rsp+0x60],rbx
  3.28%  ││  0x00007fa82473e9d8: mov    QWORD PTR [rsp],r9  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::&lt;init&gt;@9 (line 107)
         ││                                                ; - java.util.Optional::of@5 (line 120)
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@4 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.56%  ││  0x00007fa82473e9dc: lea    rdx,[r12+r11*8]    ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Objects::requireNonNull@1 (line 220)
         ││                                                ; - java.util.Optional::flatMap@1 (line 289)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@28 (line 54)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.98%  ││  0x00007fa82473e9e0: mov    rsi,QWORD PTR [rsp+0x10]
  2.15%  ││  0x00007fa82473e9e5: xchg   ax,ax
  3.09%  ││  0x00007fa82473e9e7: call   0x00007fa81cc68f00  ; ImmutableOopMap{rbp=Oop [104]=Oop [112]=Oop [16]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  3.42%  ││  0x00007fa82473e9ec: mov    r8,rbp
  0.52%  ││  0x00007fa82473e9ef: movzx  r11d,BYTE PTR [rbp+0x94]  ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.09%  ││  0x00007fa82473e9f7: mov    r10,QWORD PTR [r15+0x108]
  1.98%  ││  0x00007fa82473e9fe: mov    rbx,QWORD PTR [rsp+0x60]
  3.36%  ││  0x00007fa82473ea03: add    rbx,0x1            ; ImmutableOopMap{r8=Oop rbp=Oop [104]=Oop [112]=Oop [16]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@33 (line 234)
  0.94%  ││  0x00007fa82473ea07: test   DWORD PTR [r10],eax  ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
         ││                                                ; - java.util.Optional::flatMap@21 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
         ││                                                ;   {poll}
  2.36%  ││  0x00007fa82473ea0a: test   r11d,r11d
         ││  0x00007fa82473ea0d: jne    0x00007fa82473eafd  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.util.Optional::flatMap@18 (line 294)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  3.01%  ││  0x00007fa82473ea13: mov    r9,QWORD PTR [rsp]  ;*synchronization entry
         ││                                                ; - java.util.Optional::of@-1 (line 120)
         ││                                                ; - java.util.Optional::ofNullable@11 (line 133)
         ││                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@4 (line 51)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.77%  ↘│  0x00007fa82473ea17: mov    r10,QWORD PTR [rsp+0x70]
  0.92%   │  0x00007fa82473ea1c: mov    r10d,DWORD PTR [r10+0x14]
  2.28%   │  0x00007fa82473ea20: test   r10d,r10d
          │  0x00007fa82473ea23: je     0x00007fa82473eb4a  ;*invokestatic lambda$ofNullable$0 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  3.07%   │  0x00007fa82473ea29: shl    r10,0x3            ;*invokevirtual isPresent {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::flatMap@6 (line 290)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.42%   │  0x00007fa82473ea2d: mov    r11d,DWORD PTR [r10+0xc]
  1.21%   │  0x00007fa82473ea31: test   r11d,r11d
          │  0x00007fa82473ea34: je     0x00007fa82473eb76  ;*invokevirtual getNested {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@1 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.88%   │  0x00007fa82473ea3a: lea    r10,[r12+r11*8]    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::isPresent@1 (line 159)
          │                                                ; - java.util.Optional::flatMap@6 (line 290)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  3.49%   │  0x00007fa82473ea3e: mov    r10d,DWORD PTR [r10+0xc]  ;*invokestatic ofNullable {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.88%   │  0x00007fa82473ea42: test   r10d,r10d
          │  0x00007fa82473ea45: je     0x00007fa82473eba2  ;*invokestatic lambda$ofNullable$0 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.02%   │  0x00007fa82473ea4b: shl    r10,0x3            ;*invokestatic requireNonNull {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::flatMap@1 (line 289)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  2.67%   │  0x00007fa82473ea4f: mov    r11d,DWORD PTR [r10+0xc]  ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  5.18%   │  0x00007fa82473ea53: test   r11d,r11d
          │  0x00007fa82473ea56: je     0x00007fa82473ebce  ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::ofNullable@11 (line 133)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  2.90%   │  0x00007fa82473ea5c: mov    r10,QWORD PTR [rsp+0x70]
  0.58%   │  0x00007fa82473ea61: mov    ebp,DWORD PTR [r10+0x10]  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.invoke.LambdaForm$MH/0x0000000800066c40::invoke@0
          │                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@7 (line 51)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  1.09%   │  0x00007fa82473ea65: cmp    ebp,0xffffff80
          │  0x00007fa82473ea68: jl     0x00007fa82473eb2f  ;*invokestatic ofNullable {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  2.00%   │  0x00007fa82473ea6e: cmp    ebp,0x7f
          │  0x00007fa82473ea71: jg     0x00007fa82473eaa2  ;*invokestatic of {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.util.Optional::ofNullable@11 (line 133)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::lambda$ofNullable$0@4 (line 52)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$38/0x00000008000fdc40::apply@4
          │                                                ; - java.util.Optional::flatMap@21 (line 294)
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@12 (line 52)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  3.20%   │  0x00007fa82473ea73: add    ebp,0x80           ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@7 (line 51)
          │                                                ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
  0.56%   │  0x00007fa82473ea79: cmp    ebp,0x100
          ╰  0x00007fa82473ea7f: jb     0x00007fa82473e9d0
             0x00007fa82473ea85: mov    esi,0xffffffe4     ;*invokestatic lambda$ofNullable$1 {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.NullSafetyJavaBenchmark$$Lambda$39/0x00000008000fd040::apply@4
                                                           ; - java.util.Optional::flatMap@21 (line 294)
                                                           ; - org.ib.benchmark.NullSafetyJavaBenchmark::ofNullable@20 (line 53)
                                                           ; - org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub@17 (line 232)
             0x00007fa82473ea8a: mov    QWORD PTR [rsp+0x60],r8
             0x00007fa82473ea8f: mov    QWORD PTR [rsp+0x8],rbx
....................................................................................................
 64.35%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 517 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007fa824739e40: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fa824739e44: movabs r12,0x800000000
            0x00007fa824739e4e: add    r10,r12
            0x00007fa824739e51: xor    r12,r12
            0x00007fa824739e54: cmp    rax,r10
            0x00007fa824739e57: jne    0x00007fa81cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007fa824739e5d: data16 xchg ax,ax
          [Verified Entry Point]
  1.65%     0x00007fa824739e60: mov    DWORD PTR [rsp-0x14000],eax
  4.80%     0x00007fa824739e67: push   rbp
  0.69%     0x00007fa824739e68: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  3.57%     0x00007fa824739e6c: mov    QWORD PTR [rsp],rdx
  2.71%     0x00007fa824739e70: mov    QWORD PTR [rsp+0x8],rsi
  0.59%     0x00007fa824739e75: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  1.30%     0x00007fa824739e7b: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  2.00%     0x00007fa824739e86: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  2.80%     0x00007fa824739e8d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
  0.65%     0x00007fa824739e94: and    r11d,ebp
  1.17%     0x00007fa824739e97: test   r11d,r11d
         ╭  0x00007fa824739e9a: je     0x00007fa824739eac  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  2.26%  │  0x00007fa824739e9c: add    rsp,0x30
  3.01%  │  0x00007fa824739ea0: pop    rbp
  0.71%  │  0x00007fa824739ea1: mov    r10,QWORD PTR [r15+0x108]
  0.96%  │  0x00007fa824739ea8: test   DWORD PTR [r10],eax  ;   {poll_return}
  1.88%  │  0x00007fa824739eab: ret    
         ↘  0x00007fa824739eac: mov    rbx,QWORD PTR [r15+0x118]
            0x00007fa824739eb3: mov    r10,rbx
            0x00007fa824739eb6: add    r10,0x20
            0x00007fa824739eba: cmp    r10,QWORD PTR [r15+0x128]
            0x00007fa824739ec1: jae    0x00007fa82473a11e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007fa824739ec7: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 30.76%  <total for region 2>

....[Hottest Regions]...............................................................................
 64.35%         c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 544 (169 bytes) 
 30.76%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 517 (75 bytes) 
  2.51%              kernel  [unknown] (6 bytes) 
  0.17%              kernel  [unknown] (37 bytes) 
  0.15%              kernel  [unknown] (6 bytes) 
  0.12%              kernel  [unknown] (17 bytes) 
  0.12%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.08%         interpreter  method entry point (kind = zerolocals)  (8 bytes) 
  0.04%              kernel  [unknown] (20 bytes) 
  0.04%              kernel  [unknown] (26 bytes) 
  0.04%              kernel  [unknown] (14 bytes) 
  0.04%              kernel  [unknown] (20 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (1 bytes) 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ (8 bytes) 
  0.04%        libc-2.28.so  __strchr_avx2 (31 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.32%  <...other 69 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 64.35%         c2, level 4  org.ib.benchmark.generated.NullSafetyJavaBenchmark_ofNullable_jmhTest::ofNullable_avgt_jmhStub, version 544 
 30.76%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 517 
  4.03%              kernel  [unknown] 
  0.12%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%         interpreter  method entry point (kind = zerolocals)  
  0.06%        libc-2.28.so  __strchr_avx2 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%        libc-2.28.so  vfprintf 
  0.02%           libjvm.so  _ZNK4Type18remove_speculativeEv 
  0.02%           libjvm.so  jio_print 
  0.02%           libjvm.so  _ZN16LinearScanWalker25free_collect_inactive_anyEP8Interval 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%           libjvm.so  _ZN15SignatureStream18next_non_primitiveEi 
  0.02%        libc-2.28.so  __strchrnul_avx2 
  0.02%           libjvm.so  _ZN10LinearScan7add_defEii15IntervalUseKind9BasicType 
  0.02%           libjvm.so  _ZN12outputStream5printEPKcz 
  0.02%           libjvm.so  _ZN11StringTable9do_internE6HandlePtimP6Thread 
  0.02%          ld-2.28.so  _dl_update_slotinfo 
  0.02%           libjvm.so  _ZN6Parker4parkEbl 
  0.02%           libjvm.so  _ZN10LinearScan21eliminate_spill_movesEv 
  0.29%  <...other 15 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.11%         c2, level 4
  4.03%              kernel
  0.48%           libjvm.so
  0.15%        libc-2.28.so
  0.12%         interpreter
  0.04%  libpthread-2.28.so
  0.04%          ld-2.28.so
  0.02%      hsdis-amd64.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyKtBenchmark.elvis
# Parameters: (defaultValue = -1, value = 42)

# Run progress: 28.57% complete, ETA 00:03:12
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.554 ns/op
# Warmup Iteration   2: 4.056 ns/op
# Warmup Iteration   3: 4.358 ns/op
# Warmup Iteration   4: 3.803 ns/op
# Warmup Iteration   5: 3.786 ns/op
Iteration   1: 3.889 ns/op
Iteration   2: 3.892 ns/op
Iteration   3: 3.915 ns/op
Iteration   4: 3.871 ns/op
Iteration   5: 3.912 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 33.33% complete, ETA 00:02:59
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.630 ns/op
# Warmup Iteration   2: 4.175 ns/op
# Warmup Iteration   3: 4.832 ns/op
# Warmup Iteration   4: 4.761 ns/op
# Warmup Iteration   5: 4.302 ns/op
Iteration   1: 4.284 ns/op
Iteration   2: 4.269 ns/op
Iteration   3: 4.334 ns/op
Iteration   4: 4.276 ns/op
Iteration   5: 4.359 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 38.10% complete, ETA 00:02:46
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5.106 ns/op
# Warmup Iteration   2: 4.860 ns/op
# Warmup Iteration   3: 4.768 ns/op
# Warmup Iteration   4: 4.276 ns/op
# Warmup Iteration   5: 4.317 ns/op
Iteration   1: 4.265 ns/op
Iteration   2: 4.228 ns/op
Iteration   3: 4.270 ns/op
Iteration   4: 4.244 ns/op
Iteration   5: 4.304 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyKtBenchmark.elvis":
  4.154 ±(99.9%) 0.205 ns/op [Average]
  (min, avg, max) = (3.871, 4.154, 4.359), stdev = 0.192
  CI (99.9%): [3.949, 4.359] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyKtBenchmark.elvis:·asm":
PrintAssembly processed: 143635 total address lines.
Perf output processed (skipped 7.158 seconds):
 Column 1: cycles (5194 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 540 (129 bytes) 

             0x00007fdfa073fdd0: mov    r10,QWORD PTR [rsp+0x40]
             0x00007fdfa073fdd5: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fdfa0740152
             0x00007fdfa073fddd: test   r11d,r11d
             0x00007fdfa073fde0: jne    0x00007fdfa073ff0e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
             0x00007fdfa073fde6: mov    ebx,0x1
         ╭   0x00007fdfa073fdeb: jmp    0x00007fdfa073fe48
         │   0x00007fdfa073fded: data16 xchg ax,ax
 11.61%  │↗  0x00007fdfa073fdf0: movsxd r11,ebp
  0.08%  ││  0x00007fdfa073fdf3: movabs r9,0x71bd1eb08     ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x000000071bd1eb08})}
         ││  0x00007fdfa073fdfd: mov    r9d,DWORD PTR [r9+r11*4+0x210]
  5.93%  ││  0x00007fdfa073fe05: lea    rdx,[r12+r9*8]     ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@49 (line 74)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  7.30%  ││  0x00007fdfa073fe09: mov    QWORD PTR [rsp],rbx
  0.04%  ││  0x00007fdfa073fe0d: mov    QWORD PTR [rsp+0x40],r10
         ││  0x00007fdfa073fe12: mov    rbp,r8
         ││  0x00007fdfa073fe15: mov    rsi,QWORD PTR [rsp+0x10]
  7.37%  ││  0x00007fdfa073fe1a: nop
         ││  0x00007fdfa073fe1b: call   0x00007fdf98c68f00  ; ImmutableOopMap{rbp=Oop [64]=Oop [72]=Oop [16]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.02%  ││  0x00007fdfa073fe20: mov    r10,QWORD PTR [rsp+0x40]
         ││  0x00007fdfa073fe25: movzx  r8d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
  6.85%  ││  0x00007fdfa073fe2d: mov    r11,QWORD PTR [r15+0x108]
         ││  0x00007fdfa073fe34: mov    rbx,QWORD PTR [rsp]
         ││  0x00007fdfa073fe38: add    rbx,0x1            ; ImmutableOopMap{r10=Oop rbp=Oop [72]=Oop [16]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
         ││  0x00007fdfa073fe3c: test   DWORD PTR [r11],eax  ;   {poll}
  7.24%  ││  0x00007fdfa073fe3f: test   r8d,r8d
         ││  0x00007fdfa073fe42: jne    0x00007fdfa073ff13  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@36 (line 235)
  0.02%  ↘│  0x00007fdfa073fe48: mov    r8,rbp
          │  0x00007fdfa073fe4b: mov    r11d,DWORD PTR [rbp+0x20]
          │                                                ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@1 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │  0x00007fdfa073fe4f: mov    ecx,DWORD PTR [r12+r11*8+0xc]
          │                                                ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Outer::getNested@1 (line 92)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@17 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007fdfa074007a
  6.89%   │  0x00007fdfa073fe54: mov    r11d,DWORD PTR [r12+rcx*8+0xc]
          │                                                ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Nested::getInner@1 (line 96)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@24 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007fdfa07400ae
  0.06%   │  0x00007fdfa073fe59: mov    r9d,DWORD PTR [r12+r11*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Inner::getValue@1 (line 99)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@31 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007fdfa07400de
  0.08%   │  0x00007fdfa073fe5e: mov    ebp,DWORD PTR [r12+r9*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::intValue@1 (line 1123)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@38 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007fdfa0740112
  0.08%   │  0x00007fdfa073fe63: cmp    ebp,0xffffff80
          │  0x00007fdfa073fe66: jl     0x00007fdfa073ff45  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@3 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@49 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  7.95%   │  0x00007fdfa073fe6c: cmp    ebp,0x7f
          │  0x00007fdfa073fe6f: jg     0x00007fdfa073feba  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@10 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@49 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  0.17%   │  0x00007fdfa073fe71: mov    r11d,ebp
          │  0x00007fdfa073fe74: add    r11d,0x80          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@20 (line 1049)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@49 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │  0x00007fdfa073fe7b: cmp    r11d,0x100
          ╰  0x00007fdfa073fe82: jb     0x00007fdfa073fdf0
             0x00007fdfa073fe88: mov    esi,0xffffffe4
....................................................................................................
 61.69%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 501 (68 bytes) 

            #           [sp+0x40]  (sp of caller)
            0x00007fdfa0738dc0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fdfa0738dc4: movabs r12,0x800000000
            0x00007fdfa0738dce: add    r10,r12
            0x00007fdfa0738dd1: xor    r12,r12
            0x00007fdfa0738dd4: cmp    rax,r10
            0x00007fdfa0738dd7: jne    0x00007fdf98c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fdfa0738ddd: data16 xchg ax,ax
          [Verified Entry Point]
            0x00007fdfa0738de0: mov    DWORD PTR [rsp-0x14000],eax
  6.08%     0x00007fdfa0738de7: push   rbp
            0x00007fdfa0738de8: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  7.41%     0x00007fdfa0738dec: mov    QWORD PTR [rsp],rdx
  0.02%     0x00007fdfa0738df0: mov    QWORD PTR [rsp+0x8],rsi
            0x00007fdfa0738df5: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
            0x00007fdfa0738dfb: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  6.97%     0x00007fdfa0738e06: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
            0x00007fdfa0738e0d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
            0x00007fdfa0738e14: and    r11d,ebp
            0x00007fdfa0738e17: test   r11d,r11d
         ╭  0x00007fdfa0738e1a: je     0x00007fdfa0738e2c  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  6.37%  │  0x00007fdfa0738e1c: add    rsp,0x30
  0.02%  │  0x00007fdfa0738e20: pop    rbp
         │  0x00007fdfa0738e21: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007fdfa0738e28: test   DWORD PTR [r10],eax  ;   {poll_return}
  7.05%  │  0x00007fdfa0738e2b: ret    
         ↘  0x00007fdfa0738e2c: mov    rbx,QWORD PTR [r15+0x118]
            0x00007fdfa0738e33: mov    r10,rbx
            0x00007fdfa0738e36: add    r10,0x20
            0x00007fdfa0738e3a: cmp    r10,QWORD PTR [r15+0x128]
            0x00007fdfa0738e41: jae    0x00007fdfa073909e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007fdfa0738e47: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 33.92%  <total for region 2>

....[Hottest Regions]...............................................................................
 61.69%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 540 (129 bytes) 
 33.92%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 501 (68 bytes) 
  2.10%              kernel  [unknown] (6 bytes) 
  0.23%              kernel  [unknown] (39 bytes) 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (32 bytes) 
  0.12%              kernel  [unknown] (1 bytes) 
  0.10%              kernel  [unknown] (37 bytes) 
  0.10%              kernel  [unknown] (6 bytes) 
  0.08%              kernel  [unknown] (17 bytes) 
  0.06%              kernel  [unknown] (24 bytes) 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (30 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (5 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (26 bytes) 
  0.04%        libc-2.28.so  _IO_default_xsputn (10 bytes) 
  0.04%  libpthread-2.28.so  __libc_write (32 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.08%  <...other 56 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 61.69%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 540 
 33.92%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 501 
  3.50%              kernel  [unknown] 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.04%        libc-2.28.so  _IO_fwrite 
  0.04%           libjvm.so  _ZN7nmethod21print_code_comment_onEP12outputStreamiPhS2_ 
  0.04%  libpthread-2.28.so  __libc_write 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.02%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%           libjvm.so  _ZN10BlockBeginC2Ei 
  0.02%           libjvm.so  _ZN12outputStream5printEPKcz 
  0.02%           libjvm.so  SpinPause 
  0.02%           libjvm.so  _ZN13PhiSimplifier8block_doEP10BlockBegin 
  0.02%           libjvm.so  _ZN10LinearScan23compute_local_live_setsEv 
  0.02%           libjvm.so  _ZN16NullCheckVisitor15do_ArithmeticOpEP12ArithmeticOp 
  0.19%  <...other 10 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.61%         c2, level 4
  3.50%              kernel
  0.58%           libjvm.so
  0.17%        libc-2.28.so
  0.06%  libpthread-2.28.so
  0.04%      hsdis-amd64.so
  0.02%         interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 142042 total address lines.
Perf output processed (skipped 7.067 seconds):
 Column 1: cycles (5222 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 527 (139 bytes) 

             0x00007ff33473d9d0: mov    r10,QWORD PTR [rsp+0x40]
             0x00007ff33473d9d5: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007ff33473dd52
             0x00007ff33473d9dd: test   r11d,r11d
             0x00007ff33473d9e0: jne    0x00007ff33473db0e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
             0x00007ff33473d9e6: mov    ebx,0x1
         ╭   0x00007ff33473d9eb: jmp    0x00007ff33473da48
         │   0x00007ff33473d9ed: data16 xchg ax,ax
  9.67%  │↗  0x00007ff33473d9f0: movsxd r11,ebp
  0.08%  ││  0x00007ff33473d9f3: movabs r9,0x71bd1eb08     ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x000000071bd1eb08})}
         ││  0x00007ff33473d9fd: mov    r9d,DWORD PTR [r9+r11*4+0x210]
  6.15%  ││  0x00007ff33473da05: lea    rdx,[r12+r9*8]     ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@49 (line 74)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  6.86%  ││  0x00007ff33473da09: mov    QWORD PTR [rsp],rbx
  0.02%  ││  0x00007ff33473da0d: mov    QWORD PTR [rsp+0x40],r10
         ││  0x00007ff33473da12: mov    rbp,r8
         ││  0x00007ff33473da15: mov    rsi,QWORD PTR [rsp+0x10]
  7.09%  ││  0x00007ff33473da1a: nop
  0.02%  ││  0x00007ff33473da1b: call   0x00007ff32cc68f00  ; ImmutableOopMap{rbp=Oop [64]=Oop [72]=Oop [16]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.02%  ││  0x00007ff33473da20: mov    r10,QWORD PTR [rsp+0x40]
         ││  0x00007ff33473da25: movzx  r8d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
  7.53%  ││  0x00007ff33473da2d: mov    r11,QWORD PTR [r15+0x108]
  0.08%  ││  0x00007ff33473da34: mov    rbx,QWORD PTR [rsp]
         ││  0x00007ff33473da38: add    rbx,0x1            ; ImmutableOopMap{r10=Oop rbp=Oop [72]=Oop [16]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
         ││  0x00007ff33473da3c: test   DWORD PTR [r11],eax  ;   {poll}
  7.33%  ││  0x00007ff33473da3f: test   r8d,r8d
         ││  0x00007ff33473da42: jne    0x00007ff33473db13  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@36 (line 235)
  0.02%  ↘│  0x00007ff33473da48: mov    r8,rbp
          │  0x00007ff33473da4b: mov    r11d,DWORD PTR [rbp+0x20]
          │                                                ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@1 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │  0x00007ff33473da4f: mov    ecx,DWORD PTR [r12+r11*8+0xc]
          │                                                ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Outer::getNested@1 (line 92)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@17 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007ff33473dc7a
  7.35%   │  0x00007ff33473da54: mov    r11d,DWORD PTR [r12+rcx*8+0xc]
          │                                                ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Nested::getInner@1 (line 96)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@24 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007ff33473dcae
  0.06%   │  0x00007ff33473da59: mov    r9d,DWORD PTR [r12+r11*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Inner::getValue@1 (line 99)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@31 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007ff33473dcde
  0.08%   │  0x00007ff33473da5e: mov    ebp,DWORD PTR [r12+r9*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::intValue@1 (line 1123)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@38 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007ff33473dd12
  0.34%   │  0x00007ff33473da63: cmp    ebp,0xffffff80
          │  0x00007ff33473da66: jl     0x00007ff33473db45  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@3 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@49 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  6.68%   │  0x00007ff33473da6c: cmp    ebp,0x7f
          │  0x00007ff33473da6f: jg     0x00007ff33473daba  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@10 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@49 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  0.17%   │  0x00007ff33473da71: mov    r11d,ebp
  0.02%   │  0x00007ff33473da74: add    r11d,0x80          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@20 (line 1049)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@49 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  0.02%   │  0x00007ff33473da7b: cmp    r11d,0x100
          ╰  0x00007ff33473da82: jb     0x00007ff33473d9f0
             0x00007ff33473da88: mov    esi,0xffffffe4
             0x00007ff33473da8d: mov    rbp,r10
             0x00007ff33473da90: rex.W push QWORD PTR [rsp+0x48]
             0x00007ff33473da95: rex.W pop QWORD PTR [rsp+0x40]
             0x00007ff33473da9a: rex.W push QWORD PTR [rsp+0x10]
             0x00007ff33473da9f: rex.W pop QWORD PTR [rsp+0x48]
....................................................................................................
 59.57%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 492 (68 bytes) 

            #           [sp+0x40]  (sp of caller)
            0x00007ff334738140: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007ff334738144: movabs r12,0x800000000
            0x00007ff33473814e: add    r10,r12
            0x00007ff334738151: xor    r12,r12
            0x00007ff334738154: cmp    rax,r10
            0x00007ff334738157: jne    0x00007ff32cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007ff33473815d: data16 xchg ax,ax
          [Verified Entry Point]
            0x00007ff334738160: mov    DWORD PTR [rsp-0x14000],eax
  7.12%     0x00007ff334738167: push   rbp
  0.02%     0x00007ff334738168: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  6.72%     0x00007ff33473816c: mov    QWORD PTR [rsp],rdx
            0x00007ff334738170: mov    QWORD PTR [rsp+0x8],rsi
            0x00007ff334738175: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
            0x00007ff33473817b: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  6.89%     0x00007ff334738186: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  0.02%     0x00007ff33473818d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
            0x00007ff334738194: and    r11d,ebp
  0.02%     0x00007ff334738197: test   r11d,r11d
         ╭  0x00007ff33473819a: je     0x00007ff3347381ac  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  7.10%  │  0x00007ff33473819c: add    rsp,0x30
  0.04%  │  0x00007ff3347381a0: pop    rbp
         │  0x00007ff3347381a1: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007ff3347381a8: test   DWORD PTR [r10],eax  ;   {poll_return}
  7.39%  │  0x00007ff3347381ab: ret    
         ↘  0x00007ff3347381ac: mov    rbx,QWORD PTR [r15+0x118]
            0x00007ff3347381b3: mov    r10,rbx
            0x00007ff3347381b6: add    r10,0x20
            0x00007ff3347381ba: cmp    r10,QWORD PTR [r15+0x128]
            0x00007ff3347381c1: jae    0x00007ff33473841e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007ff3347381c7: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 35.33%  <total for region 2>

....[Hottest Regions]...............................................................................
 59.57%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 527 (139 bytes) 
 35.33%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 492 (68 bytes) 
  1.76%              kernel  [unknown] (6 bytes) 
  0.21%              kernel  [unknown] (30 bytes) 
  0.21%              kernel  [unknown] (0 bytes) 
  0.11%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (21 bytes) 
  0.10%              kernel  [unknown] (29 bytes) 
  0.08%              kernel  [unknown] (40 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%  libpthread-2.28.so  __libc_write (16 bytes) 
  0.06%          ld-2.28.so  __tls_get_addr (21 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (14 bytes) 
  0.04%              kernel  [unknown] (6 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (28 bytes) 
  0.04%              kernel  [unknown] (23 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  2.11%  <...other 102 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 59.57%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 527 
 35.33%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 492 
  3.77%              kernel  [unknown] 
  0.11%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%  libpthread-2.28.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.06%           libjvm.so  _ZNK13WatcherThread5sleepEv 
  0.06%        libc-2.28.so  _IO_fwrite 
  0.06%  libpthread-2.28.so  __libc_write 
  0.06%          ld-2.28.so  __tls_get_addr 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.04%        libc-2.28.so  syscall 
  0.04%      hsdis-amd64.so  OP_G 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%           libjvm.so  _ZN7Monitor5IWaitEP6Threadl 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.04%        libc-2.28.so  __clock_gettime 
  0.02%           libjvm.so  _ZN4GotoC2EP10BlockBeginb 
  0.02%           libjvm.so  _ZN7VMError17is_error_reportedEv 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%      hsdis-amd64.so  putop 
  0.56%  <...other 29 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 94.91%         c2, level 4
  3.77%              kernel
  0.65%           libjvm.so
  0.27%        libc-2.28.so
  0.17%  libpthread-2.28.so
  0.11%      hsdis-amd64.so
  0.06%         interpreter
  0.06%          ld-2.28.so
....................................................................................................
100.00%  <totals>

PrintAssembly processed: 140699 total address lines.
Perf output processed (skipped 7.141 seconds):
 Column 1: cycles (5259 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 525 (129 bytes) 

             0x00007f42600ebbd0: mov    r10,QWORD PTR [rsp+0x40]
             0x00007f42600ebbd5: movzx  r11d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f42600ebf52
             0x00007f42600ebbdd: test   r11d,r11d
             0x00007f42600ebbe0: jne    0x00007f42600ebd0e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
             0x00007f42600ebbe6: mov    ebx,0x1
         ╭   0x00007f42600ebbeb: jmp    0x00007f42600ebc48
         │   0x00007f42600ebbed: data16 xchg ax,ax
 10.25%  │↗  0x00007f42600ebbf0: movsxd r11,ebp
  0.08%  ││  0x00007f42600ebbf3: movabs r9,0x71bd1eb08     ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x000000071bd1eb08})}
         ││  0x00007f42600ebbfd: mov    r9d,DWORD PTR [r9+r11*4+0x210]
  5.38%  ││  0x00007f42600ebc05: lea    rdx,[r12+r9*8]     ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@49 (line 74)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  7.23%  ││  0x00007f42600ebc09: mov    QWORD PTR [rsp],rbx
  0.02%  ││  0x00007f42600ebc0d: mov    QWORD PTR [rsp+0x40],r10
         ││  0x00007f42600ebc12: mov    rbp,r8
         ││  0x00007f42600ebc15: mov    rsi,QWORD PTR [rsp+0x10]
  6.81%  ││  0x00007f42600ebc1a: nop
         ││  0x00007f42600ebc1b: call   0x00007f4258617f00  ; ImmutableOopMap{rbp=Oop [64]=Oop [72]=Oop [16]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.02%  ││  0x00007f42600ebc20: mov    r10,QWORD PTR [rsp+0x40]
         ││  0x00007f42600ebc25: movzx  r8d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
  7.38%  ││  0x00007f42600ebc2d: mov    r11,QWORD PTR [r15+0x108]
         ││  0x00007f42600ebc34: mov    rbx,QWORD PTR [rsp]
         ││  0x00007f42600ebc38: add    rbx,0x1            ; ImmutableOopMap{r10=Oop rbp=Oop [72]=Oop [16]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@33 (line 234)
         ││  0x00007f42600ebc3c: test   DWORD PTR [r11],eax  ;   {poll}
  7.02%  ││  0x00007f42600ebc3f: test   r8d,r8d
         ││  0x00007f42600ebc42: jne    0x00007f42600ebd13  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@36 (line 235)
  0.02%  ↘│  0x00007f42600ebc48: mov    r8,rbp
          │  0x00007f42600ebc4b: mov    r11d,DWORD PTR [rbp+0x20]
          │                                                ;*getfield outer {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@1 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  0.02%   │  0x00007f42600ebc4f: mov    ecx,DWORD PTR [r12+r11*8+0xc]
          │                                                ;*getfield nested {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Outer::getNested@1 (line 92)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@17 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f42600ebe7a
  6.98%   │  0x00007f42600ebc54: mov    r11d,DWORD PTR [r12+rcx*8+0xc]
          │                                                ;*getfield inner {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Nested::getInner@1 (line 96)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@24 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f42600ebeae
          │  0x00007f42600ebc59: mov    r9d,DWORD PTR [r12+r11*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark$Inner::getValue@1 (line 99)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@31 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f42600ebede
  0.11%   │  0x00007f42600ebc5e: mov    ebp,DWORD PTR [r12+r9*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::intValue@1 (line 1123)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@38 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f42600ebf12
  0.15%   │  0x00007f42600ebc63: cmp    ebp,0xffffff80
          │  0x00007f42600ebc66: jl     0x00007f42600ebd45  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@3 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@49 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  6.73%   │  0x00007f42600ebc6c: cmp    ebp,0x7f
          │  0x00007f42600ebc6f: jg     0x00007f42600ebcba  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@10 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@49 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
  0.04%   │  0x00007f42600ebc71: mov    r11d,ebp
          │  0x00007f42600ebc74: add    r11d,0x80          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@20 (line 1049)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::elvis@49 (line 74)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub@17 (line 232)
          │  0x00007f42600ebc7b: cmp    r11d,0x100
          ╰  0x00007f42600ebc82: jb     0x00007f42600ebbf0
             0x00007f42600ebc88: mov    esi,0xffffffe4
....................................................................................................
 58.22%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 491 (68 bytes) 

            #           [sp+0x40]  (sp of caller)
            0x00007f42600e7440: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f42600e7444: movabs r12,0x800000000
            0x00007f42600e744e: add    r10,r12
            0x00007f42600e7451: xor    r12,r12
            0x00007f42600e7454: cmp    rax,r10
            0x00007f42600e7457: jne    0x00007f4258617c80  ;   {runtime_call ic_miss_stub}
            0x00007f42600e745d: data16 xchg ax,ax
          [Verified Entry Point]
            0x00007f42600e7460: mov    DWORD PTR [rsp-0x14000],eax
  7.36%     0x00007f42600e7467: push   rbp
            0x00007f42600e7468: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  7.47%     0x00007f42600e746c: mov    QWORD PTR [rsp],rdx
            0x00007f42600e7470: mov    QWORD PTR [rsp+0x8],rsi
            0x00007f42600e7475: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
            0x00007f42600e747b: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  6.75%     0x00007f42600e7486: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  0.06%     0x00007f42600e748d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
            0x00007f42600e7494: and    r11d,ebp
            0x00007f42600e7497: test   r11d,r11d
         ╭  0x00007f42600e749a: je     0x00007f42600e74ac  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  7.47%  │  0x00007f42600e749c: add    rsp,0x30
  0.02%  │  0x00007f42600e74a0: pop    rbp
         │  0x00007f42600e74a1: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007f42600e74a8: test   DWORD PTR [r10],eax  ;   {poll_return}
  7.04%  │  0x00007f42600e74ab: ret    
         ↘  0x00007f42600e74ac: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f42600e74b3: mov    r10,rbx
            0x00007f42600e74b6: add    r10,0x20
            0x00007f42600e74ba: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f42600e74c1: jae    0x00007f42600e771e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f42600e74c7: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 36.17%  <total for region 2>

....[Hottest Regions]...............................................................................
 58.22%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 525 (129 bytes) 
 36.17%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 491 (68 bytes) 
  2.85%              kernel  [unknown] (6 bytes) 
  0.23%              kernel  [unknown] (37 bytes) 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (47 bytes) 
  0.13%              kernel  [unknown] (1 bytes) 
  0.08%              kernel  [unknown] (59 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (13 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (29 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm (25 bytes) 
  0.04%        libc-2.28.so  _IO_fwrite (0 bytes) 
  0.04%        libc-2.28.so  _IO_str_init_static_internal (30 bytes) 
  1.60%  <...other 83 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 58.22%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_elvis_jmhTest::elvis_avgt_jmhStub, version 525 
 36.17%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 491 
  4.43%              kernel  [unknown] 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%        libc-2.28.so  _IO_fwrite 
  0.06%        libc-2.28.so  __stpcpy_sse2_unaligned 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%        libc-2.28.so  _IO_str_init_static_internal 
  0.04%           libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%        libc-2.28.so  __memmove_avx_unaligned_erms 
  0.02%           libjvm.so  _ZN8ciMethod20log_nmethod_identityEP9xmlStream 
  0.02%         interpreter  fast_iload  224 fast_iload  
  0.02%         interpreter  invoke return entry points  
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%        libc-2.28.so  _int_malloc 
  0.02%           libjvm.so  _ZN11CodeSection8relocateEPhRK16RelocationHolderi 
  0.02%           libjvm.so  _ZN10BlockBeginC2Ei 
  0.49%  <...other 26 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.39%         c2, level 4
  4.43%              kernel
  0.61%           libjvm.so
  0.34%        libc-2.28.so
  0.11%         interpreter
  0.06%      hsdis-amd64.so
  0.02%  libpthread-2.28.so
  0.02%      perf-20686.map
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyKtBenchmark.lateinit
# Parameters: (defaultValue = -1, value = 42)

# Run progress: 42.86% complete, ETA 00:02:33
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.283 ns/op
# Warmup Iteration   2: 2.745 ns/op
# Warmup Iteration   3: 3.203 ns/op
# Warmup Iteration   4: 2.728 ns/op
# Warmup Iteration   5: 2.727 ns/op
Iteration   1: 2.748 ns/op
Iteration   2: 2.715 ns/op
Iteration   3: 2.729 ns/op
Iteration   4: 2.747 ns/op
Iteration   5: 2.788 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 47.62% complete, ETA 00:02:20
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.380 ns/op
# Warmup Iteration   2: 3.290 ns/op
# Warmup Iteration   3: 3.236 ns/op
# Warmup Iteration   4: 2.743 ns/op
# Warmup Iteration   5: 2.750 ns/op
Iteration   1: 2.772 ns/op
Iteration   2: 2.758 ns/op
Iteration   3: 2.736 ns/op
Iteration   4: 2.749 ns/op
Iteration   5: 2.775 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 52.38% complete, ETA 00:02:07
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.395 ns/op
# Warmup Iteration   2: 2.842 ns/op
# Warmup Iteration   3: 3.325 ns/op
# Warmup Iteration   4: 2.813 ns/op
# Warmup Iteration   5: 3.082 ns/op
Iteration   1: 3.123 ns/op
Iteration   2: 3.076 ns/op
Iteration   3: 3.068 ns/op
Iteration   4: 3.072 ns/op
Iteration   5: 2.800 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyKtBenchmark.lateinit":
  2.844 ±(99.9%) 0.163 ns/op [Average]
  (min, avg, max) = (2.715, 2.844, 3.123), stdev = 0.152
  CI (99.9%): [2.681, 3.007] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyKtBenchmark.lateinit:·asm":
PrintAssembly processed: 143306 total address lines.
Perf output processed (skipped 7.218 seconds):
 Column 1: cycles (5237 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 537 (60 bytes) 

             0x00007fccb473d031: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fccb473d132
             0x00007fccb473d039: mov    ebp,0x1
             0x00007fccb473d03e: test   r10d,r10d
         ╭   0x00007fccb473d041: jne    0x00007fccb473d094  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
         │   0x00007fccb473d043: nop    WORD PTR [rax+rax*1+0x0]
         │   0x00007fccb473d04c: data16 data16 xchg ax,ax  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@36 (line 235)
  4.83%  │↗  0x00007fccb473d050: mov    r10,QWORD PTR [rsp+0x50]
         ││  0x00007fccb473d055: mov    r10d,DWORD PTR [r10+0x18]
         ││                                                ;*getfield lateInitString {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@1 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
  5.06%  ││  0x00007fccb473d059: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@1 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fccb473d0f2
  0.27%  ││  0x00007fccb473d05e: mov    edx,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@4 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fccb473d0e6
 11.88%  ││  0x00007fccb473d063: movsx  ecx,BYTE PTR [r12+r10*8+0x14]
         ││                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::coder@7 (line 3258)
         ││                                                ; - java.lang.String::length@6 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││  0x00007fccb473d069: sar    edx,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@9 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
 13.04%  ││  0x00007fccb473d06b: mov    rsi,QWORD PTR [rsp]
  0.02%  ││  0x00007fccb473d06f: call   0x00007fccacc68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.21%  ││  0x00007fccb473d074: mov    r10,QWORD PTR [rsp+0x40]
  5.52%  ││  0x00007fccb473d079: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
  4.49%  ││  0x00007fccb473d081: mov    r11,QWORD PTR [r15+0x108]
  0.02%  ││  0x00007fccb473d088: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
  5.02%  ││  0x00007fccb473d08c: test   DWORD PTR [r11],eax  ;   {poll}
         ││  0x00007fccb473d08f: test   r10d,r10d
         │╰  0x00007fccb473d092: je     0x00007fccb473d050  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@36 (line 235)
         ↘   0x00007fccb473d094: movabs r10,0x7fcccb17ea00
             0x00007fccb473d09e: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@37 (line 235)
             0x00007fccb473d0a1: mov    r10,QWORD PTR [rsp+0x48]
             0x00007fccb473d0a6: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 50.35%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 501 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fccb47388a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fccb47388a4: movabs r12,0x800000000
            0x00007fccb47388ae: add    r10,r12
            0x00007fccb47388b1: xor    r12,r12
            0x00007fccb47388b4: cmp    rax,r10
            0x00007fccb47388b7: jne    0x00007fccacc68c80  ;   {runtime_call ic_miss_stub}
            0x00007fccb47388bd: data16 xchg ax,ax
          [Verified Entry Point]
  4.87%     0x00007fccb47388c0: mov    DWORD PTR [rsp-0x14000],eax
  5.02%     0x00007fccb47388c7: push   rbp
  4.91%     0x00007fccb47388c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  5.35%     0x00007fccb47388cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
            0x00007fccb47388d3: mov    r8d,edx
  4.53%     0x00007fccb47388d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
            0x00007fccb47388dd: mov    r9d,edx
  5.16%     0x00007fccb47388e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.02%     0x00007fccb47388e3: cmp    r9d,r8d
         ╭  0x00007fccb47388e6: je     0x00007fccb47388f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.58%  │  0x00007fccb47388e8: add    rsp,0x20
         │  0x00007fccb47388ec: pop    rbp
  4.93%  │  0x00007fccb47388ed: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007fccb47388f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  5.19%  │  0x00007fccb47388f7: ret    
         ↘  0x00007fccb47388f8: mov    rbp,rsi
            0x00007fccb47388fb: mov    DWORD PTR [rsp],edx
            0x00007fccb47388fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fccb4738903: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fccb4738908: mov    esi,0xffffff4d
            0x00007fccb473890d: xchg   ax,ax
            0x00007fccb473890f: call   0x00007fccacc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 44.55%  <total for region 2>

....[Hottest Regions]...............................................................................
 50.35%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 537 (60 bytes) 
 44.55%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 501 (55 bytes) 
  1.97%              kernel  [unknown] (6 bytes) 
  0.23%              kernel  [unknown] (1 bytes) 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (52 bytes) 
  0.11%              kernel  [unknown] (28 bytes) 
  0.11%              kernel  [unknown] (47 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (30 bytes) 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (7 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (27 bytes) 
  0.04%              kernel  [unknown] (6 bytes) 
  0.04%              kernel  [unknown] (15 bytes) 
  0.04%              kernel  [unknown] (17 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (1 bytes) 
  0.04%           libjvm.so  _ZN12stringStream5writeEPKcm (20 bytes) 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ (8 bytes) 
  1.91%  <...other 100 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 50.35%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 537 
 44.55%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 501 
  3.72%              kernel  [unknown] 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%        libc-2.28.so  vfprintf 
  0.06%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%           libjvm.so  _ZN2os13PlatformEvent4parkEl 
  0.04%           libjvm.so  _ZN12stringStream5writeEPKcm 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%           libjvm.so  _Z23resource_allocate_bytesmN17AllocFailStrategy13AllocFailEnumE 
  0.02%         c1, level 3  java.lang.Class::getPackageName, version 436 
  0.02%         interpreter  iconst_3  6 iconst_3  
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%  libpthread-2.28.so  __pthread_mutex_lock 
  0.02%           libjvm.so  _ZN24DebugInformationRecorder14describe_scopeEiRK12methodHandleP8ciMethodibbbbP10DebugTokenS6_S6_ 
  0.02%           libjvm.so  _ZN6Events3logEP6ThreadPKcz 
  0.02%           libjvm.so  _ZN16UseCountComputer5visitEPP11Instruction 
  0.02%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.02%        libc-2.28.so  _IO_fwrite 
  0.67%  <...other 35 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.90%         c2, level 4
  3.72%              kernel
  0.90%           libjvm.so
  0.27%        libc-2.28.so
  0.08%  libpthread-2.28.so
  0.06%         interpreter
  0.04%      hsdis-amd64.so
  0.02%         c1, level 3
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 140280 total address lines.
Perf output processed (skipped 7.111 seconds):
 Column 1: cycles (5174 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 527 (63 bytes) 

             0x00007f992c73d2b1: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f992c73d3b2
             0x00007f992c73d2b9: mov    ebp,0x1
             0x00007f992c73d2be: test   r10d,r10d
         ╭   0x00007f992c73d2c1: jne    0x00007f992c73d314  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
         │   0x00007f992c73d2c3: nop    WORD PTR [rax+rax*1+0x0]
         │   0x00007f992c73d2cc: data16 data16 xchg ax,ax  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@36 (line 235)
  4.97%  │↗  0x00007f992c73d2d0: mov    r10,QWORD PTR [rsp+0x50]
         ││  0x00007f992c73d2d5: mov    r10d,DWORD PTR [r10+0x18]
         ││                                                ;*getfield lateInitString {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@1 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
  5.06%  ││  0x00007f992c73d2d9: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@1 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f992c73d372
  0.31%  ││  0x00007f992c73d2de: mov    edx,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@4 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f992c73d366
 11.62%  ││  0x00007f992c73d2e3: movsx  ecx,BYTE PTR [r12+r10*8+0x14]
         ││                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::coder@7 (line 3258)
         ││                                                ; - java.lang.String::length@6 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││  0x00007f992c73d2e9: sar    edx,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@9 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
 14.40%  ││  0x00007f992c73d2eb: mov    rsi,QWORD PTR [rsp]
         ││  0x00007f992c73d2ef: call   0x00007f9924c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.12%  ││  0x00007f992c73d2f4: mov    r10,QWORD PTR [rsp+0x40]
  5.32%  ││  0x00007f992c73d2f9: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
  5.26%  ││  0x00007f992c73d301: mov    r11,QWORD PTR [r15+0x108]
  0.02%  ││  0x00007f992c73d308: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
  4.97%  ││  0x00007f992c73d30c: test   DWORD PTR [r11],eax  ;   {poll}
  0.06%  ││  0x00007f992c73d30f: test   r10d,r10d
         │╰  0x00007f992c73d312: je     0x00007f992c73d2d0  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@36 (line 235)
         ↘   0x00007f992c73d314: movabs r10,0x7f9942f7da00
             0x00007f992c73d31e: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@37 (line 235)
             0x00007f992c73d321: mov    r10,QWORD PTR [rsp+0x48]
             0x00007f992c73d326: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@52 (line 237)
             0x00007f992c73d32a: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@40 (line 235)
....................................................................................................
 52.09%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 493 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f992c739420: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f992c739424: movabs r12,0x800000000
            0x00007f992c73942e: add    r10,r12
            0x00007f992c739431: xor    r12,r12
            0x00007f992c739434: cmp    rax,r10
            0x00007f992c739437: jne    0x00007f9924c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f992c73943d: data16 xchg ax,ax
          [Verified Entry Point]
  4.29%     0x00007f992c739440: mov    DWORD PTR [rsp-0x14000],eax
  5.14%     0x00007f992c739447: push   rbp
  4.68%     0x00007f992c739448: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.85%     0x00007f992c73944c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
            0x00007f992c739453: mov    r8d,edx
  5.08%     0x00007f992c739456: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
            0x00007f992c73945d: mov    r9d,edx
  4.97%     0x00007f992c739460: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
            0x00007f992c739463: cmp    r9d,r8d
         ╭  0x00007f992c739466: je     0x00007f992c739478  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.93%  │  0x00007f992c739468: add    rsp,0x20
         │  0x00007f992c73946c: pop    rbp
  5.51%  │  0x00007f992c73946d: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007f992c739474: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.33%  │  0x00007f992c739477: ret    
         ↘  0x00007f992c739478: mov    rbp,rsi
            0x00007f992c73947b: mov    DWORD PTR [rsp],edx
            0x00007f992c73947e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f992c739483: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f992c739488: mov    esi,0xffffff4d
            0x00007f992c73948d: xchg   ax,ax
            0x00007f992c73948f: call   0x00007f9924c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 43.78%  <total for region 2>

....[Hottest Regions]...............................................................................
 52.09%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 527 (63 bytes) 
 43.78%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 493 (55 bytes) 
  1.68%              kernel  [unknown] (6 bytes) 
  0.21%              kernel  [unknown] (30 bytes) 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.10%           libjvm.so  _ZN10fileStream5writeEPKcm (22 bytes) 
  0.06%              kernel  [unknown] (31 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ (16 bytes) 
  0.06%  libpthread-2.28.so  __libc_write (12 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ (12 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.39%  <...other 72 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 52.09%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 527 
 43.78%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 493 
  3.02%              kernel  [unknown] 
  0.19%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.10%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.10%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%  libpthread-2.28.so  __libc_write 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%        libc-2.28.so  __strchr_avx2 
  0.04%        libc-2.28.so  vfprintf 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.02%           libjvm.so  _ZN12LIRGenerator12do_NullCheckEP9NullCheck 
  0.02%           libjvm.so  _ZNK19ImmutableOopMapPair8get_fromEPK18ImmutableOopMapSet 
  0.02%        libc-2.28.so  _IO_file_sync@@GLIBC_2.2.5 
  0.02%         interpreter  invoke return entry points  
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%         interpreter  invokespecial  183 invokespecial  
  0.02%           libjvm.so  _ZN15SignatureStream18next_non_primitiveEi 
  0.02%      hsdis-amd64.so  putop 
  0.02%         c1, level 3  jdk.internal.ref.CleanerImpl::getCleanerImpl, version 417 
  0.35%  <...other 18 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 95.86%         c2, level 4
  3.02%              kernel
  0.66%           libjvm.so
  0.25%        libc-2.28.so
  0.08%         interpreter
  0.06%  libpthread-2.28.so
  0.06%      hsdis-amd64.so
  0.02%         c1, level 3
....................................................................................................
100.00%  <totals>

PrintAssembly processed: 138526 total address lines.
Perf output processed (skipped 7.050 seconds):
 Column 1: cycles (5259 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 521 (60 bytes) 

             0x00007fbae073cd31: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fbae073ce32
             0x00007fbae073cd39: mov    ebp,0x1
             0x00007fbae073cd3e: test   r10d,r10d
         ╭   0x00007fbae073cd41: jne    0x00007fbae073cd94  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
         │   0x00007fbae073cd43: nop    WORD PTR [rax+rax*1+0x0]
         │   0x00007fbae073cd4c: data16 data16 xchg ax,ax  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@36 (line 235)
  4.91%  │↗  0x00007fbae073cd50: mov    r10,QWORD PTR [rsp+0x50]
  0.08%  ││  0x00007fbae073cd55: mov    r10d,DWORD PTR [r10+0x18]
         ││                                                ;*getfield lateInitString {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@1 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
  4.83%  ││  0x00007fbae073cd59: mov    r11d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@1 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fbae073cdf2
  0.21%  ││  0x00007fbae073cd5e: mov    edx,DWORD PTR [r12+r11*8+0xc]
         ││                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@4 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fbae073cde6
 11.49%  ││  0x00007fbae073cd63: movsx  ecx,BYTE PTR [r12+r10*8+0x14]
         ││                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::coder@7 (line 3258)
         ││                                                ; - java.lang.String::length@6 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
         ││  0x00007fbae073cd69: sar    edx,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@9 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::lateinit@13 (line 50)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@17 (line 232)
 13.75%  ││  0x00007fbae073cd6b: mov    rsi,QWORD PTR [rsp]
         ││  0x00007fbae073cd6f: call   0x00007fbad8c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.08%  ││  0x00007fbae073cd74: mov    r10,QWORD PTR [rsp+0x40]
  5.36%  ││  0x00007fbae073cd79: movzx  r10d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
  4.91%  ││  0x00007fbae073cd81: mov    r11,QWORD PTR [r15+0x108]
  0.02%  ││  0x00007fbae073cd88: add    rbp,0x1            ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@33 (line 234)
  4.89%  ││  0x00007fbae073cd8c: test   DWORD PTR [r11],eax  ;   {poll}
         ││  0x00007fbae073cd8f: test   r10d,r10d
         │╰  0x00007fbae073cd92: je     0x00007fbae073cd50  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@36 (line 235)
         ↘   0x00007fbae073cd94: movabs r10,0x7fbaf576ea00
             0x00007fbae073cd9e: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub@37 (line 235)
             0x00007fbae073cda1: mov    r10,QWORD PTR [rsp+0x48]
             0x00007fbae073cda6: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
 50.50%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 486 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fbae0739220: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fbae0739224: movabs r12,0x800000000
            0x00007fbae073922e: add    r10,r12
            0x00007fbae0739231: xor    r12,r12
            0x00007fbae0739234: cmp    rax,r10
            0x00007fbae0739237: jne    0x00007fbad8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fbae073923d: data16 xchg ax,ax
          [Verified Entry Point]
  4.72%     0x00007fbae0739240: mov    DWORD PTR [rsp-0x14000],eax
  4.98%     0x00007fbae0739247: push   rbp
  4.75%     0x00007fbae0739248: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  4.98%     0x00007fbae073924c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
            0x00007fbae0739253: mov    r8d,edx
  4.60%     0x00007fbae0739256: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  0.02%     0x00007fbae073925d: mov    r9d,edx
  4.73%     0x00007fbae0739260: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.02%     0x00007fbae0739263: cmp    r9d,r8d
         ╭  0x00007fbae0739266: je     0x00007fbae0739278  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  4.73%  │  0x00007fbae0739268: add    rsp,0x20
         │  0x00007fbae073926c: pop    rbp
  5.19%  │  0x00007fbae073926d: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007fbae0739274: test   DWORD PTR [r10],eax  ;   {poll_return}
  5.12%  │  0x00007fbae0739277: ret    
         ↘  0x00007fbae0739278: mov    rbp,rsi
            0x00007fbae073927b: mov    DWORD PTR [rsp],edx
            0x00007fbae073927e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fbae0739283: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fbae0739288: mov    esi,0xffffff4d
            0x00007fbae073928d: xchg   ax,ax
            0x00007fbae073928f: call   0x00007fbad8c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 43.85%  <total for region 2>

....[Hottest Regions]...............................................................................
 50.50%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 521 (60 bytes) 
 43.85%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 486 (55 bytes) 
  2.93%              kernel  [unknown] (6 bytes) 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (41 bytes) 
  0.13%              kernel  [unknown] (30 bytes) 
  0.13%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (34 bytes) 
  0.06%              kernel  [unknown] (30 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (6 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (7 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (4 bytes) 
  0.04%         interpreter  method entry point (kind = zerolocals)  (0 bytes) 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (14 bytes) 
  1.62%  <...other 83 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 50.50%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_lateinit_jmhTest::lateinit_avgt_jmhStub, version 521 
 43.85%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 486 
  4.51%              kernel  [unknown] 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%      hsdis-amd64.so  print_insn 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%        libc-2.28.so  vfprintf 
  0.04%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%  libpthread-2.28.so  __pthread_enable_asynccancel 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.02%        libc-2.28.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.02%  libpthread-2.28.so  __pthread_mutex_unlock 
  0.02%           libjvm.so  _ZN15SignatureStream18next_non_primitiveEi 
  0.02%        libc-2.28.so  _IO_fflush 
  0.02%           libjvm.so  _ZN10Dictionary4findEjP6Symbol6Handle 
  0.02%      hsdis-amd64.so  putop 
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%           libjvm.so  _ZN12outputStream5printEPKcz 
  0.42%  <...other 22 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.35%         c2, level 4
  4.51%              kernel
  0.59%           libjvm.so
  0.25%        libc-2.28.so
  0.11%         interpreter
  0.10%      hsdis-amd64.so
  0.06%  libpthread-2.28.so
  0.02%         c1, level 3
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyKtBenchmark.maybeNull
# Parameters: (defaultValue = -1, value = 42)

# Run progress: 57.14% complete, ETA 00:01:54
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.591 ns/op
# Warmup Iteration   2: 4.231 ns/op
# Warmup Iteration   3: 4.180 ns/op
# Warmup Iteration   4: 3.793 ns/op
# Warmup Iteration   5: 3.797 ns/op
Iteration   1: 3.808 ns/op
Iteration   2: 3.922 ns/op
Iteration   3: 3.776 ns/op
Iteration   4: 3.769 ns/op
Iteration   5: 4.344 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 61.90% complete, ETA 00:01:41
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.831 ns/op
# Warmup Iteration   2: 3.303 ns/op
# Warmup Iteration   3: 3.150 ns/op
# Warmup Iteration   4: 3.162 ns/op
# Warmup Iteration   5: 3.141 ns/op
Iteration   1: 3.151 ns/op
Iteration   2: 3.105 ns/op
Iteration   3: 3.141 ns/op
Iteration   4: 3.091 ns/op
Iteration   5: 3.107 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 66.67% complete, ETA 00:01:28
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.513 ns/op
# Warmup Iteration   2: 4.467 ns/op
# Warmup Iteration   3: 4.314 ns/op
# Warmup Iteration   4: 4.358 ns/op
# Warmup Iteration   5: 4.345 ns/op
Iteration   1: 4.337 ns/op
Iteration   2: 4.311 ns/op
Iteration   3: 4.290 ns/op
Iteration   4: 4.334 ns/op
Iteration   5: 4.406 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyKtBenchmark.maybeNull":
  3.793 ±(99.9%) 0.577 ns/op [Average]
  (min, avg, max) = (3.091, 3.793, 4.406), stdev = 0.540
  CI (99.9%): [3.216, 4.370] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyKtBenchmark.maybeNull:·asm":
PrintAssembly processed: 139265 total address lines.
Perf output processed (skipped 7.062 seconds):
 Column 1: cycles (5196 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 520 (137 bytes) 

             0x00007f9eb40ebcac: mov    r8,QWORD PTR [rsp+0x40]
             0x00007f9eb40ebcb1: movzx  r11d,BYTE PTR [r8+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f9eb40ebfb2
             0x00007f9eb40ebcb9: test   r11d,r11d
             0x00007f9eb40ebcbc: jne    0x00007f9eb40ebdee  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
             0x00007f9eb40ebcc2: mov    ebx,0x1
         ╭   0x00007f9eb40ebcc7: jmp    0x00007f9eb40ebd28
         │   0x00007f9eb40ebcc9: nop    DWORD PTR [rax+0x0]
  3.48%  │↗  0x00007f9eb40ebcd0: movsxd r10,ebp
  0.33%  ││  0x00007f9eb40ebcd3: movabs r11,0x71bd1eb08    ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x000000071bd1eb08})}
  3.89%  ││  0x00007f9eb40ebcdd: mov    r11d,DWORD PTR [r11+r10*4+0x210]
  2.04%  ││  0x00007f9eb40ebce5: lea    rdx,[r12+r11*8]    ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@11 (line 62)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  4.73%  ││  0x00007f9eb40ebce9: mov    QWORD PTR [rsp],rbx
  0.12%  ││  0x00007f9eb40ebced: mov    QWORD PTR [rsp+0x40],r8
  2.54%  ││  0x00007f9eb40ebcf2: mov    rbp,r9
  0.10%  ││  0x00007f9eb40ebcf5: mov    rsi,QWORD PTR [rsp+0x10]
  4.83%  ││  0x00007f9eb40ebcfa: nop
  0.10%  ││  0x00007f9eb40ebcfb: call   0x00007f9eac617f00  ; ImmutableOopMap{rbp=Oop [64]=Oop [72]=Oop [16]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.46%  ││  0x00007f9eb40ebd00: mov    r8,QWORD PTR [rsp+0x40]
  2.58%  ││  0x00007f9eb40ebd05: movzx  r11d,BYTE PTR [r8+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
  4.25%  ││  0x00007f9eb40ebd0d: mov    r10,QWORD PTR [r15+0x108]
  0.17%  ││  0x00007f9eb40ebd14: mov    rbx,QWORD PTR [rsp]
  2.89%  ││  0x00007f9eb40ebd18: add    rbx,0x1            ; ImmutableOopMap{r8=Oop rbp=Oop [72]=Oop [16]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
  0.23%  ││  0x00007f9eb40ebd1c: test   DWORD PTR [r10],eax  ;   {poll}
  5.16%  ││  0x00007f9eb40ebd1f: test   r11d,r11d
         ││  0x00007f9eb40ebd22: jne    0x00007f9eb40ebdf3  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@36 (line 235)
  0.10%  ↘│  0x00007f9eb40ebd28: mov    r9,rbp
  2.62%   │  0x00007f9eb40ebd2b: mov    r11d,DWORD PTR [rbp+0x1c]
          │                                                ;*getfield maybeNullString {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@1 (line 62)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  0.19%   │  0x00007f9eb40ebd2f: mov    r10d,DWORD PTR [r12+r11*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::length@1 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@8 (line 62)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f9eb40ebf66
  4.54%   │  0x00007f9eb40ebd34: mov    ebp,DWORD PTR [r12+r10*8+0xc]
          │                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::length@4 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@8 (line 62)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007f9eb40ebf5a
  0.13%   │  0x00007f9eb40ebd39: movsx  ecx,BYTE PTR [r12+r11*8+0x14]
          │                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::coder@7 (line 3258)
          │                                                ; - java.lang.String::length@6 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@8 (line 62)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  2.33%   │  0x00007f9eb40ebd3f: sar    ebp,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::length@9 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@8 (line 62)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  5.43%   │  0x00007f9eb40ebd41: cmp    ebp,0xffffff80
          │  0x00007f9eb40ebd44: jl     0x00007f9eb40ebe25  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@3 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@11 (line 62)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  2.52%   │  0x00007f9eb40ebd4a: cmp    ebp,0x7f
          │  0x00007f9eb40ebd4d: jg     0x00007f9eb40ebd9a  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@10 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@11 (line 62)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  0.27%   │  0x00007f9eb40ebd4f: mov    r10d,ebp
  4.18%   │  0x00007f9eb40ebd52: add    r10d,0x80          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@20 (line 1049)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@11 (line 62)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  0.08%   │  0x00007f9eb40ebd59: cmp    r10d,0x100
          ╰  0x00007f9eb40ebd60: jb     0x00007f9eb40ebcd0
             0x00007f9eb40ebd66: mov    esi,0xffffffe4
             0x00007f9eb40ebd6b: mov    rbp,r8
             0x00007f9eb40ebd6e: rex.W push QWORD PTR [rsp+0x48]
             0x00007f9eb40ebd73: rex.W pop QWORD PTR [rsp+0x40]
             0x00007f9eb40ebd78: rex.W push QWORD PTR [rsp+0x10]
             0x00007f9eb40ebd7d: rex.W pop QWORD PTR [rsp+0x48]
....................................................................................................
 60.28%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 487 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f9eb40e82c0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f9eb40e82c4: movabs r12,0x800000000
            0x00007f9eb40e82ce: add    r10,r12
            0x00007f9eb40e82d1: xor    r12,r12
            0x00007f9eb40e82d4: cmp    rax,r10
            0x00007f9eb40e82d7: jne    0x00007f9eac617c80  ;   {runtime_call ic_miss_stub}
            0x00007f9eb40e82dd: data16 xchg ax,ax
          [Verified Entry Point]
  2.66%     0x00007f9eb40e82e0: mov    DWORD PTR [rsp-0x14000],eax
  4.52%     0x00007f9eb40e82e7: push   rbp
  2.66%     0x00007f9eb40e82e8: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  4.04%     0x00007f9eb40e82ec: mov    QWORD PTR [rsp],rdx
  0.12%     0x00007f9eb40e82f0: mov    QWORD PTR [rsp+0x8],rsi
  2.33%     0x00007f9eb40e82f5: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  0.13%     0x00007f9eb40e82fb: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  4.81%     0x00007f9eb40e8306: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  0.12%     0x00007f9eb40e830d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
  2.50%     0x00007f9eb40e8314: and    r11d,ebp
  0.04%     0x00007f9eb40e8317: test   r11d,r11d
         ╭  0x00007f9eb40e831a: je     0x00007f9eb40e832c  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  4.41%  │  0x00007f9eb40e831c: add    rsp,0x30
  0.12%  │  0x00007f9eb40e8320: pop    rbp
  2.56%  │  0x00007f9eb40e8321: mov    r10,QWORD PTR [r15+0x108]
  0.10%  │  0x00007f9eb40e8328: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.23%  │  0x00007f9eb40e832b: ret    
         ↘  0x00007f9eb40e832c: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f9eb40e8333: mov    r10,rbx
            0x00007f9eb40e8336: add    r10,0x20
            0x00007f9eb40e833a: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f9eb40e8341: jae    0x00007f9eb40e859e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f9eb40e8347: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 35.33%  <total for region 2>

....[Hottest Regions]...............................................................................
 60.28%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 520 (137 bytes) 
 35.33%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 487 (75 bytes) 
  1.81%              kernel  [unknown] (6 bytes) 
  0.19%              kernel  [unknown] (0 bytes) 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (49 bytes) 
  0.13%              kernel  [unknown] (37 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (6 bytes) 
  0.04%              kernel  [unknown] (19 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN2os17current_thread_idEv (1 bytes) 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm (3 bytes) 
  0.04%           libjvm.so  _ZN12stringStream5writeEPKcm (5 bytes) 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (14 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.54%  <...other 80 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 60.28%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 520 
 35.33%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 487 
  3.16%              kernel  [unknown] 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%           libjvm.so  _ZN12stringStream5writeEPKcm 
  0.04%        libc-2.28.so  _dl_addr 
  0.04%      hsdis-amd64.so  putop 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.04%           libjvm.so  _ZN2os17current_thread_idEv 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%           libjvm.so  _ZNK10CodeBuffer15locator_addressEi 
  0.02%         interpreter  invoke return entry points  
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%         c1, level 1  java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread, version 534 
  0.02%           libjvm.so  _ZNK6Method20line_number_from_bciEi 
  0.02%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%           libjvm.so  _ZN10StateSplit13as_StateSplitEv 
  0.02%           libjvm.so  _ZN13MallocTracker11record_freeEPv 
  0.02%           libjvm.so  _ZN12OopMapStream9find_nextEv 
  0.54%  <...other 28 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.61%         c2, level 4
  3.16%              kernel
  0.85%           libjvm.so
  0.15%        libc-2.28.so
  0.08%      hsdis-amd64.so
  0.08%         interpreter
  0.04%  libpthread-2.28.so
  0.02%         c1, level 1
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 141067 total address lines.
Perf output processed (skipped 7.209 seconds):
 Column 1: cycles (5170 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 495 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f14b87377c0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f14b87377c4: movabs r12,0x800000000
            0x00007f14b87377ce: add    r10,r12
            0x00007f14b87377d1: xor    r12,r12
            0x00007f14b87377d4: cmp    rax,r10
            0x00007f14b87377d7: jne    0x00007f14b0c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f14b87377dd: data16 xchg ax,ax
          [Verified Entry Point]
  3.27%     0x00007f14b87377e0: mov    DWORD PTR [rsp-0x14000],eax
  6.60%     0x00007f14b87377e7: push   rbp
  3.15%     0x00007f14b87377e8: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  7.06%     0x00007f14b87377ec: mov    QWORD PTR [rsp],rdx
  0.23%     0x00007f14b87377f0: mov    QWORD PTR [rsp+0x8],rsi
  3.15%     0x00007f14b87377f5: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  0.17%     0x00007f14b87377fb: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  7.33%     0x00007f14b8737806: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  2.34%     0x00007f14b873780d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
 12.19%     0x00007f14b8737814: and    r11d,ebp
  0.12%     0x00007f14b8737817: test   r11d,r11d
         ╭  0x00007f14b873781a: je     0x00007f14b873782c  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  2.94%  │  0x00007f14b873781c: add    rsp,0x30
  0.06%  │  0x00007f14b8737820: pop    rbp
  6.79%  │  0x00007f14b8737821: mov    r10,QWORD PTR [r15+0x108]
  0.10%  │  0x00007f14b8737828: test   DWORD PTR [r10],eax  ;   {poll_return}
  3.31%  │  0x00007f14b873782b: ret    
         ↘  0x00007f14b873782c: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f14b8737833: mov    r10,rbx
            0x00007f14b8737836: add    r10,0x20
            0x00007f14b873783a: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f14b8737841: jae    0x00007f14b8737a9e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f14b8737847: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 58.80%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 522 (59 bytes) 

            0x00007f14b873a724: mov    r8,QWORD PTR [rsp+0x40]
            0x00007f14b873a729: movzx  r11d,BYTE PTR [r8+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@30 (line 234)
                                                          ; implicit exception: dispatches to 0x00007f14b873a81a
            0x00007f14b873a731: test   r11d,r11d
            0x00007f14b873a734: jne    0x00007f14b873a7e6  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
            0x00007f14b873a73a: mov    ebp,0x1
            0x00007f14b873a73f: nop                       ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@36 (line 235)
  2.69%  ↗  0x00007f14b873a740: mov    r10,QWORD PTR [rsp+0x50]
  0.21%  │  0x00007f14b873a745: mov    r10d,DWORD PTR [r10+0x1c]
         │                                                ;*getfield maybeNullString {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@1 (line 62)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  6.91%  │  0x00007f14b873a749: test   r10d,r10d
         │  0x00007f14b873a74c: jne    0x00007f14b873a7b2  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@5 (line 62)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  0.14%  │  0x00007f14b873a74e: mov    QWORD PTR [rsp+0x40],r8
  2.75%  │  0x00007f14b873a753: mov    rsi,QWORD PTR [rsp]
  0.21%  │  0x00007f14b873a757: xor    edx,edx
  6.21%  │  0x00007f14b873a759: xchg   ax,ax
  0.08%  │  0x00007f14b873a75b: call   0x00007f14b0c68f00  ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [0]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@20 (line 232)
         │                                                ;   {optimized virtual_call}
  0.95%  │  0x00007f14b873a760: mov    r8,QWORD PTR [rsp+0x40]
  6.75%  │  0x00007f14b873a765: movzx  r10d,BYTE PTR [r8+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
  2.80%  │  0x00007f14b873a76d: mov    r11,QWORD PTR [r15+0x108]
  0.21%  │  0x00007f14b873a774: add    rbp,0x1            ; ImmutableOopMap{r8=Oop [72]=Oop [80]=Oop [0]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
  7.02%  │  0x00007f14b873a778: test   DWORD PTR [r11],eax  ;   {poll}
  0.19%  │  0x00007f14b873a77b: test   r10d,r10d
         ╰  0x00007f14b873a77e: je     0x00007f14b873a740  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@36 (line 235)
            0x00007f14b873a780: movabs r10,0x7f14d08d0a00
            0x00007f14b873a78a: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@37 (line 235)
            0x00007f14b873a78d: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f14b873a792: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@52 (line 237)
            0x00007f14b873a796: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@40 (line 235)
....................................................................................................
 37.12%  <total for region 2>

....[Hottest Regions]...............................................................................
 58.80%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 495 (75 bytes) 
 37.12%     c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 522 (59 bytes) 
  1.37%          kernel  [unknown] (5 bytes) 
  0.35%          kernel  [unknown] (28 bytes) 
  0.29%          kernel  [unknown] (30 bytes) 
  0.19%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (54 bytes) 
  0.04%          kernel  [unknown] (7 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (20 bytes) 
  0.04%          kernel  [unknown] (30 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (3 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (1 bytes) 
  0.04%       libjvm.so  _ZN12outputStream15update_positionEPKcm (12 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  0.02%          kernel  [unknown] (0 bytes) 
  1.39%  <...other 72 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 58.80%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 495 
 37.12%     c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 522 
  3.02%          kernel  [unknown] 
  0.19%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%  hsdis-amd64.so  print_insn 
  0.06%    libc-2.28.so  vfprintf 
  0.04%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%       libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%    libc-2.28.so  __strchr_avx2 
  0.04%       libjvm.so  _ZN12stringStream9as_stringEv 
  0.04%       libjvm.so  _ZN12outputStream15update_positionEPKcm 
  0.04%    libc-2.28.so  _IO_default_xsputn 
  0.02%    libc-2.28.so  __memmove_avx_unaligned_erms 
  0.02%       libjvm.so  _ZN11Instruction8as_LocalEv 
  0.02%       libjvm.so  jio_print 
  0.02%       libjvm.so  _ZN16LIR_OpVisitState5visitEP6LIR_Op 
  0.02%       libjvm.so  _ZN24DebugInformationRecorder27find_sharable_decode_offsetEi 
  0.02%       libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%    libc-2.28.so  _IO_fflush 
  0.02%       libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.35%  <...other 18 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.92%     c2, level 4
  3.02%          kernel
  0.68%       libjvm.so
  0.23%    libc-2.28.so
  0.08%  hsdis-amd64.so
  0.06%     interpreter
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 144918 total address lines.
Perf output processed (skipped 7.200 seconds):
 Column 1: cycles (5181 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 532 (147 bytes) 

            0x00007f15ac52072c: mov    r8,QWORD PTR [rsp+0x40]
            0x00007f15ac520731: movzx  r11d,BYTE PTR [r8+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@30 (line 234)
                                                          ; implicit exception: dispatches to 0x00007f15ac520a3a
            0x00007f15ac520739: test   r11d,r11d
            0x00007f15ac52073c: jne    0x00007f15ac52097a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
            0x00007f15ac520742: mov    ebx,0x1
            0x00007f15ac520747: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@36 (line 235)
  0.08%  ↗  0x00007f15ac520750: mov    r9,rbp
  2.78%  │  0x00007f15ac520753: mov    r11d,DWORD PTR [rbp+0x1c]
         │                                                ;*getfield maybeNullString {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@1 (line 62)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  0.02%  │  0x00007f15ac520757: mov    r10d,DWORD PTR [r12+r11*8+0xc]
         │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.String::length@1 (line 658)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@8 (line 62)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
         │                                                ; implicit exception: dispatches to 0x00007f15ac5209ee
  4.21%  │  0x00007f15ac52075c: mov    ebp,DWORD PTR [r12+r10*8+0xc]
         │                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.String::length@4 (line 658)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@8 (line 62)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
         │                                                ; implicit exception: dispatches to 0x00007f15ac5209e2
  0.25%  │  0x00007f15ac520761: movsx  ecx,BYTE PTR [r12+r11*8+0x14]
         │                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.String::coder@7 (line 3258)
         │                                                ; - java.lang.String::length@6 (line 658)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@8 (line 62)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  2.59%  │  0x00007f15ac520767: sar    ebp,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.String::length@9 (line 658)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@8 (line 62)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  4.52%  │  0x00007f15ac520769: cmp    ebp,0xffffff80
         │  0x00007f15ac52076c: jl     0x00007f15ac5208a6  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.Integer::valueOf@3 (line 1048)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@11 (line 62)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  2.43%  │  0x00007f15ac520772: cmp    ebp,0x7f
         │  0x00007f15ac520775: jg     0x00007f15ac52081e  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.Integer::valueOf@10 (line 1048)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@11 (line 62)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  0.10%  │  0x00007f15ac52077b: mov    r10d,ebp
  4.52%  │  0x00007f15ac52077e: add    r10d,0x80          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.Integer::valueOf@20 (line 1049)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@11 (line 62)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  0.06%  │  0x00007f15ac520785: cmp    r10d,0x100
         │  0x00007f15ac52078c: jae    0x00007f15ac520872
  4.13%  │  0x00007f15ac520792: movsxd r10,ebp
  0.14%  │  0x00007f15ac520795: movabs r11,0x71bd1eb08    ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x000000071bd1eb08})}
  4.07%  │  0x00007f15ac52079f: mov    r11d,DWORD PTR [r11+r10*4+0x210]
  1.80%  │  0x00007f15ac5207a7: lea    rdx,[r12+r11*8]    ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNull@11 (line 62)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@17 (line 232)
  4.86%  │  0x00007f15ac5207ab: mov    QWORD PTR [rsp],rbx
  0.04%  │  0x00007f15ac5207af: mov    QWORD PTR [rsp+0x40],r8
  2.39%  │  0x00007f15ac5207b4: mov    rbp,r9
         │  0x00007f15ac5207b7: mov    rsi,QWORD PTR [rsp+0x10]
  4.71%  │  0x00007f15ac5207bc: data16 xchg ax,ax
  0.02%  │  0x00007f15ac5207bf: call   0x00007f15a4a4bf00  ; ImmutableOopMap{rbp=Oop [64]=Oop [72]=Oop [16]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@20 (line 232)
         │                                                ;   {optimized virtual_call}
  0.29%  │  0x00007f15ac5207c4: mov    r8,QWORD PTR [rsp+0x40]
  2.70%  │  0x00007f15ac5207c9: movzx  r11d,BYTE PTR [r8+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
  4.50%  │  0x00007f15ac5207d1: mov    r10,QWORD PTR [r15+0x108]
  0.08%  │  0x00007f15ac5207d8: mov    rbx,QWORD PTR [rsp]
  3.15%  │  0x00007f15ac5207dc: add    rbx,0x1            ; ImmutableOopMap{r8=Oop rbp=Oop [72]=Oop [16]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@33 (line 234)
  0.02%  │  0x00007f15ac5207e0: test   DWORD PTR [r10],eax  ;   {poll}
  4.36%  │  0x00007f15ac5207e3: test   r11d,r11d
         ╰  0x00007f15ac5207e6: je     0x00007f15ac520750  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@36 (line 235)
            0x00007f15ac5207ec: movabs r10,0x7f15c154ea00
            0x00007f15ac5207f6: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@37 (line 235)
            0x00007f15ac5207f9: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f15ac5207fe: mov    QWORD PTR [r10+0x18],rbx  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@52 (line 237)
            0x00007f15ac520802: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub@40 (line 235)
....................................................................................................
 58.79%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 507 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f15ac51cfc0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f15ac51cfc4: movabs r12,0x800000000
            0x00007f15ac51cfce: add    r10,r12
            0x00007f15ac51cfd1: xor    r12,r12
            0x00007f15ac51cfd4: cmp    rax,r10
            0x00007f15ac51cfd7: jne    0x00007f15a4a4bc80  ;   {runtime_call ic_miss_stub}
            0x00007f15ac51cfdd: data16 xchg ax,ax
          [Verified Entry Point]
  2.59%     0x00007f15ac51cfe0: mov    DWORD PTR [rsp-0x14000],eax
  4.34%     0x00007f15ac51cfe7: push   rbp
  2.76%     0x00007f15ac51cfe8: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  4.38%     0x00007f15ac51cfec: mov    QWORD PTR [rsp],rdx
  0.02%     0x00007f15ac51cff0: mov    QWORD PTR [rsp+0x8],rsi
  3.05%     0x00007f15ac51cff5: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  0.04%     0x00007f15ac51cffb: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  4.52%     0x00007f15ac51d006: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
            0x00007f15ac51d00d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
  2.59%     0x00007f15ac51d014: and    r11d,ebp
  0.02%     0x00007f15ac51d017: test   r11d,r11d
         ╭  0x00007f15ac51d01a: je     0x00007f15ac51d02c  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  4.92%  │  0x00007f15ac51d01c: add    rsp,0x30
  0.02%  │  0x00007f15ac51d020: pop    rbp
  3.17%  │  0x00007f15ac51d021: mov    r10,QWORD PTR [r15+0x108]
         │  0x00007f15ac51d028: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.59%  │  0x00007f15ac51d02b: ret    
         ↘  0x00007f15ac51d02c: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f15ac51d033: mov    r10,rbx
            0x00007f15ac51d036: add    r10,0x20
            0x00007f15ac51d03a: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f15ac51d041: jae    0x00007f15ac51d29e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f15ac51d047: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 37.00%  <total for region 2>

....[Hottest Regions]...............................................................................
 58.79%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 532 (147 bytes) 
 37.00%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 507 (75 bytes) 
  1.25%              kernel  [unknown] (6 bytes) 
  0.19%              kernel  [unknown] (51 bytes) 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (44 bytes) 
  0.15%              kernel  [unknown] (6 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (11 bytes) 
  0.06%              kernel  [unknown] (2 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ (6 bytes) 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (9 bytes) 
  1.74%  <...other 89 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 58.79%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNull_jmhTest::maybeNull_avgt_jmhStub, version 532 
 37.00%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 507 
  3.05%              kernel  [unknown] 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%        libc-2.28.so  vfprintf 
  0.06%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.06%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%        libc-2.28.so  _dl_addr 
  0.04%        libc-2.28.so  __strchrnul_avx2 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%         interpreter  method entry point (kind = zerolocals)  
  0.04%        libc-2.28.so  _IO_fwrite 
  0.02%        libc-2.28.so  __memmove_avx_unaligned_erms 
  0.02%         interpreter  fast_zputfield  213 fast_zputfield  
  0.02%           libjvm.so  _ZN11Compilation8emit_lirEv 
  0.02%      hsdis-amd64.so  oappend 
  0.02%      hsdis-amd64.so  putop 
  0.02%           libjvm.so  _ZNK17MachSpillCopyNode9ideal_regEv 
  0.02%           libjvm.so  _ZN12ConstantPool22klass_ref_at_noresolveEi 
  0.02%                      <unknown> 
  0.42%  <...other 22 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.79%         c2, level 4
  3.05%              kernel
  0.60%           libjvm.so
  0.27%        libc-2.28.so
  0.14%         interpreter
  0.08%      hsdis-amd64.so
  0.02%                    
  0.02%  libpthread-2.28.so
  0.02%         c1, level 3
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyKtBenchmark.maybeNullThrowException
# Parameters: (defaultValue = -1, value = 42)

# Run progress: 71.43% complete, ETA 00:01:16
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.508 ns/op
# Warmup Iteration   2: 3.840 ns/op
# Warmup Iteration   3: 4.493 ns/op
# Warmup Iteration   4: 3.833 ns/op
# Warmup Iteration   5: 4.269 ns/op
Iteration   1: 4.380 ns/op
Iteration   2: 3.733 ns/op
Iteration   3: 4.270 ns/op
Iteration   4: 4.322 ns/op
Iteration   5: 4.382 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 76.19% complete, ETA 00:01:03
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: <failure>

kotlin.KotlinNullPointerException
	at org.ib.benchmark.NullSafetyKtBenchmark.maybeNullThrowException(NullSafetyKtBenchmark.kt:68)
	at org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest.maybeNullThrowException_avgt_jmhStub(NullSafetyKtBenchmark_maybeNullThrowException_jmhTest.java:232)
	at org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest.maybeNullThrowException_AverageTime(NullSafetyKtBenchmark_maybeNullThrowException_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)



# Run progress: 80.95% complete, ETA 00:00:48
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4.447 ns/op
# Warmup Iteration   2: 4.280 ns/op
# Warmup Iteration   3: 3.789 ns/op
# Warmup Iteration   4: 3.799 ns/op
# Warmup Iteration   5: 3.815 ns/op
Iteration   1: 3.840 ns/op
Iteration   2: 3.821 ns/op
Iteration   3: 3.781 ns/op
Iteration   4: 3.767 ns/op
Iteration   5: 3.885 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyKtBenchmark.maybeNullThrowException":
  4.018 ±(99.9%) 0.424 ns/op [Average]
  (min, avg, max) = (3.733, 4.018, 4.382), stdev = 0.281
  CI (99.9%): [3.594, 4.442] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyKtBenchmark.maybeNullThrowException:·asm":
PrintAssembly processed: 138841 total address lines.
Perf output processed (skipped 7.206 seconds):
 Column 1: cycles (5143 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub, version 519 (147 bytes) 

            0x00007f7f6873d42c: mov    r8,QWORD PTR [rsp+0x40]
            0x00007f7f6873d431: movzx  r11d,BYTE PTR [r8+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@30 (line 234)
                                                          ; implicit exception: dispatches to 0x00007f7f6873d73e
            0x00007f7f6873d439: test   r11d,r11d
            0x00007f7f6873d43c: jne    0x00007f7f6873d642  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@33 (line 234)
            0x00007f7f6873d442: mov    ebx,0x1
            0x00007f7f6873d447: nop    WORD PTR [rax+rax*1+0x0]  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@36 (line 235)
  0.06%  ↗  0x00007f7f6873d450: mov    r9,rbp
  2.70%  │  0x00007f7f6873d453: mov    r11d,DWORD PTR [rbp+0x1c]
         │                                                ;*getfield maybeNullString {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@1 (line 68)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  0.02%  │  0x00007f7f6873d457: mov    r10d,DWORD PTR [r12+r11*8+0xc]
         │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.String::length@1 (line 658)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 68)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
         │                                                ; implicit exception: dispatches to 0x00007f7f6873d6f2
  4.39%  │  0x00007f7f6873d45c: mov    ebp,DWORD PTR [r12+r10*8+0xc]
         │                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.String::length@4 (line 658)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 68)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
         │                                                ; implicit exception: dispatches to 0x00007f7f6873d6e6
  0.17%  │  0x00007f7f6873d461: movsx  ecx,BYTE PTR [r12+r11*8+0x14]
         │                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.String::coder@7 (line 3258)
         │                                                ; - java.lang.String::length@6 (line 658)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 68)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  3.05%  │  0x00007f7f6873d467: sar    ebp,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.String::length@9 (line 658)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 68)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  4.82%  │  0x00007f7f6873d469: cmp    ebp,0xffffff80
         │  0x00007f7f6873d46c: jl     0x00007f7f6873d5a6  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.Integer::valueOf@3 (line 1048)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 68)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  2.99%  │  0x00007f7f6873d472: cmp    ebp,0x7f
         │  0x00007f7f6873d475: jg     0x00007f7f6873d51e  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.Integer::valueOf@10 (line 1048)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 68)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  0.14%  │  0x00007f7f6873d47b: mov    r10d,ebp
  4.02%  │  0x00007f7f6873d47e: add    r10d,0x80          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - java.lang.Integer::valueOf@20 (line 1049)
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 68)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
         │  0x00007f7f6873d485: cmp    r10d,0x100
         │  0x00007f7f6873d48c: jae    0x00007f7f6873d572
  3.97%  │  0x00007f7f6873d492: movsxd r10,ebp
  0.14%  │  0x00007f7f6873d495: movabs r11,0x71bd1eb08    ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x000000071bd1eb08})}
  4.20%  │  0x00007f7f6873d49f: mov    r11d,DWORD PTR [r11+r10*4+0x210]
  2.35%  │  0x00007f7f6873d4a7: lea    rdx,[r12+r11*8]    ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 68)
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  5.19%  │  0x00007f7f6873d4ab: mov    QWORD PTR [rsp],rbx
         │  0x00007f7f6873d4af: mov    QWORD PTR [rsp+0x40],r8
  2.57%  │  0x00007f7f6873d4b4: mov    rbp,r9
  0.08%  │  0x00007f7f6873d4b7: mov    rsi,QWORD PTR [rsp+0x10]
  4.55%  │  0x00007f7f6873d4bc: data16 xchg ax,ax
         │  0x00007f7f6873d4bf: call   0x00007f7f60c68f00  ; ImmutableOopMap{rbp=Oop [64]=Oop [72]=Oop [16]=Oop }
         │                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@20 (line 232)
         │                                                ;   {optimized virtual_call}
  0.23%  │  0x00007f7f6873d4c4: mov    r8,QWORD PTR [rsp+0x40]
  2.66%  │  0x00007f7f6873d4c9: movzx  r11d,BYTE PTR [r8+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@33 (line 234)
  4.39%  │  0x00007f7f6873d4d1: mov    r10,QWORD PTR [r15+0x108]
  0.06%  │  0x00007f7f6873d4d8: mov    rbx,QWORD PTR [rsp]
  2.70%  │  0x00007f7f6873d4dc: add    rbx,0x1            ; ImmutableOopMap{r8=Oop rbp=Oop [72]=Oop [16]=Oop }
         │                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@33 (line 234)
  0.02%  │  0x00007f7f6873d4e0: test   DWORD PTR [r10],eax  ;   {poll}
  4.67%  │  0x00007f7f6873d4e3: test   r11d,r11d
         ╰  0x00007f7f6873d4e6: je     0x00007f7f6873d450  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@36 (line 235)
            0x00007f7f6873d4ec: movabs r10,0x7f7f7fe65a00
            0x00007f7f6873d4f6: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@37 (line 235)
            0x00007f7f6873d4f9: mov    r10,QWORD PTR [rsp+0x48]
            0x00007f7f6873d4fe: mov    QWORD PTR [r10+0x18],rbx  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@52 (line 237)
            0x00007f7f6873d502: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@40 (line 235)
....................................................................................................
 60.16%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 482 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007f7f68736bc0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f7f68736bc4: movabs r12,0x800000000
            0x00007f7f68736bce: add    r10,r12
            0x00007f7f68736bd1: xor    r12,r12
            0x00007f7f68736bd4: cmp    rax,r10
            0x00007f7f68736bd7: jne    0x00007f7f60c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f7f68736bdd: data16 xchg ax,ax
          [Verified Entry Point]
  2.68%     0x00007f7f68736be0: mov    DWORD PTR [rsp-0x14000],eax
  4.08%     0x00007f7f68736be7: push   rbp
  2.74%     0x00007f7f68736be8: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  4.74%     0x00007f7f68736bec: mov    QWORD PTR [rsp],rdx
  0.02%     0x00007f7f68736bf0: mov    QWORD PTR [rsp+0x8],rsi
  2.68%     0x00007f7f68736bf5: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  0.06%     0x00007f7f68736bfb: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  5.04%     0x00007f7f68736c06: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  0.02%     0x00007f7f68736c0d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
  2.66%     0x00007f7f68736c14: and    r11d,ebp
            0x00007f7f68736c17: test   r11d,r11d
         ╭  0x00007f7f68736c1a: je     0x00007f7f68736c2c  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  4.14%  │  0x00007f7f68736c1c: add    rsp,0x30
  0.04%  │  0x00007f7f68736c20: pop    rbp
  2.92%  │  0x00007f7f68736c21: mov    r10,QWORD PTR [r15+0x108]
  0.04%  │  0x00007f7f68736c28: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.10%  │  0x00007f7f68736c2b: ret    
         ↘  0x00007f7f68736c2c: mov    rbx,QWORD PTR [r15+0x118]
            0x00007f7f68736c33: mov    r10,rbx
            0x00007f7f68736c36: add    r10,0x20
            0x00007f7f68736c3a: cmp    r10,QWORD PTR [r15+0x128]
            0x00007f7f68736c41: jae    0x00007f7f68736e9e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007f7f68736c47: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 35.97%  <total for region 2>

....[Hottest Regions]...............................................................................
 60.16%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub, version 519 (147 bytes) 
 35.97%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 482 (75 bytes) 
  0.80%              kernel  [unknown] (6 bytes) 
  0.21%              kernel  [unknown] (39 bytes) 
  0.17%              kernel  [unknown] (3 bytes) 
  0.16%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (41 bytes) 
  0.14%              kernel  [unknown] (3 bytes) 
  0.12%              kernel  [unknown] (11 bytes) 
  0.08%              kernel  [unknown] (30 bytes) 
  0.08%              kernel  [unknown] (30 bytes) 
  0.06%              kernel  [unknown] (23 bytes) 
  0.06%              kernel  [unknown] (10 bytes) 
  0.06%        libc-2.28.so  vfprintf (8 bytes) 
  0.04%              kernel  [unknown] (21 bytes) 
  0.04%              kernel  [unknown] (1 bytes) 
  0.04%        libc-2.28.so  __strchr_avx2 (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.73%  <...other 89 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 60.16%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub, version 519 
 35.97%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 482 
  2.72%              kernel  [unknown] 
  0.16%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.12%        libc-2.28.so  vfprintf 
  0.06%        libc-2.28.so  __strchr_avx2 
  0.04%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.04%        libc-2.28.so  _IO_fflush 
  0.04%           libjvm.so  _ZNK6Method20line_number_from_bciEi 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.04%           libjvm.so  _ZN7nmethod21print_code_comment_onEP12outputStreamiPhS2_ 
  0.04%         interpreter  invokevirtual  182 invokevirtual  
  0.04%           libjvm.so  _ZN10LinearScan15build_intervalsEv 
  0.02%      hsdis-amd64.so  append_seg 
  0.02%           libjvm.so  _ZNK19ImmutableOopMapPair8get_fromEPK18ImmutableOopMapSet 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%        libc-2.28.so  _dl_addr 
  0.02%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%  libpthread-2.28.so  __pthread_mutex_lock 
  0.02%           libjvm.so  _ZN16LinearScanWalker18split_before_usageEP8Intervalii 
  0.39%  <...other 20 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 96.13%         c2, level 4
  2.72%              kernel
  0.60%           libjvm.so
  0.33%        libc-2.28.so
  0.08%         interpreter
  0.06%      hsdis-amd64.so
  0.04%  libpthread-2.28.so
  0.02%         c1, level 3
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 143642 total address lines.
Perf output processed (skipped 7.222 seconds):
 Column 1: cycles (5228 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub, version 524 (137 bytes) 

             0x00007fbc6c73c92c: mov    r8,QWORD PTR [rsp+0x40]
             0x00007fbc6c73c931: movzx  r11d,BYTE PTR [r8+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fbc6c73cc32
             0x00007fbc6c73c939: test   r11d,r11d
             0x00007fbc6c73c93c: jne    0x00007fbc6c73ca6e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@33 (line 234)
             0x00007fbc6c73c942: mov    ebx,0x1
         ╭   0x00007fbc6c73c947: jmp    0x00007fbc6c73c9a8
         │   0x00007fbc6c73c949: nop    DWORD PTR [rax+0x0]
  3.19%  │↗  0x00007fbc6c73c950: movsxd r10,ebp
  0.23%  ││  0x00007fbc6c73c953: movabs r11,0x71bd1eb08    ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x000000071bd1eb08})}
  4.36%  ││  0x00007fbc6c73c95d: mov    r11d,DWORD PTR [r11+r10*4+0x210]
  1.97%  ││  0x00007fbc6c73c965: lea    rdx,[r12+r11*8]    ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 68)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  4.50%  ││  0x00007fbc6c73c969: mov    QWORD PTR [rsp],rbx
  0.25%  ││  0x00007fbc6c73c96d: mov    QWORD PTR [rsp+0x40],r8
  2.30%  ││  0x00007fbc6c73c972: mov    rbp,r9
  0.13%  ││  0x00007fbc6c73c975: mov    rsi,QWORD PTR [rsp+0x10]
  4.76%  ││  0x00007fbc6c73c97a: nop
  0.11%  ││  0x00007fbc6c73c97b: call   0x00007fbc64c68f00  ; ImmutableOopMap{rbp=Oop [64]=Oop [72]=Oop [16]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  0.42%  ││  0x00007fbc6c73c980: mov    r8,QWORD PTR [rsp+0x40]
  2.68%  ││  0x00007fbc6c73c985: movzx  r11d,BYTE PTR [r8+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@33 (line 234)
  4.67%  ││  0x00007fbc6c73c98d: mov    r10,QWORD PTR [r15+0x108]
  0.17%  ││  0x00007fbc6c73c994: mov    rbx,QWORD PTR [rsp]
  2.33%  ││  0x00007fbc6c73c998: add    rbx,0x1            ; ImmutableOopMap{r8=Oop rbp=Oop [72]=Oop [16]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@33 (line 234)
  0.11%  ││  0x00007fbc6c73c99c: test   DWORD PTR [r10],eax  ;   {poll}
  4.34%  ││  0x00007fbc6c73c99f: test   r11d,r11d
         ││  0x00007fbc6c73c9a2: jne    0x00007fbc6c73ca73  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@36 (line 235)
  0.27%  ↘│  0x00007fbc6c73c9a8: mov    r9,rbp
  2.26%   │  0x00007fbc6c73c9ab: mov    r11d,DWORD PTR [rbp+0x1c]
          │                                                ;*getfield maybeNullString {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@1 (line 68)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  0.19%   │  0x00007fbc6c73c9af: mov    r10d,DWORD PTR [r12+r11*8+0xc]
          │                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::length@1 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 68)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007fbc6c73cbe6
  4.86%   │  0x00007fbc6c73c9b4: mov    ebp,DWORD PTR [r12+r10*8+0xc]
          │                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::length@4 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 68)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
          │                                                ; implicit exception: dispatches to 0x00007fbc6c73cbda
  0.52%   │  0x00007fbc6c73c9b9: movsx  ecx,BYTE PTR [r12+r11*8+0x14]
          │                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::coder@7 (line 3258)
          │                                                ; - java.lang.String::length@6 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 68)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  2.66%   │  0x00007fbc6c73c9bf: sar    ebp,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.String::length@9 (line 658)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@11 (line 68)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  4.51%   │  0x00007fbc6c73c9c1: cmp    ebp,0xffffff80
          │  0x00007fbc6c73c9c4: jl     0x00007fbc6c73caa5  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@3 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 68)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  2.72%   │  0x00007fbc6c73c9ca: cmp    ebp,0x7f
          │  0x00007fbc6c73c9cd: jg     0x00007fbc6c73ca1a  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@10 (line 1048)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 68)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  0.27%   │  0x00007fbc6c73c9cf: mov    r10d,ebp
  4.44%   │  0x00007fbc6c73c9d2: add    r10d,0x80          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
          │                                                ; - java.lang.Integer::valueOf@20 (line 1049)
          │                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::maybeNullThrowException@14 (line 68)
          │                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub@17 (line 232)
  0.15%   │  0x00007fbc6c73c9d9: cmp    r10d,0x100
          ╰  0x00007fbc6c73c9e0: jb     0x00007fbc6c73c950
             0x00007fbc6c73c9e6: mov    esi,0xffffffe4
             0x00007fbc6c73c9eb: mov    rbp,r8
             0x00007fbc6c73c9ee: rex.W push QWORD PTR [rsp+0x48]
             0x00007fbc6c73c9f3: rex.W pop QWORD PTR [rsp+0x40]
             0x00007fbc6c73c9f8: rex.W push QWORD PTR [rsp+0x10]
             0x00007fbc6c73c9fd: rex.W pop QWORD PTR [rsp+0x48]
....................................................................................................
 59.37%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 499 (75 bytes) 

            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            #           [sp+0x40]  (sp of caller)
            0x00007fbc6c738e40: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fbc6c738e44: movabs r12,0x800000000
            0x00007fbc6c738e4e: add    r10,r12
            0x00007fbc6c738e51: xor    r12,r12
            0x00007fbc6c738e54: cmp    rax,r10
            0x00007fbc6c738e57: jne    0x00007fbc64c68c80  ;   {runtime_call ic_miss_stub}
            0x00007fbc6c738e5d: data16 xchg ax,ax
          [Verified Entry Point]
  2.43%     0x00007fbc6c738e60: mov    DWORD PTR [rsp-0x14000],eax
  4.46%     0x00007fbc6c738e67: push   rbp
  2.14%     0x00007fbc6c738e68: sub    rsp,0x30           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 307)
  4.86%     0x00007fbc6c738e6c: mov    QWORD PTR [rsp],rdx
  0.21%     0x00007fbc6c738e70: mov    QWORD PTR [rsp+0x8],rsi
  2.51%     0x00007fbc6c738e75: mov    ebp,DWORD PTR [rsi+0xc4]  ;*getfield tlrMask {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 307)
  0.08%     0x00007fbc6c738e7b: imul   r11d,DWORD PTR [rsi+0xc0],0x19660d
  4.27%     0x00007fbc6c738e86: add    r11d,0x3c6ef35f    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 308)
  0.15%     0x00007fbc6c738e8d: mov    DWORD PTR [rsi+0xc0],r11d
                                                          ;*putfield tlr {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 308)
  2.51%     0x00007fbc6c738e94: and    r11d,ebp
  0.17%     0x00007fbc6c738e97: test   r11d,r11d
         ╭  0x00007fbc6c738e9a: je     0x00007fbc6c738eac  ;*return {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@48 (line 314)
  4.50%  │  0x00007fbc6c738e9c: add    rsp,0x30
  0.13%  │  0x00007fbc6c738ea0: pop    rbp
  2.37%  │  0x00007fbc6c738ea1: mov    r10,QWORD PTR [r15+0x108]
  0.11%  │  0x00007fbc6c738ea8: test   DWORD PTR [r10],eax  ;   {poll_return}
  4.67%  │  0x00007fbc6c738eab: ret    
         ↘  0x00007fbc6c738eac: mov    rbx,QWORD PTR [r15+0x118]
            0x00007fbc6c738eb3: mov    r10,rbx
            0x00007fbc6c738eb6: add    r10,0x20
            0x00007fbc6c738eba: cmp    r10,QWORD PTR [r15+0x128]
            0x00007fbc6c738ec1: jae    0x00007fbc6c73911e  ;*putfield referent {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 399)
                                                          ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 395)
                                                          ; - java.lang.ref.WeakReference::&lt;init&gt;@2 (line 57)
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@33 (line 311)
            0x00007fbc6c738ec7: mov    QWORD PTR [r15+0x118],r10
....................................................................................................
 35.56%  <total for region 2>

....[Hottest Regions]...............................................................................
 59.37%     c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub, version 524 (137 bytes) 
 35.56%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 499 (75 bytes) 
  2.35%          kernel  [unknown] (6 bytes) 
  0.21%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (44 bytes) 
  0.19%          kernel  [unknown] (6 bytes) 
  0.11%          kernel  [unknown] (51 bytes) 
  0.08%          kernel  [unknown] (12 bytes) 
  0.08%          kernel  [unknown] (25 bytes) 
  0.06%          kernel  [unknown] (0 bytes) 
  0.06%          kernel  [unknown] (3 bytes) 
  0.06%       libjvm.so  _ZN10fileStream5writeEPKcm (22 bytes) 
  0.04%          kernel  [unknown] (7 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (3 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (23 bytes) 
  0.04%          kernel  [unknown] (0 bytes) 
  0.04%          kernel  [unknown] (18 bytes) 
  0.04%       libjvm.so  _ZL12event_to_envPvPKcS_ (32 bytes) 
  1.51%  <...other 79 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 59.37%     c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_maybeNullThrowException_jmhTest::maybeNullThrowException_avgt_jmhStub, version 524 
 35.56%     c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 499 
  4.02%          kernel  [unknown] 
  0.21%       libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.08%       libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%  hsdis-amd64.so  print_insn 
  0.04%       libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.04%       libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.04%    libc-2.28.so  vfprintf 
  0.02%       libjvm.so  _ZN22ComputeLinearScanOrder13compute_orderEP10BlockBegin 
  0.02%     interpreter  invoke return entry points  
  0.02%       libjvm.so  _ZN16LinearScanWalker25free_collect_inactive_anyEP8Interval 
  0.02%       libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%    libc-2.28.so  _IO_fflush 
  0.02%       libjvm.so  _ZN42ScanHazardPtrGatherProtectedThreadsClosure9do_threadEP6Thread 
  0.02%    libc-2.28.so  cfree@GLIBC_2.2.5 
  0.02%     c1, level 3  java.lang.StringUTF16::compress, version 358 
  0.02%       libjvm.so  _ZN10LinearScan7add_defEii15IntervalUseKind9BasicType 
  0.02%       libjvm.so  _ZN12GraphBuilder27iterate_bytecodes_for_blockEi 
  0.02%       libjvm.so  _ZNK6Symbol14print_value_onEP12outputStream 
  0.36%  <...other 19 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.93%     c2, level 4
  4.02%          kernel
  0.75%       libjvm.so
  0.11%    libc-2.28.so
  0.08%     interpreter
  0.06%  hsdis-amd64.so
  0.02%     c1, level 3
  0.02%      ld-2.28.so
....................................................................................................
 99.98%  <totals>



# JMH version: 1.21
# VM version: JDK 11.0.2, Java HotSpot(TM) 64-Bit Server VM, 11.0.2+9-LTS
# VM invoker: /usr/lib/jvm/jdk-11.0.2/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ib.benchmark.NullSafetyKtBenchmark.notNull
# Parameters: (defaultValue = -1, value = 42)

# Run progress: 85.71% complete, ETA 00:00:36
# Fork: 1 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.982 ns/op
# Warmup Iteration   2: 2.871 ns/op
# Warmup Iteration   3: 3.733 ns/op
# Warmup Iteration   4: 3.190 ns/op
# Warmup Iteration   5: 2.744 ns/op
Iteration   1: 2.743 ns/op
Iteration   2: 3.159 ns/op
Iteration   3: 3.179 ns/op
Iteration   4: 3.183 ns/op
Iteration   5: 3.245 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 90.48% complete, ETA 00:00:24
# Fork: 2 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.459 ns/op
# Warmup Iteration   2: 2.768 ns/op
# Warmup Iteration   3: 3.246 ns/op
# Warmup Iteration   4: 3.592 ns/op
# Warmup Iteration   5: 2.794 ns/op
Iteration   1: 2.813 ns/op
Iteration   2: 2.808 ns/op
Iteration   3: 2.810 ns/op
Iteration   4: 2.805 ns/op
Iteration   5: 2.862 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 95.24% complete, ETA 00:00:12
# Fork: 3 of 3
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3.921 ns/op
# Warmup Iteration   2: 3.165 ns/op
# Warmup Iteration   3: 3.657 ns/op
# Warmup Iteration   4: 3.161 ns/op
# Warmup Iteration   5: 2.777 ns/op
Iteration   1: 2.800 ns/op
Iteration   2: 2.737 ns/op
Iteration   3: 2.737 ns/op
Iteration   4: 2.768 ns/op
Iteration   5: 2.773 ns/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "org.ib.benchmark.NullSafetyKtBenchmark.notNull":
  2.895 ±(99.9%) 0.202 ns/op [Average]
  (min, avg, max) = (2.737, 2.895, 3.245), stdev = 0.189
  CI (99.9%): [2.693, 3.097] (assumes normal distribution)

Secondary result "org.ib.benchmark.NullSafetyKtBenchmark.notNull:·asm":
PrintAssembly processed: 141735 total address lines.
Perf output processed (skipped 7.125 seconds):
 Column 1: cycles (5183 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 527 (64 bytes) 

                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@20 (line 232)
                                                           ;   {optimized virtual_call}
             0x00007f07e073c32c: mov    r10,QWORD PTR [rsp]
             0x00007f07e073c330: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f07e073c42a
             0x00007f07e073c338: mov    ebp,0x1
             0x00007f07e073c33d: test   r10d,r10d
         ╭   0x00007f07e073c340: jne    0x00007f07e073c387  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@36 (line 235)
  0.62%  │↗  0x00007f07e073c342: mov    r10,QWORD PTR [rsp+0x40]
  4.34%  ││  0x00007f07e073c347: mov    r10d,DWORD PTR [r10+0x14]
         ││                                                ;*getfield notNullString {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@1 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  4.19%  ││  0x00007f07e073c34b: mov    r8d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@1 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f07e073c3da
  0.95%  ││  0x00007f07e073c350: mov    edx,DWORD PTR [r12+r8*8+0xc]
         ││                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@4 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f07e073c3e6
  6.42%  ││  0x00007f07e073c355: movsx  ecx,BYTE PTR [r12+r10*8+0x14]
         ││                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::coder@7 (line 3258)
         ││                                                ; - java.lang.String::length@6 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  4.11%  ││  0x00007f07e073c35b: sar    edx,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@9 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  9.61%  ││  0x00007f07e073c35d: mov    rsi,QWORD PTR [rsp+0x38]
  4.65%  ││  0x00007f07e073c362: nop
  0.64%  ││  0x00007f07e073c363: call   0x00007f07d8c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  4.38%  ││  0x00007f07e073c368: mov    r10,QWORD PTR [rsp]
  5.02%  ││  0x00007f07e073c36c: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@33 (line 234)
  0.75%  ││  0x00007f07e073c374: mov    r10,QWORD PTR [r15+0x108]
  4.90%  ││  0x00007f07e073c37b: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@33 (line 234)
  4.05%  ││  0x00007f07e073c37f: test   DWORD PTR [r10],eax  ;   {poll}
  0.68%  ││  0x00007f07e073c382: test   r11d,r11d
         │╰  0x00007f07e073c385: je     0x00007f07e073c342  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@36 (line 235)
         ↘   0x00007f07e073c387: movabs r10,0x7f07f6408a00
             0x00007f07e073c391: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@37 (line 235)
             0x00007f07e073c394: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f07e073c399: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@52 (line 237)
             0x00007f07e073c39d: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@40 (line 235)
....................................................................................................
 55.30%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 493 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f07e0738a20: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f07e0738a24: movabs r12,0x800000000
            0x00007f07e0738a2e: add    r10,r12
            0x00007f07e0738a31: xor    r12,r12
            0x00007f07e0738a34: cmp    rax,r10
            0x00007f07e0738a37: jne    0x00007f07d8c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f07e0738a3d: data16 xchg ax,ax
          [Verified Entry Point]
  5.09%     0x00007f07e0738a40: mov    DWORD PTR [rsp-0x14000],eax
  4.63%     0x00007f07e0738a47: push   rbp
  0.39%     0x00007f07e0738a48: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  9.55%     0x00007f07e0738a4c: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.89%     0x00007f07e0738a53: mov    r8d,edx
  0.60%     0x00007f07e0738a56: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  4.15%     0x00007f07e0738a5d: mov    r9d,edx
  4.15%     0x00007f07e0738a60: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.52%     0x00007f07e0738a63: cmp    r9d,r8d
         ╭  0x00007f07e0738a66: je     0x00007f07e0738a78  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.77%  │  0x00007f07e0738a68: add    rsp,0x20
  4.57%  │  0x00007f07e0738a6c: pop    rbp
  3.69%  │  0x00007f07e0738a6d: mov    r10,QWORD PTR [r15+0x108]
  0.83%  │  0x00007f07e0738a74: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.68%  │  0x00007f07e0738a77: ret    
         ↘  0x00007f07e0738a78: mov    rbp,rsi
            0x00007f07e0738a7b: mov    DWORD PTR [rsp],edx
            0x00007f07e0738a7e: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f07e0738a83: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f07e0738a88: mov    esi,0xffffff4d
            0x00007f07e0738a8d: xchg   ax,ax
            0x00007f07e0738a8f: call   0x00007f07d8c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 40.50%  <total for region 2>

....[Hottest Regions]...............................................................................
 55.30%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 527 (64 bytes) 
 40.50%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 493 (55 bytes) 
  1.79%              kernel  [unknown] (6 bytes) 
  0.21%              kernel  [unknown] (37 bytes) 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (43 bytes) 
  0.14%              kernel  [unknown] (0 bytes) 
  0.08%              kernel  [unknown] (31 bytes) 
  0.08%              kernel  [unknown] (1 bytes) 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm (5 bytes) 
  0.04%              kernel  [unknown] (31 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (11 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (27 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%        libc-2.28.so  syscall (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.31%  <...other 68 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 55.30%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 527 
 40.50%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 493 
  3.30%              kernel  [unknown] 
  0.17%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.06%        libc-2.28.so  vfprintf 
  0.06%        libc-2.28.so  _IO_default_xsputn 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%           libjvm.so  _ZN13InstanceKlass17find_method_indexEPK5ArrayIP6MethodEPK6SymbolS8_N5Klass18OverpassLookupModeENS9_16StaticLookupModeENS9_17PrivateLookupModeE.constprop.269 
  0.04%        libc-2.28.so  syscall 
  0.02%           libjvm.so  _ZN7ConNode4makeEPK4Type 
  0.02%           libjvm.so  _ZN14StringEventLog3logEP6ThreadPKcz 
  0.02%           libjvm.so  _ZN6Symbol18decrement_refcountEv 
  0.02%      hsdis-amd64.so  putop 
  0.02%           libjvm.so  _ZL12event_to_envPvPKcS_ 
  0.02%        libc-2.28.so  __printf_fp 
  0.02%         interpreter  iinc  132 iinc  
  0.02%           libjvm.so  _ZN16LinearScanWalker19init_vars_for_allocEP8Interval 
  0.02%           libjvm.so  _ZN8VMThread4loopEv 
  0.21%  <...other 11 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 95.79%         c2, level 4
  3.30%              kernel
  0.52%           libjvm.so
  0.19%        libc-2.28.so
  0.06%      hsdis-amd64.so
  0.06%         interpreter
  0.04%  libpthread-2.28.so
  0.02%         c1, level 3
....................................................................................................
 99.98%  <totals>

PrintAssembly processed: 140595 total address lines.
Perf output processed (skipped 7.171 seconds):
 Column 1: cycles (5158 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 531 (64 bytes) 

                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@20 (line 232)
                                                           ;   {optimized virtual_call}
             0x00007fc05473d22c: mov    r10,QWORD PTR [rsp]
             0x00007fc05473d230: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007fc05473d32a
             0x00007fc05473d238: mov    ebp,0x1
             0x00007fc05473d23d: test   r10d,r10d
         ╭   0x00007fc05473d240: jne    0x00007fc05473d287  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@36 (line 235)
  0.58%  │↗  0x00007fc05473d242: mov    r10,QWORD PTR [rsp+0x40]
  4.52%  ││  0x00007fc05473d247: mov    r10d,DWORD PTR [r10+0x14]
         ││                                                ;*getfield notNullString {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@1 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  4.34%  ││  0x00007fc05473d24b: mov    r8d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@1 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fc05473d2da
  0.89%  ││  0x00007fc05473d250: mov    edx,DWORD PTR [r12+r8*8+0xc]
         ││                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@4 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007fc05473d2e6
  7.04%  ││  0x00007fc05473d255: movsx  ecx,BYTE PTR [r12+r10*8+0x14]
         ││                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::coder@7 (line 3258)
         ││                                                ; - java.lang.String::length@6 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  4.19%  ││  0x00007fc05473d25b: sar    edx,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@9 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  9.75%  ││  0x00007fc05473d25d: mov    rsi,QWORD PTR [rsp+0x38]
  3.84%  ││  0x00007fc05473d262: nop
  0.74%  ││  0x00007fc05473d263: call   0x00007fc04cc68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  4.07%  ││  0x00007fc05473d268: mov    r10,QWORD PTR [rsp]
  4.94%  ││  0x00007fc05473d26c: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@33 (line 234)
  0.54%  ││  0x00007fc05473d274: mov    r10,QWORD PTR [r15+0x108]
  4.30%  ││  0x00007fc05473d27b: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@33 (line 234)
  4.69%  ││  0x00007fc05473d27f: test   DWORD PTR [r10],eax  ;   {poll}
  0.68%  ││  0x00007fc05473d282: test   r11d,r11d
         │╰  0x00007fc05473d285: je     0x00007fc05473d242  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@36 (line 235)
         ↘   0x00007fc05473d287: movabs r10,0x7fc06a812a00
             0x00007fc05473d291: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@37 (line 235)
             0x00007fc05473d294: mov    r10,QWORD PTR [rsp+0x30]
             0x00007fc05473d299: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@52 (line 237)
             0x00007fc05473d29d: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@40 (line 235)
....................................................................................................
 55.12%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 494 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007fc054738ca0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007fc054738ca4: movabs r12,0x800000000
            0x00007fc054738cae: add    r10,r12
            0x00007fc054738cb1: xor    r12,r12
            0x00007fc054738cb4: cmp    rax,r10
            0x00007fc054738cb7: jne    0x00007fc04cc68c80  ;   {runtime_call ic_miss_stub}
            0x00007fc054738cbd: data16 xchg ax,ax
          [Verified Entry Point]
  5.49%     0x00007fc054738cc0: mov    DWORD PTR [rsp-0x14000],eax
  5.10%     0x00007fc054738cc7: push   rbp
  0.52%     0x00007fc054738cc8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  8.55%     0x00007fc054738ccc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.56%     0x00007fc054738cd3: mov    r8d,edx
  0.79%     0x00007fc054738cd6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  4.44%     0x00007fc054738cdd: mov    r9d,edx
  3.88%     0x00007fc054738ce0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.76%     0x00007fc054738ce3: cmp    r9d,r8d
         ╭  0x00007fc054738ce6: je     0x00007fc054738cf8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.79%  │  0x00007fc054738ce8: add    rsp,0x20
  4.56%  │  0x00007fc054738cec: pop    rbp
  4.28%  │  0x00007fc054738ced: mov    r10,QWORD PTR [r15+0x108]
  0.64%  │  0x00007fc054738cf4: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.72%  │  0x00007fc054738cf7: ret    
         ↘  0x00007fc054738cf8: mov    rbp,rsi
            0x00007fc054738cfb: mov    DWORD PTR [rsp],edx
            0x00007fc054738cfe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007fc054738d03: mov    DWORD PTR [rsp+0x8],r8d
            0x00007fc054738d08: mov    esi,0xffffff4d
            0x00007fc054738d0d: xchg   ax,ax
            0x00007fc054738d0f: call   0x00007fc04cc6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 41.08%  <total for region 2>

....[Hottest Regions]...............................................................................
 55.12%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 531 (64 bytes) 
 41.08%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 494 (55 bytes) 
  1.45%              kernel  [unknown] (5 bytes) 
  0.23%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (47 bytes) 
  0.16%              kernel  [unknown] (30 bytes) 
  0.08%              kernel  [unknown] (15 bytes) 
  0.08%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (27 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.06%              kernel  [unknown] (1 bytes) 
  0.04%              kernel  [unknown] (8 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%        libc-2.28.so  _IO_default_xsputn (20 bytes) 
  0.04%          ld-2.28.so  __tls_get_addr (21 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.34%  <...other 69 warm regions...>
....................................................................................................
100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 55.12%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 531 
 41.08%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 494 
  2.69%              kernel  [unknown] 
  0.23%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.06%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.04%      hsdis-amd64.so  print_insn 
  0.04%        libc-2.28.so  vfprintf 
  0.04%          ld-2.28.so  __tls_get_addr 
  0.04%        libc-2.28.so  _IO_default_xsputn 
  0.04%           libjvm.so  _ZN13defaultStream5writeEPKcm 
  0.02%           libjvm.so  _ZN14ciMethodBlocks13make_block_atEi 
  0.02%           libjvm.so  d_count_templates_scopes 
  0.02%  libpthread-2.28.so  __pthread_mutex_unlock 
  0.02%      hsdis-amd64.so  print_operand_value 
  0.02%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.02%        libc-2.28.so  _dl_addr 
  0.02%         interpreter  method entry point (kind = native)  
  0.02%        libc-2.28.so  __strchr_avx2 
  0.02%           libjvm.so  _ZN20RangeCheckEliminator9get_boundEP11Instruction 
  0.02%           libjvm.so  SpinPause 
  0.43%  <...other 22 warm methods...>
....................................................................................................
100.00%  <totals>

....[Distribution by Source]........................................................................
 96.20%         c2, level 4
  2.69%              kernel
  0.70%           libjvm.so
  0.21%        libc-2.28.so
  0.08%      hsdis-amd64.so
  0.06%          ld-2.28.so
  0.02%  libpthread-2.28.so
  0.02%         interpreter
  0.02%    Unknown, level 0
....................................................................................................
100.00%  <totals>

PrintAssembly processed: 138642 total address lines.
Perf output processed (skipped 7.154 seconds):
 Column 1: cycles (5224 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
c2, level 4, org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 529 (64 bytes) 

                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@20 (line 232)
                                                           ;   {optimized virtual_call}
             0x00007f4afc73cf2c: mov    r10,QWORD PTR [rsp]
             0x00007f4afc73cf30: movzx  r10d,BYTE PTR [r10+0x94]  ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@30 (line 234)
                                                           ; implicit exception: dispatches to 0x00007f4afc73d02a
             0x00007f4afc73cf38: mov    ebp,0x1
             0x00007f4afc73cf3d: test   r10d,r10d
         ╭   0x00007f4afc73cf40: jne    0x00007f4afc73cf87  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@36 (line 235)
  0.65%  │↗  0x00007f4afc73cf42: mov    r10,QWORD PTR [rsp+0x40]
  4.25%  ││  0x00007f4afc73cf47: mov    r10d,DWORD PTR [r10+0x14]
         ││                                                ;*getfield notNullString {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@1 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  3.77%  ││  0x00007f4afc73cf4b: mov    r8d,DWORD PTR [r12+r10*8+0xc]
         ││                                                ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@1 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f4afc73cfda
  0.88%  ││  0x00007f4afc73cf50: mov    edx,DWORD PTR [r12+r8*8+0xc]
         ││                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@4 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
         ││                                                ; implicit exception: dispatches to 0x00007f4afc73cfe6
  7.14%  ││  0x00007f4afc73cf55: movsx  ecx,BYTE PTR [r12+r10*8+0x14]
         ││                                                ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::coder@7 (line 3258)
         ││                                                ; - java.lang.String::length@6 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
  4.10%  ││  0x00007f4afc73cf5b: sar    edx,cl             ;*ishr {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - java.lang.String::length@9 (line 658)
         ││                                                ; - org.ib.benchmark.NullSafetyKtBenchmark::notNull@4 (line 56)
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@17 (line 232)
 10.01%  ││  0x00007f4afc73cf5d: mov    rsi,QWORD PTR [rsp+0x38]
  4.50%  ││  0x00007f4afc73cf62: nop
  0.52%  ││  0x00007f4afc73cf63: call   0x00007f4af4c68f00  ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*invokevirtual consume {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@20 (line 232)
         ││                                                ;   {optimized virtual_call}
  4.17%  ││  0x00007f4afc73cf68: mov    r10,QWORD PTR [rsp]
  5.11%  ││  0x00007f4afc73cf6c: movzx  r11d,BYTE PTR [r10+0x94]  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@33 (line 234)
  0.54%  ││  0x00007f4afc73cf74: mov    r10,QWORD PTR [r15+0x108]
  4.46%  ││  0x00007f4afc73cf7b: add    rbp,0x1            ; ImmutableOopMap{[48]=Oop [56]=Oop [64]=Oop [0]=Oop }
         ││                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
         ││                                                ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@33 (line 234)
  4.56%  ││  0x00007f4afc73cf7f: test   DWORD PTR [r10],eax  ;   {poll}
  0.69%  ││  0x00007f4afc73cf82: test   r11d,r11d
         │╰  0x00007f4afc73cf85: je     0x00007f4afc73cf42  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
         │                                                 ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@36 (line 235)
         ↘   0x00007f4afc73cf87: movabs r10,0x7f4b12398a00
             0x00007f4afc73cf91: call   r10                ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@37 (line 235)
             0x00007f4afc73cf94: mov    r10,QWORD PTR [rsp+0x30]
             0x00007f4afc73cf99: mov    QWORD PTR [r10+0x18],rbp  ;*putfield measuredOps {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@52 (line 237)
             0x00007f4afc73cf9d: mov    QWORD PTR [r10+0x30],rax  ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0}
                                                           ; - org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub@40 (line 235)
....................................................................................................
 55.34%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, org.openjdk.jmh.infra.Blackhole::consume, version 497 (55 bytes) 

            # parm0:    rdx       = int
            #           [sp+0x30]  (sp of caller)
            0x00007f4afc7390a0: mov    r10d,DWORD PTR [rsi+0x8]
            0x00007f4afc7390a4: movabs r12,0x800000000
            0x00007f4afc7390ae: add    r10,r12
            0x00007f4afc7390b1: xor    r12,r12
            0x00007f4afc7390b4: cmp    rax,r10
            0x00007f4afc7390b7: jne    0x00007f4af4c68c80  ;   {runtime_call ic_miss_stub}
            0x00007f4afc7390bd: data16 xchg ax,ax
          [Verified Entry Point]
  5.11%     0x00007f4afc7390c0: mov    DWORD PTR [rsp-0x14000],eax
  4.94%     0x00007f4afc7390c7: push   rbp
  0.61%     0x00007f4afc7390c8: sub    rsp,0x20           ;*synchronization entry
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 378)
  8.04%     0x00007f4afc7390cc: mov    r10d,DWORD PTR [rsi+0xb0]
                                                          ;*getfield i1 {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 378)
  0.54%     0x00007f4afc7390d3: mov    r8d,edx
  0.73%     0x00007f4afc7390d6: xor    r8d,DWORD PTR [rsi+0xb8]  ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 380)
  4.67%     0x00007f4afc7390dd: mov    r9d,edx
  4.36%     0x00007f4afc7390e0: xor    r9d,r10d           ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@12 (line 380)
  0.80%     0x00007f4afc7390e3: cmp    r9d,r8d
         ╭  0x00007f4afc7390e6: je     0x00007f4afc7390f8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
         │                                                ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
  0.54%  │  0x00007f4afc7390e8: add    rsp,0x20
  4.29%  │  0x00007f4afc7390ec: pop    rbp
  3.79%  │  0x00007f4afc7390ed: mov    r10,QWORD PTR [r15+0x108]
  0.67%  │  0x00007f4afc7390f4: test   DWORD PTR [r10],eax  ;   {poll_return}
  0.54%  │  0x00007f4afc7390f7: ret    
         ↘  0x00007f4afc7390f8: mov    rbp,rsi
            0x00007f4afc7390fb: mov    DWORD PTR [rsp],edx
            0x00007f4afc7390fe: mov    DWORD PTR [rsp+0x4],r9d
            0x00007f4afc739103: mov    DWORD PTR [rsp+0x8],r8d
            0x00007f4afc739108: mov    esi,0xffffff4d
            0x00007f4afc73910d: xchg   ax,ax
            0x00007f4afc73910f: call   0x00007f4af4c6a900  ; ImmutableOopMap{rbp=Oop }
                                                          ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                          ; - org.openjdk.jmh.infra.Blackhole::consume@16 (line 380)
                                                          ;   {runtime_call UncommonTrapBlob}
....................................................................................................
 39.62%  <total for region 2>

....[Hottest Regions]...............................................................................
 55.34%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 529 (64 bytes) 
 39.62%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 497 (55 bytes) 
  2.64%              kernel  [unknown] (6 bytes) 
  0.19%              kernel  [unknown] (0 bytes) 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable (41 bytes) 
  0.11%              kernel  [unknown] (39 bytes) 
  0.08%              kernel  [unknown] (24 bytes) 
  0.06%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (3 bytes) 
  0.04%              kernel  [unknown] (6 bytes) 
  0.04%              kernel  [unknown] (7 bytes) 
  0.04%              kernel  [unknown] (9 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (0 bytes) 
  0.04%              kernel  [unknown] (9 bytes) 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (11 bytes) 
  0.04%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 (0 bytes) 
  0.04%        libc-2.28.so  syscall (2 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  0.02%              kernel  [unknown] (0 bytes) 
  1.36%  <...other 71 warm regions...>
....................................................................................................
 99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 55.34%         c2, level 4  org.ib.benchmark.generated.NullSafetyKtBenchmark_notNull_jmhTest::notNull_avgt_jmhStub, version 529 
 39.62%         c2, level 4  org.openjdk.jmh.infra.Blackhole::consume, version 497 
  4.15%              kernel  [unknown] 
  0.15%           libjvm.so  _ZN14ElfSymbolTable6lookupEPhPiS1_S1_P16ElfFuncDescTable 
  0.10%           libjvm.so  _ZN9xmlStream10write_textEPKcm.part.15 
  0.10%        libc-2.28.so  vfprintf 
  0.08%      hsdis-amd64.so  print_insn 
  0.04%      hsdis-amd64.so  putop 
  0.04%           libjvm.so  _ZN10fileStream5writeEPKcm 
  0.04%        libc-2.28.so  syscall 
  0.02%         interpreter  f2i  139 f2i  
  0.02%           libjvm.so  _ZN13GrowableArrayIP10ScopeValueE6appendERKS1_ 
  0.02%           libjvm.so  _ZN7LogicOp5visitEP18InstructionVisitor 
  0.02%           libjvm.so  _ZN12outputStream44do_vsnprintf_and_write_with_automatic_bufferEPKcP13__va_list_tagb 
  0.02%      hsdis-amd64.so  oappend 
  0.02%           libjvm.so  _ZN13RelocIterator10initializeEP14CompiledMethodPhS2_ 
  0.02%           libjvm.so  _ZN10Dictionary4findEjP6Symbol6Handle 
  0.02%        libc-2.28.so  cfree@GLIBC_2.2.5 
  0.02%           libjvm.so  _ZN14IntervalWalker7walk_toE13IntervalStatei.constprop.233 
  0.02%      hsdis-amd64.so  bfd_scan_arch 
  0.13%  <...other 7 warm methods...>
....................................................................................................
 99.98%  <totals>

....[Distribution by Source]........................................................................
 94.97%         c2, level 4
  4.15%              kernel
  0.48%           libjvm.so
  0.17%        libc-2.28.so
  0.15%      hsdis-amd64.so
  0.04%         interpreter
  0.02%  libpthread-2.28.so
....................................................................................................
 99.98%  <totals>



# Run complete. Total time: 00:04:15

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                           (defaultValue)  (value)  Mode  Cnt  Score   Error  Units
NullSafetyJavaBenchmark.elvis                                   -1       42  avgt   15  4.133 ± 0.245  ns/op
NullSafetyJavaBenchmark.elvis:·asm                              -1       42  avgt         NaN            ---
NullSafetyJavaBenchmark.ofNullable                              -1       42  avgt   15  4.201 ± 0.235  ns/op
NullSafetyJavaBenchmark.ofNullable:·asm                         -1       42  avgt         NaN            ---
NullSafetyKtBenchmark.elvis                                     -1       42  avgt   15  4.154 ± 0.205  ns/op
NullSafetyKtBenchmark.elvis:·asm                                -1       42  avgt         NaN            ---
NullSafetyKtBenchmark.lateinit                                  -1       42  avgt   15  2.844 ± 0.163  ns/op
NullSafetyKtBenchmark.lateinit:·asm                             -1       42  avgt         NaN            ---
NullSafetyKtBenchmark.maybeNull                                 -1       42  avgt   15  3.793 ± 0.577  ns/op
NullSafetyKtBenchmark.maybeNull:·asm                            -1       42  avgt         NaN            ---
NullSafetyKtBenchmark.maybeNullThrowException                   -1       42  avgt   10  4.018 ± 0.424  ns/op
NullSafetyKtBenchmark.maybeNullThrowException:·asm              -1       42  avgt         NaN            ---
NullSafetyKtBenchmark.notNull                                   -1       42  avgt   15  2.895 ± 0.202  ns/op
NullSafetyKtBenchmark.notNull:·asm                              -1       42  avgt         NaN            ---

Few thoughts:
    - Kotlin::elvis constructor offers the "same" performance as Java::ofNullable and Java::elvis
    - Kotlin::lateinit and Kotlin::notNull are similar, even if the lateinit version have additional not null checks
    - Weired or not, Kotlin compiles Kotlin::maybeNull into a method which needs further boxing operations
        - public final Integer maybeNull() vs. public final int notNull() !!!
        - this happens due to the fact it could be NULL hence Kotlin Compiler cannot further optimize it by relying on primitive types.
    - Kotlin elvis operator keeps the code nice and cleaner than any Java alternative
